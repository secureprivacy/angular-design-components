{
    "pipes": [],
    "interfaces": [
        {
            "name": "AdComponent",
            "id": "interface-AdComponent-f09aadf8803bec00a59786997a651d5a",
            "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/add-dynamic-component/add-dynamic.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit, ViewChild, ComponentFactoryResolver, OnDestroy, OnChanges, EventEmitter, Output } from '@angular/core';\n\nimport { AddDirective } from './add.directive';\nimport { AddItem } from './add-item';\n\nexport interface AdComponent {\n  data: any;\n  handler: any\n}\n\n@Component({\n  selector: 'app-add-dynamic',\n  template: `\n              <div class=\"add-dynamic-component\">\n                <ng-template adHost></ng-template>\n              </div>\n            `\n})\n\nexport class AddComponent implements OnInit {\n  @Input() component: AddItem;\n  @Output() handler: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(AddDirective, {static: true}) adHost: AddDirective;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  loadComponent() {\n    const adItem = this.component;\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(adItem.component);\n    const viewContainerRef = this.adHost.viewContainerRef;\n    const componentRef = viewContainerRef.createComponent<AdComponent>(componentFactory);\n    componentRef.instance.data = adItem.dataFromParent;\n    componentRef.instance.handler.subscribe(val => {\n      this.handler.emit(val);\n    });\n    componentRef.changeDetectorRef.detectChanges();\n    return componentRef\n  }\n\n  ngOnInit() {\n    this.loadComponent();\n  }\n}",
            "properties": [
                {
                    "name": "data",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "handler",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Card",
            "id": "interface-Card-a63d5aae730dcefb5dabbd28aff08ead",
            "file": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.ts",
            "type": "interface",
            "sourceCode": "import { AfterViewInit, Component, HostListener, Input, OnInit, ViewChild } from '@angular/core';\n\nconst MOBILE_VIEW = 798;\nconst CARD_MOBILE_VIEW = 415;\n\ninterface Card {\n  id: number,\n  policyTitle: string,\n  policyText: string,\n  text: string,\n  price: number,\n  imagePath: string\n}\n\n@Component({\n  selector: 'app-plan-builder-cards-list',\n  templateUrl: './plan-builder-cards-list.component.html',\n  styleUrls: ['./plan-builder-cards-list.component.scss']\n})\n\nexport class PlanBuilderCardsListComponent implements OnInit, AfterViewInit {\n  @Input() currency: string;\n  @Input() selectedCards: number[];\n  @Input() period: string;\n  @Input() cards: Card[];\n\n  isMobileForContainer: boolean;\n  isMobileForCard: boolean;\n\n  @ViewChild('container') container;\n\n  addToSelected(id: number) {\n    const isSelected = this.selectedCards.includes(id);\n    if (isSelected) {\n      this.selectedCards = this.selectedCards.filter(card => card !== id);\n    } else {\n      this.selectedCards = [...this.selectedCards, id];\n    }\n  }\n\n  setIsMobile() {\n    this.isMobileForContainer = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n    this.isMobileForCard = this.container.nativeElement.clientWidth < CARD_MOBILE_VIEW;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.setIsMobile();\n  }\n\n  detectIfSelected(id: number) {\n    return this.selectedCards.includes(id);\n  }\n\n  ngAfterViewInit() {\n    this.setIsMobile();\n  }\n\n  ngOnInit(): void {}\n}\n",
            "properties": [
                {
                    "name": "id",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "imagePath",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "policyText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "policyTitle",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Countries",
            "id": "interface-Countries-ba0df527d6a463a52b37700b719ec862",
            "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts",
            "type": "interface",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nimport { \n  AfricaCodes, AustraliaCodes, NorthAmericaCodes, SouthAmericaCodes, EuropeCodes, AsiaCodes \n} from './countriesCodes';\n\ninterface Country {\n  id: string, \n  value: number, \n  name: string \n}\n\ninterface Countries {\n  europe: Country[],\n  northAmerica: Country[],\n  southAmerica: Country[],\n  asia: Country[],\n  australia: Country[],\n  africa: Country[]\n}\n\nconst MAP_COLOR = \"rgba(1, 25, 73, 0.2)\";\nconst COUNTRY_HOVER_COLOR = \"rgb(22, 97, 60)\";\nconst SELECTED_COUNTRY_COLOR = \"rgba(1, 25, 73, 0.75)\";\n\n@Component({\n  selector: 'app-map-chart',\n  templateUrl: './map-chart.component.html',\n  styleUrls: ['./map-chart.component.scss']\n})\n\nexport class MapChartComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() countriesData: Countries;\n\n  chart;\n  polygonSeries;\n  polygonTemplate;\n  activeCountry: string = '';\n  allCountriesData: Country[] = [];\n  isTipVisible: boolean = false;\n  tipsTop: number = 0;\n  tipsLeft: number = 0;\n  tipsData: Country[] = [];\n  mapHeight: number;\n\n  @ViewChild('mapChart') map: ElementRef;\n  \n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    const height = this.map.nativeElement.clientWidth * 0.7;\n    this.mapHeight = height > 500 ? 500 : height;\n  }\n\n  createChart(region: string) {  \n    this.chart = null\n    this.chart = am4core.create(\"chartdiv\", am4maps.MapChart)\n    this.chart.geodata = am4geodata_worldLow;\n    this.chart.projection = new am4maps.projections.Miller();\n    this.polygonSeries = this.chart.series.push(new am4maps.MapPolygonSeries());\n    this.polygonSeries.useGeodata = true;\n    this.polygonTemplate = this.polygonSeries.mapPolygons.template;\n    this.polygonTemplate.tooltipText = \"\";\n    this.polygonTemplate.fill = am4core.color(MAP_COLOR)\n    const hs = this.polygonTemplate.states.create(\"hover\");\n    hs.properties.fill = am4core.color(COUNTRY_HOVER_COLOR);\n\n    switch(region) {\n      case 'World': \n        this.polygonSeries.exclude = [\"AQ\"]\n        this.polygonSeries.data = [...this.allCountriesData];\n        this.tipsData = [...this.allCountriesData];\n      break;\n      case 'Europe': \n        this.polygonSeries.include = [...EuropeCodes];\n        this.polygonSeries.data = [...this.countriesData.europe];\n        this.tipsData = [...this.countriesData.europe];\n        this.chart.deltaLongitude = -120;\n        this.chart.homeZoomLevel = 1.3;\n      break;\n      case 'Asia': \n        this.polygonSeries.include = [...AsiaCodes];\n        this.polygonSeries.data = [...this.countriesData.asia];\n        this.tipsData = [...this.countriesData.asia];\n        this.chart.deltaLongitude = -130;\n      break;\n      case 'North America': \n        this.polygonSeries.include = [...NorthAmericaCodes];\n        this.polygonSeries.data = [...this.countriesData.northAmerica];\n        this.tipsData = [...this.countriesData.northAmerica];\n      break;\n      case 'South America': \n        this.polygonSeries.include = [...SouthAmericaCodes];\n        this.polygonSeries.data = [...this.countriesData.southAmerica];\n        this.tipsData = [...this.countriesData.southAmerica];\n      break;\n      case 'Australia': \n        this.polygonSeries.include = [...AustraliaCodes];\n        this.polygonSeries.data = [...this.countriesData.australia];\n        this.tipsData = [...this.countriesData.australia];\n        this.chart.deltaLongitude = -160;\n        this.chart.homeZoomLevel = 2;\n      break;\n      case 'Africa': \n        this.polygonSeries.include = [...AfricaCodes];\n        this.polygonSeries.data = [...this.countriesData.africa];\n        this.tipsData = [...this.countriesData.africa];\n      break;\n    }\n\n    this.polygonSeries.data.forEach(element => element.fill = am4core.color(SELECTED_COUNTRY_COLOR));\n    this.polygonTemplate.propertyFields.fill = \"fill\";\n \n    const setActive = (value, top, left) => {\n      const isCountryIncludedToTheList = this.allCountriesData.findIndex(country => country.id === value);\n      if (isCountryIncludedToTheList !== -1) {\n        this.activeCountry = value;\n        this.isTipVisible = true;\n        this.tipsTop = top - 24 - (16 * this.tipsData.length + 8 * (this.tipsData.length + 1)) - 20;\n        if (left - 110 > 0) {\n          if (left + 110 > this.map.nativeElement.clientWidth) {\n            this.tipsLeft = this.map.nativeElement.clientWidth - 220;\n          } else {\n            this.tipsLeft = left - 110;\n          }\n        } else {\n          this.tipsLeft = 0;\n        }\n      }\n    }\n\n    const setIsTipsVisible = (value) => {\n      this.isTipVisible = value;\n    }\n\n    this.polygonTemplate.events.on(\"over\", function(ev) {\n      const active = ev.target.dataItem.dataContext;\n      setActive(active.id, ev.event.pageY,ev.event.pageX);\n    })\n\n    this.polygonTemplate.events.on(\"out\", function(ev) {\n      setIsTipsVisible(false);\n    })\n  }\n\n  ngAfterViewInit() {\n    const height = this.map.nativeElement.clientWidth * 0.7;\n    this.mapHeight = height > 500 ? 500 : height;\n  }\n\n  ngOnChanges() {\n    this.createChart('World');\n  }\n\n  ngOnInit() {\n    let formattedCountriesData = [];\n    Object.values(this.countriesData).forEach(region => { \n      formattedCountriesData = [...formattedCountriesData,...region]\n    })\n    this.allCountriesData = formattedCountriesData;\n    this.createChart('World');\n  }\n}\n",
            "properties": [
                {
                    "name": "africa",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "asia",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "australia",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "europe",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "northAmerica",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "southAmerica",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Country",
            "id": "interface-Country-ba0df527d6a463a52b37700b719ec862",
            "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts",
            "type": "interface",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nimport { \n  AfricaCodes, AustraliaCodes, NorthAmericaCodes, SouthAmericaCodes, EuropeCodes, AsiaCodes \n} from './countriesCodes';\n\ninterface Country {\n  id: string, \n  value: number, \n  name: string \n}\n\ninterface Countries {\n  europe: Country[],\n  northAmerica: Country[],\n  southAmerica: Country[],\n  asia: Country[],\n  australia: Country[],\n  africa: Country[]\n}\n\nconst MAP_COLOR = \"rgba(1, 25, 73, 0.2)\";\nconst COUNTRY_HOVER_COLOR = \"rgb(22, 97, 60)\";\nconst SELECTED_COUNTRY_COLOR = \"rgba(1, 25, 73, 0.75)\";\n\n@Component({\n  selector: 'app-map-chart',\n  templateUrl: './map-chart.component.html',\n  styleUrls: ['./map-chart.component.scss']\n})\n\nexport class MapChartComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() countriesData: Countries;\n\n  chart;\n  polygonSeries;\n  polygonTemplate;\n  activeCountry: string = '';\n  allCountriesData: Country[] = [];\n  isTipVisible: boolean = false;\n  tipsTop: number = 0;\n  tipsLeft: number = 0;\n  tipsData: Country[] = [];\n  mapHeight: number;\n\n  @ViewChild('mapChart') map: ElementRef;\n  \n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    const height = this.map.nativeElement.clientWidth * 0.7;\n    this.mapHeight = height > 500 ? 500 : height;\n  }\n\n  createChart(region: string) {  \n    this.chart = null\n    this.chart = am4core.create(\"chartdiv\", am4maps.MapChart)\n    this.chart.geodata = am4geodata_worldLow;\n    this.chart.projection = new am4maps.projections.Miller();\n    this.polygonSeries = this.chart.series.push(new am4maps.MapPolygonSeries());\n    this.polygonSeries.useGeodata = true;\n    this.polygonTemplate = this.polygonSeries.mapPolygons.template;\n    this.polygonTemplate.tooltipText = \"\";\n    this.polygonTemplate.fill = am4core.color(MAP_COLOR)\n    const hs = this.polygonTemplate.states.create(\"hover\");\n    hs.properties.fill = am4core.color(COUNTRY_HOVER_COLOR);\n\n    switch(region) {\n      case 'World': \n        this.polygonSeries.exclude = [\"AQ\"]\n        this.polygonSeries.data = [...this.allCountriesData];\n        this.tipsData = [...this.allCountriesData];\n      break;\n      case 'Europe': \n        this.polygonSeries.include = [...EuropeCodes];\n        this.polygonSeries.data = [...this.countriesData.europe];\n        this.tipsData = [...this.countriesData.europe];\n        this.chart.deltaLongitude = -120;\n        this.chart.homeZoomLevel = 1.3;\n      break;\n      case 'Asia': \n        this.polygonSeries.include = [...AsiaCodes];\n        this.polygonSeries.data = [...this.countriesData.asia];\n        this.tipsData = [...this.countriesData.asia];\n        this.chart.deltaLongitude = -130;\n      break;\n      case 'North America': \n        this.polygonSeries.include = [...NorthAmericaCodes];\n        this.polygonSeries.data = [...this.countriesData.northAmerica];\n        this.tipsData = [...this.countriesData.northAmerica];\n      break;\n      case 'South America': \n        this.polygonSeries.include = [...SouthAmericaCodes];\n        this.polygonSeries.data = [...this.countriesData.southAmerica];\n        this.tipsData = [...this.countriesData.southAmerica];\n      break;\n      case 'Australia': \n        this.polygonSeries.include = [...AustraliaCodes];\n        this.polygonSeries.data = [...this.countriesData.australia];\n        this.tipsData = [...this.countriesData.australia];\n        this.chart.deltaLongitude = -160;\n        this.chart.homeZoomLevel = 2;\n      break;\n      case 'Africa': \n        this.polygonSeries.include = [...AfricaCodes];\n        this.polygonSeries.data = [...this.countriesData.africa];\n        this.tipsData = [...this.countriesData.africa];\n      break;\n    }\n\n    this.polygonSeries.data.forEach(element => element.fill = am4core.color(SELECTED_COUNTRY_COLOR));\n    this.polygonTemplate.propertyFields.fill = \"fill\";\n \n    const setActive = (value, top, left) => {\n      const isCountryIncludedToTheList = this.allCountriesData.findIndex(country => country.id === value);\n      if (isCountryIncludedToTheList !== -1) {\n        this.activeCountry = value;\n        this.isTipVisible = true;\n        this.tipsTop = top - 24 - (16 * this.tipsData.length + 8 * (this.tipsData.length + 1)) - 20;\n        if (left - 110 > 0) {\n          if (left + 110 > this.map.nativeElement.clientWidth) {\n            this.tipsLeft = this.map.nativeElement.clientWidth - 220;\n          } else {\n            this.tipsLeft = left - 110;\n          }\n        } else {\n          this.tipsLeft = 0;\n        }\n      }\n    }\n\n    const setIsTipsVisible = (value) => {\n      this.isTipVisible = value;\n    }\n\n    this.polygonTemplate.events.on(\"over\", function(ev) {\n      const active = ev.target.dataItem.dataContext;\n      setActive(active.id, ev.event.pageY,ev.event.pageX);\n    })\n\n    this.polygonTemplate.events.on(\"out\", function(ev) {\n      setIsTipsVisible(false);\n    })\n  }\n\n  ngAfterViewInit() {\n    const height = this.map.nativeElement.clientWidth * 0.7;\n    this.mapHeight = height > 500 ? 500 : height;\n  }\n\n  ngOnChanges() {\n    this.createChart('World');\n  }\n\n  ngOnInit() {\n    let formattedCountriesData = [];\n    Object.values(this.countriesData).forEach(region => { \n      formattedCountriesData = [...formattedCountriesData,...region]\n    })\n    this.allCountriesData = formattedCountriesData;\n    this.createChart('World');\n  }\n}\n",
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "value",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Data",
            "id": "interface-Data-844da8a78bed73ca45f3cd5b10fc5ae3",
            "file": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.ts",
            "type": "interface",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\n\ninterface Data {\n  title: string, \n  isRequired: boolean, \n  type: string, \n  data: {\n    id: string,\n    placeholderText: string,\n    initialValue: string,\n  } \n} []\n\nconst MOBILE_VIEW = 600;\n\n@Component({\n  selector: 'app-request-form',\n  templateUrl: './request-form.component.html',\n  styleUrls: ['./request-form.component.scss']\n})\n\nexport class RequestFormComponent implements OnInit, AfterViewInit {\n  @Input() initialRequiredFieldsData: Data;\n  requiredFieldsData: Data;\n  isMobile: boolean;\n\n  @ViewChild('container') container: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n  }\n\n  handleChange(id: string) {\n    console.log(id)\n  }\n\n  ngAfterViewInit() {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n    console.log(this.isMobile, 676)\n  }\n\n  ngOnInit() {\n    this.requiredFieldsData = JSON.parse(JSON.stringify(this.initialRequiredFieldsData));\n  }\n}\n",
            "properties": [
                {
                    "name": "data",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "isRequired",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "type",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Data",
            "id": "interface-Data-cb8a882a867fbb3fd5955dc51deb6a16-1",
            "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-input/request-text-input.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\ninterface Data {\n  id: string,\n  placeholderText: string,\n  initialValue: string,\n}\n\n@Component({\n  selector: 'app-request-text-input',\n  templateUrl: './request-text-input.component.html',\n  styleUrls: ['./request-text-input.component.scss']\n})\n\nexport class RequestTextInputComponent implements OnInit, OnChanges {\n  @Input() data: Data;\n  @Output() parentHandler: EventEmitter<any> = new EventEmitter();\n\n  inputValue = '';\n\n  setInitialValue() {\n    this.inputValue = this.data.initialValue;\n  }\n\n  ngOnChanges(): void {\n    this.setInitialValue();\n  }\n\n  ngOnInit(): void {\n    this.setInitialValue();\n    this.parentHandler.emit(this.data.id)\n  }\n}\n",
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "initialValue",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "placeholderText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Data-1"
        },
        {
            "name": "Data",
            "id": "interface-Data-e21286314f469383aff8d5bb90f85d3c-2",
            "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-select-input/request-select-input.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\ninterface Data {\n  id: string,\n  initialValue: string,\n  values: string[]\n}\n\n@Component({\n  selector: 'app-request-select-input',\n  templateUrl: './request-select-input.component.html',\n  styleUrls: ['./request-select-input.component.scss']\n})\n\nexport class RequestSelectInputComponent implements OnInit {\n  @Input() data: Data;\n  @Output() parentHandler: EventEmitter<any> = new EventEmitter();\n\n  selectedItem: string;\n\n  handleChange(event) {\n    console.log(event)\n  }\n\n  ngOnInit(): void {\n    this.selectedItem = this.data.initialValue;\n  }\n}\n",
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "initialValue",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "values",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Data-2"
        },
        {
            "name": "Data",
            "id": "interface-Data-6b17c3b19600f33c218907f81f1baf17-3",
            "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-area/request-text-area.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\ninterface Data {\n  id: string,\n  placeholderText: string,\n  initialValue: string,\n}\n\n@Component({\n  selector: 'app-request-text-area',\n  templateUrl: './request-text-area.component.html',\n  styleUrls: ['./request-text-area.component.scss']\n})\n\nexport class RequestTextAreaComponent implements OnInit {\n  @Input() data: Data;\n  @Output() parentHandler: EventEmitter<any> = new EventEmitter();\n\n  inputValue = '';\n\n  setInitialValue() {\n    this.inputValue = this.data.initialValue;\n  }\n\n  ngOnChanges(): void {\n    this.setInitialValue();\n  }\n\n  ngOnInit(): void {\n    this.setInitialValue();\n  }\n}\n",
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "initialValue",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "placeholderText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "Data-3"
        },
        {
            "name": "Data",
            "id": "interface-Data-299387a0367f591de6f9e559f9f1ccb4-4",
            "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, Input, OnChanges, HostListener, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\nimport Chart from 'chart.js';\nimport { getRandomColor } from './helpers';\n\n// created new chart type with rounded ends based on Chart js\nChart.defaults.RoundedDoughnut = Chart.helpers.clone(Chart.defaults.doughnut);\nChart.controllers.RoundedDoughnut = Chart.controllers.doughnut.extend({\n  draw: function(ease) {\n    const ctx = this.chart.ctx;\n    const easingDecimal = ease || 1;\n    const arcs = this.getMeta().data;\n    Chart.helpers.each(arcs, function(arc, i) {\n      arc.transition(easingDecimal).draw();\n      const pArc = arcs[i === 0 ? arcs.length - 1 : i - 1];\n      const pColor = pArc._view.backgroundColor;\n      const vm = arc._view;\n      const radius = (vm.outerRadius + vm.innerRadius) / 2;\n      const thickness = (vm.outerRadius - vm.innerRadius) / 2;\n      const startAngle = Math.PI - vm.startAngle - Math.PI / 2;\n      const angle = Math.PI - vm.endAngle - Math.PI / 2;\n\n      ctx.save();\n      ctx.translate(vm.x, vm.y);\n      ctx.fillStyle = i === 0 ? vm.backgroundColor : pColor;\n      ctx.beginPath();\n      ctx.arc(radius * Math.sin(startAngle), radius * Math.cos(startAngle), thickness, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.beginPath();\n      ctx.arc(radius * Math.sin(angle), radius * Math.cos(angle), thickness, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.restore();\n    });\n  }\n});\n\ninterface Data {\n  title: string,\n  value: number\n}\n\n const MOBILE_WIDTH = 620;\n const TIPS_WIDTH = 220;\n const TIPS_ITEM_HEIGHT = 16;\n const TIPS_ITEM_MARGIN = 8;\n const TIPS_BLOCK_MARGIN = 32;\n\n@Component({\n  selector: 'app-round-chart',\n  templateUrl: './round-chart.component.html',\n  styleUrls: ['./round-chart.component.scss']\n})\n\nexport class RoundChartComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() data: Data[];\n  @Input() colors: string[];\n  @Input() addWord: string;\n\n  isTipVisible: boolean = false;\n  values: number[];\n  colorsList: string[] = ['#9ED0E0', '#612C83', '#509AAF', '#F8BD5A', '#FF9F68', '#645FC8'];\n  mainValue: number;\n  mainLabel: string;\n  tipsTop: number = 0;\n  tipsLeft : number = 0;\n  isMobile: boolean = false;\n\n  @ViewChild('legend') legend: ElementRef;\n  \n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.legend.nativeElement.clientWidth < MOBILE_WIDTH;\n  }\n  \n  createChart() {\n    if(!this.colors && !(this.colorsList.length >= this.data.length) ) {\n      const updatedColorsList = [];\n      for (let i = 0; i < this.data.length; i++) {\n        updatedColorsList.push(getRandomColor());\n      }\n      this.colorsList = updatedColorsList;\n    }\n    this.values = this.data.map((item) => item.value);\n    this.mainValue = this.values[0];\n    this.mainLabel = this.data[0].title;\n\n    const ctx = <HTMLCanvasElement>document.querySelector('.donut-rounded-chart__canvas')\n    const passPropsToUpdateMainValue = (index) => {\n      this.isTipVisible = true;\n      this.updateMainValue(index);\n    };\n    const passPropsToHideTooltip = () => this.isTipVisible = false;\n    new Chart(ctx, {\n      type: 'RoundedDoughnut',\n      data: {\n        datasets: [\n          {\n            data: this.values,\n            backgroundColor: this.colorsList,\n            borderWidth: 0\n          }\n        ]\n      },\n      options: { \n        events: ['mousemove', 'mouseout'],\n        onHover: (event) => {\n          if (this.isTipVisible) {\n            this.setCoordinates(event.pageY, event.pageX)\n          }\n        },\n        cutoutPercentage: 81,\n        tooltips: {\n          enabled: false,\n          custom: function(tooltipModel) {\n            if (tooltipModel.dataPoints) {\n              passPropsToUpdateMainValue(tooltipModel.dataPoints[0].index);\n            } else {\n              passPropsToHideTooltip ();\n            }\n          }\n        }\n      }\n    });\n  }\n\n  updateMainValue (index: number) {\n    this.mainValue = this.values[index];\n    this.mainLabel = this.data[index].title;\n  }\n\n  setCoordinates(top:number, left: number) {\n    this.tipsTop = \n      top - (TIPS_ITEM_HEIGHT * this.data.length + \n      TIPS_ITEM_MARGIN * (this.data.length + 1)) - TIPS_BLOCK_MARGIN;\n    this.tipsLeft = left - TIPS_WIDTH / 2;\n  }\n\n  ngAfterViewInit() {\n    this.isMobile = this.legend.nativeElement.clientWidth < MOBILE_WIDTH;\n  }\n\n  ngOnChanges() {\n    this.createChart();\n  }\n\n  ngOnInit(): void {\n    this.createChart();\n  }\n}\n",
            "properties": [
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "value",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "Data-4"
        },
        {
            "name": "DataItem",
            "id": "interface-DataItem-d4be37cae6da4d265c2a3982aa488546",
            "file": "src/app/pages-components/Reports/Molecules/report-table/report-table.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { formatDate } from './helpers';\n\ninterface DataItem { \n  category: string, \n  date: number, \n  status: string, \n  os: string, \n  city: string, \n  state: string,\n  id: number\n};\n\ninterface HeaderItem {\n  title: string,\n  id: string\n}\n\n@Component({\n  selector: 'app-report-table',\n  templateUrl: './report-table.component.html',\n  styleUrls: ['./report-table.component.scss']\n})\n\nexport class ReportTableComponent implements OnInit {\n  @Input() initialData: DataItem[];\n  @Input() headers: HeaderItem[];\n  @Input() selected: number[];\n\n  data: DataItem[] = [];\n  forwardOrder: boolean = false;\n\n  checkIfSelected(id: number) {\n    return this.selected.includes(id);\n  }\n\n  getDate(seconds: number) {\n    return formatDate(seconds);\n  }\n\n  sortByDate() {\n    this.data = this.data.sort((a, b) => {\n      return this.forwardOrder ? (a.date - b.date) : (b.date - a.date)\n    });\n    this.forwardOrder = !this.forwardOrder;\n  }\n\n  ngOnInit(): void {\n    this.data = this.initialData;\n  }\n}\n",
            "properties": [
                {
                    "name": "category",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "city",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "date",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "os",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "state",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "status",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Domain",
            "id": "interface-Domain-5798bae91bd95f6bcdce4398577ff279",
            "file": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { debounce } from './helpers';\n\ninterface Domain {\n  title: string,\n  text: string,\n  id: string\n}\n\nconst MOBILE_VIEW = 574;\nconst SMALL_MOBILE_VIEW = 400;\n\n@Component({\n  selector: 'app-onboarding-list',\n  templateUrl: './onboarding-list.component.html',\n  styleUrls: ['./onboarding-list.component.scss'],\n})\n\nexport class DomainsOnboardingListComponent implements OnInit {\n  @Input() initialDomainsList: Domain[];\n  @Input() selected: string[];\n\n  @ViewChild('deleteModalContent')deleteModalContent: ElementRef;\n  @ViewChild('editModalContent')editModalContent: ElementRef;\n  @ViewChild('addModalContent')addModalContent: ElementRef;\n  @ViewChild('container') container: ElementRef;\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.domains, event.previousIndex, event.currentIndex);\n  }\n  \n  domains = [];\n  isModalVisible=false;\n  query = '';\n  newDomainTitle = '';\n  newDomainText = '';\n  activeTitle = '';\n  activeId='';\n  modalTitle='';\n  modalPrimaryButtonTitle='';\n  modalDangerButtonTitle='';\n  modalPrimaryButtonFunction=(args: any) => {};\n  modalDangerButtonFunction=(args: any) => {};\n  modalComponent;\n  ctx;\n  isMobile;\n  isSmallMobile;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.detectMobileView();\n  }\n\n  selectAll() {\n    this.selected = this.selected.length === this.domains.length\n      ? []\n      : this.domains.map(domain => domain.id)\n  }\n\n  changeSelectedList = (id: string) => {\n    this.selected = (this.selected.includes(id)) ? this.selected.filter(domain => domain !== id) : [...this.selected, id];\n  }\n\n  checkIsSelected(id: string) {\n    return this.selected.includes(id);\n  }\n\n  /// show modal with props\n\n  handleDelete(id: string) {\n    this.activeTitle = this.domains.find(domain => domain.id === id).title;\n    this.ctx = { titleActiveDomain: this.activeTitle };\n    this.activeId = id;\n    this.setModalVariables('Delete domain', '', 'delete', this.closeModal, this.deleteDomain, this.deleteModalContent, true);\n  }\n\n  deleteDomain() {\n    this.domains = this.domains.filter(domain => domain.id !== this.activeId);\n    this.isModalVisible = false;\n    this.selected = this.selected.filter(domain => domain !== this.activeId);\n  }\n\n  handleDeleteSeveral() {\n    this.activeTitle = this.domains\n      .filter(domain => this.selected.includes(domain.id))\n      .map(domain => domain.title).join(', ');\n    this.ctx = { titleActiveDomain: this.activeTitle };\n    this.setModalVariables( 'Delete domains', '', 'delete', this.closeModal, this.deleteSelectedDomains, this.deleteModalContent, true);\n  }\n\n  deleteSelectedDomains() {\n    this.domains = this.domains.filter(domain => {\n      if(!this.selected.includes(domain.id)) {\n        return domain\n      }\n    })\n    this.selected = [];\n    this.isModalVisible = false;\n  }\n\n  handleEdit(id: string) {\n    this.activeTitle =this.domains.find(domain => domain.id === id).title;\n    this.activeId = id;\n    this.ctx = { initialValue: this.activeTitle };\n    this.setModalVariables('Rename domain', 'rename', '', this.editDomain, null, this.editModalContent, true);\n  }\n\n  editDomain() {\n    const activeIndex = this.domains.findIndex(domain => domain.id === this.activeId);\n    this.domains[activeIndex].title = this.activeTitle;\n    this.isModalVisible = false;\n  }\n\n  handleAdd() {\n    this.ctx = { initialValue: '' };\n    this.setModalVariables('Add domain', 'add', '', this.addDomain, null, this.addModalContent, true);\n  }\n\n  addDomain() {\n    const newDomain = {\n      id: `${Date.now()}`, \n      title: this.newDomainTitle, \n      text: this.newDomainText\n    }\n    this.domains = [...this.domains, newDomain];\n    this.isModalVisible = false;\n  }\n\n  setModalVariables(\n    modalTitle, modalPrimaryButtonTitle, modalDangerButtonTitle, modalPrimaryButtonFunction,\n    modalDangerButtonFunction, modalComponent, modalVisibility\n  ) {\n    this.modalTitle = modalTitle;\n    this.modalPrimaryButtonTitle = modalPrimaryButtonTitle;\n    this.modalDangerButtonTitle = modalDangerButtonTitle;\n    this.modalPrimaryButtonFunction = modalPrimaryButtonFunction;\n    this.modalDangerButtonFunction = modalDangerButtonFunction;\n    this.modalComponent = modalComponent;\n    this.isModalVisible = modalVisibility;\n  }\n\n  closeModal() {\n    this.isModalVisible = false;\n  }\n\n  setValue(value: string, type: string) {\n    switch(type) {\n      case 'editTitle':\n        this.activeTitle = value;\n      case 'addTitle':\n        this.newDomainTitle = value;\n      case 'addText':\n        this.newDomainText = value;\n    }\n  }\n\n  duplicateDomain(id: string) {\n    const index = this.domains.findIndex(domain => domain.id === id);\n    const domainToDuplicate = this.domains[index];\n    const newDomain = {\n      id: `${Date.now()}`, \n      title: domainToDuplicate.title, \n      text: domainToDuplicate.text\n    }\n\n    this.domains.splice(index, 0, newDomain);\n  }\n\n  handleFilter = debounce(function(...args) {\n    this.query = args[0].toLowerCase();\n  }, 500, false)\n\n  detectMobileView() {\n    this.isMobile = this.container.nativeElement.clientWidth <= MOBILE_VIEW;\n    this.isSmallMobile = this.container.nativeElement.clientWidth <= SMALL_MOBILE_VIEW;\n  }\n\n  ngAfterViewInit() {\n    this.detectMobileView();\n  }\n\n  ngOnInit() {\n    this.domains = this.initialDomainsList;\n  }\n}\n",
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "HeaderItem",
            "id": "interface-HeaderItem-d4be37cae6da4d265c2a3982aa488546",
            "file": "src/app/pages-components/Reports/Molecules/report-table/report-table.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { formatDate } from './helpers';\n\ninterface DataItem { \n  category: string, \n  date: number, \n  status: string, \n  os: string, \n  city: string, \n  state: string,\n  id: number\n};\n\ninterface HeaderItem {\n  title: string,\n  id: string\n}\n\n@Component({\n  selector: 'app-report-table',\n  templateUrl: './report-table.component.html',\n  styleUrls: ['./report-table.component.scss']\n})\n\nexport class ReportTableComponent implements OnInit {\n  @Input() initialData: DataItem[];\n  @Input() headers: HeaderItem[];\n  @Input() selected: number[];\n\n  data: DataItem[] = [];\n  forwardOrder: boolean = false;\n\n  checkIfSelected(id: number) {\n    return this.selected.includes(id);\n  }\n\n  getDate(seconds: number) {\n    return formatDate(seconds);\n  }\n\n  sortByDate() {\n    this.data = this.data.sort((a, b) => {\n      return this.forwardOrder ? (a.date - b.date) : (b.date - a.date)\n    });\n    this.forwardOrder = !this.forwardOrder;\n  }\n\n  ngOnInit(): void {\n    this.data = this.initialData;\n  }\n}\n",
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "InputsData",
            "id": "interface-InputsData-4ef6fe2ddf580703555b3b8274f0c06d",
            "file": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\ninterface InputsData {\n  id: string,\n  title: string,\n  values?: string[],\n  initialValue?: string,\n  placeholder: string,\n  type: string\n}\n\n@Component({\n  selector: 'app-report-modal',\n  templateUrl: './report-modal.component.html',\n  styleUrls: ['./report-modal.component.scss']\n})\n\nexport class ReportModalComponent implements OnInit {\n  @Input() inputsData: InputsData[];\n\n  @Output() primaryButtonFunction: EventEmitter<any> = new EventEmitter();\n  @Output() dangerButtonFunction: EventEmitter<any> = new EventEmitter();\n\n  filterProps = {};\n\n  handleCancel() {\n    this.dangerButtonFunction.emit();\n  }\n\n  handleApprove() {\n    this.primaryButtonFunction.emit();\n  }\n\n  handleInputChange(props) {\n    this.filterProps[props[1]] = props[0];\n  }\n\n  ngOnInit(): void {\n    this.inputsData.forEach(item => {\n      this.filterProps[item.title] = item.initialValue\n    })\n  }\n}",
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "initialValue",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "placeholder",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "values",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Item",
            "id": "interface-Item-27e04eb76b78c204052b75f62bcf7741",
            "file": "src/app/molecules/menu/composite-menu/composite-menu.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\ninterface Item {\n  title: string;\n  sections: string[]\n}\n\n@Component({\n  selector: 'app-composite-menu',\n  templateUrl: './composite-menu.component.html',\n  styleUrls: ['./composite-menu.component.scss'],\n})\n\nexport class CompositeMenuComponent {\n  @Input() items: Item[];\n\n  active: string = '';\n\n  handlClick(event: any, i: string) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "properties": [
                {
                    "name": "sections",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Item",
            "id": "interface-Item-26f211f2f51360a26cad4f91a4d2c108-1",
            "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.ts",
            "type": "interface",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\n\ninterface Item {\n  date: string,\n  amount: number,\n  paid: boolean,\n  invoice: string,\n}\n\nconst MOBILE_VIEW = 680;\n\n@Component({\n  selector: 'app-billing-invoices',\n  templateUrl: './billing-invoices.component.html',\n  styleUrls: ['./billing-invoices.component.scss']\n})\n\nexport class BillingInvoicesComponent implements OnInit, AfterViewInit {\n  @Input() title: string;\n  @Input() initialData: Item[];\n\n  data: Item[];\n  direction: 'forward' | 'back' = 'forward';\n  isMobile: boolean;\n  element = null;\n\n  @ViewChild('container') container: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n  }\n\n  sortTable() {\n    if(this.direction === 'forward') {\n      this.direction = 'back';\n      this.data = this.data.sort((a, b) => {\n        const aDateSplited = a.date.split('.');\n        const aDate = Date.parse([aDateSplited[1], aDateSplited[0], aDateSplited[2]].join(' '));\n        const bDateSplited = b.date.split('.');\n        const bDate = Date.parse([bDateSplited[1], bDateSplited[0], bDateSplited[2]].join(' '));\n        return aDate - bDate;\n      });\n    } else {\n      this.direction = 'forward';\n      this.data = this.data.sort((a, b) => {\n        const aDateSplited = a.date.split('.');\n        const aDate = Date.parse([aDateSplited[1], aDateSplited[0], aDateSplited[2]].join(' '));\n        const bDateSplited = b.date.split('.');\n        const bDate = Date.parse([bDateSplited[1], bDateSplited[0], bDateSplited[2]].join(' '));\n        return bDate - aDate;\n      });\n    }\n  }\n\n  download(invoice: string) {\n    console.log(invoice, 'downloaded');\n    /// put your logic here\n  }\n\n  ngAfterViewInit(): void {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;  \n  }\n\n  ngOnInit(): void {\n    this.data = JSON.parse(JSON.stringify(this.initialData));\n  }\n}\n",
            "properties": [
                {
                    "name": "amount",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "date",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "invoice",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "paid",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Item-1"
        },
        {
            "name": "Item",
            "id": "interface-Item-5689fc03be2737bca918d09426315e1d-2",
            "file": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\ninterface Item {\n  status: boolean,\n  details: string,\n  cycle: string,\n  domains: number,\n  unitPrice: number,\n}\n\nconst ACTIVE_COLOR = 'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)';\nconst INACTIVE_COLOR = '#EA2D2D';\n\n@Component({\n  selector: 'app-billing-payment-table',\n  templateUrl: './billing-payment-table.component.html',\n  styleUrls: ['./billing-payment-table.component.scss']\n})\n\nexport class BillingPaymentTableComponent implements OnInit {\n  @Input() initialData: Item[];\n\n  data: Item[];\n  direction: 'forward' | 'back' = 'forward';\n\n  detectColor(status) {\n    return status ? ACTIVE_COLOR : INACTIVE_COLOR;\n  }\n\n  sortTable() {\n    if(this.direction === 'forward') {\n      this.direction = 'back';\n      this.data = this.data.sort((a, b) => a.domains - b.domains);\n    } else {\n      this.direction = 'forward';\n      this.data = this.data.sort((a, b) => b.domains - a.domains);\n    }\n  }\n\n  ngOnInit(): void {\n    this.data = JSON.parse(JSON.stringify(this.initialData));\n  }\n}\n",
            "properties": [
                {
                    "name": "cycle",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "details",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "domains",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "status",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "unitPrice",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Item-2"
        },
        {
            "name": "Item",
            "id": "interface-Item-d4b141d91ad724b49ca9b8eb592bcce5-3",
            "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-layout-card-row/cookie-layout-card-row.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\ninterface Item {\n  width: string,\n  heigth: string,\n  top: string,\n  left: string,\n  borderRadius: string\n}\n\n@Component({\n  selector: 'app-cookie-layout-card-row',\n  templateUrl: './cookie-layout-card-row.component.html',\n  styleUrls: ['./cookie-layout-card-row.component.scss']\n})\n\nexport class CookieLayoutCardRowComponent implements OnInit {\n  @Input() initialSelectedId: string;\n  @Input() items: Item[];\n\n  selectedId : string;\n\n  selectCard(id: string) {\n    this.selectedId = id;\n  }\n\n  ngOnInit(): void {\n    this.selectedId = this.initialSelectedId;\n  }\n}\n",
            "properties": [
                {
                    "name": "borderRadius",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "heigth",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "left",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "top",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "width",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "Item-3"
        },
        {
            "name": "MobileItems",
            "id": "interface-MobileItems-c0fdbf036d4686c29162232cfd3e8f98",
            "file": "src/app/organisms/scan-report/scan-report.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, OnInit, HostListener, ViewChild } from '@angular/core';\n\ninterface SideItems {\n  title: string;\n  sections?: string[],\n}\n\ninterface MobileItems {\n  title: string;\n  svgPath: string,\n  isActive: boolean\n}\n\n@Component({\n  selector: 'app-scan-report',\n  templateUrl: './scan-report.component.html',\n  styleUrls: ['./scan-report.component.scss']\n})\n\nexport class ScanReportComponent implements OnInit {\n  items: string[] = ['reports', 'domains', 'users', 'account', 'request portal'];\n  itemsToSearch: string[] = ['My current company', 'My clients company', 'secure privacy', 'secure privacy2', 'secure privacy3'];\n  leftSideMenuItems: SideItems[] = [\n    { title: 'scan'},\n    { title: 'style'},\n    { title: 'cookie banner'},\n    { title: 'IAB 2.0 settings'},\n    { title: 'Preference Center', sections: ['GDPR/ePrivacy', 'CCPA', 'LGPD']},\n    { title: 'data request form'},\n    { title: 'Preference Center', sections: ['Privacy Policy', 'Cookie Declaration', 'Embed On Website']},\n    { title: 'cookie classification'},\n    { title: 'languages'},\n    { title: 'coverage'},\n    { title: 'installation'},\n  ]\n  mobileMenuItems: MobileItems[] = [\n    { title: 'Reports', svgPath: 'assets/images/menu/Reports.svg',   isActive: false,},\n    { title: 'Domains', svgPath: 'assets/images/menu/Domains.svg',   isActive: false,},\n    { title: 'Account', svgPath: 'assets/images/menu/Account.svg',   isActive: false,},\n    { title: 'Options', svgPath: 'assets/images/menu/Options.svg',   isActive: false,},\n  ]\n  isMobile: boolean = false;\n  isSideMenuVisible: boolean = false;\n\n  toggleSideMenu() {\n    this.isSideMenuVisible = !this.isSideMenuVisible;\n  }\n  \n  @ViewChild('nav') element: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = (event.target.innerWidth < 800) ? true : false;\n  }\n\n  @HostListener('document:click', ['$event'])\n\tonClick(event: Event) {\n    if (!this.element.nativeElement.contains(event.target)) {\n      this.isSideMenuVisible = false;\n    }\n  }\n  \n  ngOnInit(): void {\n    this.isMobile = (window.innerWidth < 800) ? true : false;\n  }\n}\n",
            "properties": [
                {
                    "name": "isActive",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "svgPath",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Module",
            "id": "interface-Module-b986dea163c7700978cb484a339248e7",
            "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.component.ts",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string\n}\n\n@Component({\n  selector: 'app-form-screen-fifth',\n  templateUrl: './form-screen-fifth.component.html',\n  styleUrls: ['./form-screen-fifth.component.scss']\n})\n\nexport class FormScreenFifthComponent {\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n    {\n      title: \"GDPR, eprivacy2\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand2\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia2\",\n      text: \"Europe \",\n    },\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Module",
            "id": "interface-Module-ef6a13b4bda2e504ba067fb46b37471b-1",
            "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.component.ts",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string,\n  src: string\n}\n\n@Component({\n  selector: 'app-form-screen-third',\n  templateUrl: './form-screen-third.component.html',\n  styleUrls: ['./form-screen-third.component.scss'],\n})\n\nexport class FormScreenThirdComponent {\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n      src: \"assets/images/flags/euro.png\"\n    },\n    {\n      title: \"CCPA\",\n      text: \"California\",\n      src: \"assets/images/flags/ccpa.png\"\n    },\n    {\n      title: \"LGPD\",\n      text: \"Brasil \",\n      src: \"assets/images/flags/lgpd.png\"\n    }\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "src",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Module-1"
        },
        {
            "name": "Module",
            "id": "interface-Module-aca7099c3a068b1af5bdf9dc534fb0c5-2",
            "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.component.ts",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string\n}\n\n@Component({\n  selector: 'app-form-screen-fourth',\n  templateUrl: './form-screen-fourth.component.html',\n  styleUrls: ['./form-screen-fourth.component.scss']\n})\nexport class FormScreenFourthComponent {\n\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Module-2"
        },
        {
            "name": "SideItems",
            "id": "interface-SideItems-c0fdbf036d4686c29162232cfd3e8f98",
            "file": "src/app/organisms/scan-report/scan-report.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, OnInit, HostListener, ViewChild } from '@angular/core';\n\ninterface SideItems {\n  title: string;\n  sections?: string[],\n}\n\ninterface MobileItems {\n  title: string;\n  svgPath: string,\n  isActive: boolean\n}\n\n@Component({\n  selector: 'app-scan-report',\n  templateUrl: './scan-report.component.html',\n  styleUrls: ['./scan-report.component.scss']\n})\n\nexport class ScanReportComponent implements OnInit {\n  items: string[] = ['reports', 'domains', 'users', 'account', 'request portal'];\n  itemsToSearch: string[] = ['My current company', 'My clients company', 'secure privacy', 'secure privacy2', 'secure privacy3'];\n  leftSideMenuItems: SideItems[] = [\n    { title: 'scan'},\n    { title: 'style'},\n    { title: 'cookie banner'},\n    { title: 'IAB 2.0 settings'},\n    { title: 'Preference Center', sections: ['GDPR/ePrivacy', 'CCPA', 'LGPD']},\n    { title: 'data request form'},\n    { title: 'Preference Center', sections: ['Privacy Policy', 'Cookie Declaration', 'Embed On Website']},\n    { title: 'cookie classification'},\n    { title: 'languages'},\n    { title: 'coverage'},\n    { title: 'installation'},\n  ]\n  mobileMenuItems: MobileItems[] = [\n    { title: 'Reports', svgPath: 'assets/images/menu/Reports.svg',   isActive: false,},\n    { title: 'Domains', svgPath: 'assets/images/menu/Domains.svg',   isActive: false,},\n    { title: 'Account', svgPath: 'assets/images/menu/Account.svg',   isActive: false,},\n    { title: 'Options', svgPath: 'assets/images/menu/Options.svg',   isActive: false,},\n  ]\n  isMobile: boolean = false;\n  isSideMenuVisible: boolean = false;\n\n  toggleSideMenu() {\n    this.isSideMenuVisible = !this.isSideMenuVisible;\n  }\n  \n  @ViewChild('nav') element: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = (event.target.innerWidth < 800) ? true : false;\n  }\n\n  @HostListener('document:click', ['$event'])\n\tonClick(event: Event) {\n    if (!this.element.nativeElement.contains(event.target)) {\n      this.isSideMenuVisible = false;\n    }\n  }\n  \n  ngOnInit(): void {\n    this.isMobile = (window.innerWidth < 800) ? true : false;\n  }\n}\n",
            "properties": [
                {
                    "name": "sections",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "TableItem",
            "id": "interface-TableItem-e2a49d2958effa9524c3c5355d5b65e5",
            "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.ts",
            "type": "interface",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\ninterface TableItem {\n  status: boolean,\n  details: string,\n  cycle: string,\n  domains: number,\n  unitPrice: number,\n}\n\nconst MOBILE_VIEW = 800;\nconst SMALL_MOBILE_VIEW = 680;\nconst MONTHES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n@Component({\n  selector: 'app-billing-payment',\n  templateUrl: './billing-payment.component.html',\n  styleUrls: ['./billing-payment.component.scss']\n})\n\nexport class BillingPaymentComponent implements OnInit, AfterViewInit {\n  @Input() tableData: TableItem[];\n\n  lastNumbers: string = '0000';\n  date: string = \"**/**\";\n  name: string = 'Name'\n  cardNumber: string = '';\n  isMobile: boolean;\n  isSmallMobile: boolean;\n  monthes = MONTHES;\n  totalSum: number;\n  errors = {\n    month: false,\n    year: false,\n    cvv: false,\n    name: false,\n    number: false\n  }\n  vat: number = 25;\n\n  temporaryMonth = 'Month';\n  temporaryYear = 'Year';\n  temporaryCardNumber = new FormControl(this.cardNumber);\n  temporaryCvv = new FormControl('');\n  temporaryName = new FormControl(this.name);\n\n  @ViewChild('container') container: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n    this.isSmallMobile = this.container.nativeElement.clientWidth < SMALL_MOBILE_VIEW;\n  }\n\n  setYear(value: number) {\n    this.temporaryYear = value + '';\n  }\n\n  setMonth(value: string) {\n    this.temporaryMonth = value;\n  }\n\n  setName(event) {\n    const value = event.target.value;\n    const index = value.length - 1;\n    if (value[index].match(/[a-z]/i) && index < 20) {\n      this.temporaryName.setValue(value);\n    } else {\n      this.temporaryName.setValue(value.substring(0, index));\n    }\n  }\n\n  setCardNumber(event) {\n    if (event.target.value.trim().length) {\n      let value = event.target.value.split(\" - \").join('');\n      let splitedValue = value.match(new RegExp('.{1,4}', 'g')).join(\" - \");\n      const index = splitedValue.length - 1;\n  \n      if (+splitedValue[index]) {\n        splitedValue = splitedValue.length > 25 ? splitedValue.substr(0, 25) : splitedValue;\n        this.temporaryCardNumber.setValue(splitedValue);\n      } else {\n        this.temporaryCardNumber.setValue(splitedValue.substring(0, index));\n      }\n    } else {\n      this.temporaryCardNumber.setValue('');\n    }\n  }\n\n  setCvv(event) {\n    const value = event.target.value;\n    const index = value.length - 1;\n    if (+value[index] && value.length < 4) {\n      this.temporaryCvv.setValue(value);\n    } else {\n      this.temporaryCvv.setValue(value.substring(0, index));\n    }\n  }\n\n  save() {\n    let errorsNumbers = 0;\n    const cardNumberJoined = this.temporaryCardNumber.value.split(\" - \").join('');\n    if (this.temporaryYear === 'Year') {\n      this.errors.year = true;\n      errorsNumbers++;\n    }\n    if (this.temporaryCvv.value.length < 3) {\n      this.errors.cvv = true;\n      errorsNumbers++;\n    }\n    if (this.temporaryMonth === 'Month') {\n      this.errors.month = true;\n      errorsNumbers++;\n    }\n    if (this.temporaryName.value.length < 5) {\n      this.errors.name = true;\n      errorsNumbers++;\n    }\n    if (cardNumberJoined.length < 16) {\n      this.errors.number = true;\n      errorsNumbers++;\n    }\n \n    if (errorsNumbers > 0) {\n      return\n    }\n    const month = this.monthes.findIndex(item => item === this.temporaryMonth) + 1;\n    const convertedMonth = month < 10 ? `0${month}` : `${month}`;\n    const year = `${this.temporaryYear}`.substr(2, 4);\n    this.date = `${convertedMonth}/${year}`;\n    this.lastNumbers = cardNumberJoined.substr(12, 16);\n    this.name = this.temporaryName.value;\n  }\n\n  validate(type: string) {\n    switch(type) {\n      case 'name':\n        if (this.temporaryName.value.length < 5) {\n          this.errors.name = true;\n        }\n        break;\n      case 'number':\n        const cardNumberJoined = this.temporaryCardNumber.value.split(\" - \").join('');\n        if (cardNumberJoined.length < 16) {\n          this.errors.number = true;\n        }\n        break;\n      case 'cvv':\n        if (this.temporaryCvv.value.length < 3) {\n          this.errors.cvv = true;\n        }\n        break;\n      case 'month':\n        if (this.temporaryMonth === 'Month') {\n          this.errors.month = true;\n        }\n        break;\n      case 'year':\n        if (this.temporaryYear === 'Year') {\n          this.errors.year = true;\n        }\n        break;\n    }\n  }\n\n  validateOnPaste(value, type) {\n    const patternNumbers  = /\\d+/g;\n    const patternLetters = /[a-z]+/gi;\n    let matches;\n    let filtered;\n    switch (type) {\n      case 'number':\n        matches = value.match(patternNumbers);\n        filtered = matches ? matches.join('') : '';\n        this.temporaryCardNumber.setValue(filtered);\n        break;\n      case 'cvv':\n        matches = value.match(patternNumbers);\n        filtered = matches ? matches.join('') : '';\n        filtered = filtered.length > 3 ? filtered.substr(0, 3) : filtered;\n        this.temporaryCvv.setValue(filtered);\n        break;\n      case 'name': \n        matches = value.match(patternLetters);\n        filtered = matches ? matches.join('') : '';\n        filtered = filtered.length > 20 ? filtered.substr(0, 20) : filtered;\n        this.temporaryName.setValue(filtered);\n        break;\n      default:\n        return;\n    }\n  }\n\n  deleteError (type: string) {\n    this.errors[type] = false;\n  }\n\n  ngAfterViewInit() {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n    this.isSmallMobile = this.container.nativeElement.clientWidth < SMALL_MOBILE_VIEW;\n  }\n\n  ngOnInit(): void {\n    let sum = 0;\n    this.tableData.forEach((value) => { sum = sum + value.unitPrice * value.domains });\n    this.totalSum = sum;\n  }\n}",
            "properties": [
                {
                    "name": "cycle",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "details",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "domains",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "status",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "unitPrice",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Text",
            "id": "interface-Text-510fcb724c0b317493089d36d1d49a4b",
            "file": "src/app/atoms/card/card-report-status/card-report-status.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\ninterface Text {\n  text: string,\n  value: string\n}\n\n@Component({\n  selector: 'app-card-report-status',\n  templateUrl: './card-report-status.component.html',\n  styleUrls: ['./card-report-status.component.scss']\n})\n\nexport class CardReportStatusComponent {\n  @Input() title: string;\n  @Input() texts: Text[];\n}\n",
            "properties": [
                {
                    "name": "text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-f28b5b06f3b53088924c43cf89091c2c",
            "file": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\nfunction debounce(func, wait, immediate) {\n  var timeout;\n  return function() {\n    var context = this, args = arguments;\n    var later = function() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nconst MOBILE_VIEW = 574;\nconst SMALL_MOBILE_VIEW = 400;\n\ninterface User {\n  name: string,\n  email: string,\n  position: string,\n  id: string | number\n}\n\n@Component({\n  selector: 'app-teams-cards-list',\n  templateUrl: './teams-cards-list.component.html',\n  styleUrls: ['./teams-cards-list.component.scss']\n})\n\nexport class TeamsCardsListComponent implements OnInit {\n  @Input() selected: string[];\n  @Input() initialUsersList: User[];\n\n  @ViewChild('deleteModalContent')deleteModalContent: ElementRef;\n  @ViewChild('editModalContent')editModalContent: ElementRef;\n  @ViewChild('addModalContent')addModalContent: ElementRef;\n  @ViewChild('containerList') container: ElementRef;\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.users, event.previousIndex, event.currentIndex);\n  }\n  \n  positionsAndRights = {\n      'Account owner': 'Has access to all domains and all settings.', \n      'Account manager': 'Has access to some domains and some settings.',\n      'Account user': 'Has no access to all domains and all settings.'\n    }\n  positions = ['Account owner', 'Account manager', 'Account user']\n  users = [];\n  isModalVisible = false;\n  query = '';\n  newUserName = '';\n  newUserEmail = '';\n  newUserPosition = '';\n  activeTitle = '';\n  activeEmail = '';\n  activePosition = '';\n  activeId='';\n  modalTitle='';\n  modalPrimaryButtonTitle = '';\n  modalDangerButtonTitle = '';\n  modalPrimaryButtonFunction=(args: any) => {};\n  modalDangerButtonFunction=(args: any) => {};\n  modalComponent;\n  ctx;\n  isMobile;\n  isSmallMobile;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.detectMobileView();\n  }\n\n  selectAll() {\n    this.selected = this.selected.length === this.users.length\n      ? []\n      : this.users.map(user => user.id)\n  }\n\n  changeSelectedList = (id: string) => {\n    this.selected = (this.selected.includes(id)) ? this.selected.filter(user => user !== id) : [...this.selected, id];\n  }\n\n  checkIsSelected(id: string) {\n    return this.selected.includes(id);\n  }\n\n  /// show modal with props\n\n  handleDelete(id: string) {\n    this.activeTitle = this.users.find(user => user.id === id).name;\n    this.ctx = { titleActiveUser: this.activeTitle };\n    this.activeId = id;\n    this.setModalVariables('Are you sure?', '', 'delete user', this.closeModal, this.deleteUser, this.deleteModalContent, true);\n  }\n\n  deleteUser() {\n    this.users = this.users.filter(user => user.id !== this.activeId);\n    this.isModalVisible = false;\n    this.selected = this.selected.filter(user => user !== this.activeId);\n  }\n\n  handleDeleteSeveral() {\n    this.activeTitle = this.users\n      .filter(user => this.selected.includes(user.id))\n      .map(user => user.name).join(', ');\n      console.log(this.activeTitle)\n    this.ctx = { titleActiveUser: this.activeTitle };\n    this.setModalVariables( 'Are you sure?', '', 'delete users', this.closeModal, this.deleteSelectedusers, this.deleteModalContent, true);\n  }\n\n  deleteSelectedusers() {\n    this.users = this.users.filter(user => {\n      if(!this.selected.includes(user.id)) {\n        return user\n      }\n    })\n    this.selected = [];\n    this.closeModal();\n  }\n\n  handleEdit(id: string) {\n    const activeUser = this.users.find(user => user.id === id);\n    this.activeTitle = activeUser.name;\n    this.activeEmail = activeUser.email;\n    this.activePosition = activeUser.position\n    this.activeId = id;\n    this.ctx = { initialValue: this.activeTitle };\n    this.setModalVariables('Edit user', 'Save', 'Cancel', this.editUser, this.closeModal, this.editModalContent, true);\n  }\n\n  editUser() {\n    const activeIndex = this.users.findIndex(user => user.id === this.activeId);\n    this.users[activeIndex].name = this.activeTitle;\n    this.users[activeIndex].email = this.activeEmail;\n    this.users[activeIndex].position = this.activePosition;\n    this.closeModal();\n  }\n\n  handleAdd() {\n    this.ctx = { initialValue: '' };\n    this.setModalVariables('Add user', 'add', 'cancel', this.addUser, this.closeModal, this.addModalContent, true);\n  }\n\n  addUser() {\n    const newUser = {\n      id: `${Date.now()}`, \n      name: this.newUserName, \n      email: this.newUserEmail,\n      position: this.newUserPosition\n    }\n\n    this.users = [...this.users, newUser];\n    this.closeModal()\n  }\n\n\n  setModalVariables(\n    modalTitle, modalPrimaryButtonTitle, modalDangerButtonTitle, modalPrimaryButtonFunction,\n    modalDangerButtonFunction, modalComponent, modalVisibility\n  ) {\n    this.modalTitle = modalTitle;\n    this.modalPrimaryButtonTitle = modalPrimaryButtonTitle;\n    this.modalDangerButtonTitle = modalDangerButtonTitle;\n    this.modalPrimaryButtonFunction = modalPrimaryButtonFunction;\n    this.modalDangerButtonFunction = modalDangerButtonFunction;\n    this.modalComponent = modalComponent;\n    this.isModalVisible = modalVisibility;\n  }\n\n  closeModal() {\n    this.newUserEmail = '';\n    this.newUserName = '';\n    this.newUserPosition = '';\n    this.activePosition = '';\n    this.activeTitle = '';\n    this.activeEmail = '';\n    this.activeId = '';\n    this.isModalVisible = false;\n  }\n\n  setValue(value: string, type: string) {\n    switch(type) {\n      case 'editTitle':\n        this.activeTitle = value;\n        break;\n      case 'editEmail':\n        this.activeEmail= value;\n        break;\n      case 'editPosition':\n        this.activePosition = value;\n        break;\n      case 'addTitle':\n        this.newUserName = value;\n        break;\n      case 'addEmail':\n        this.newUserEmail = value;\n        break;\n      case 'addPosition':\n        this.newUserPosition = value;\n        break;\n    }\n  }\n\n  duplicateUser(id: string) {\n    const index = this.users.findIndex(user => user.id === id);\n    const userToDuplicate = this.users[index];\n    const newUser = {\n      id: `${Date.now()}`, \n      name: userToDuplicate.name, \n      email: userToDuplicate.email,\n      position: userToDuplicate.position,\n    }\n\n    this.users.splice(index, 0, newUser);\n  }\n\n  handleFilter = debounce(function(...args) {\n    this.query = args[0].toLowerCase();\n  }, 500, false)\n\n  detectMobileView() {\n    this.isMobile = this.container.nativeElement.clientWidth <= MOBILE_VIEW;\n    this.isSmallMobile = this.container.nativeElement.clientWidth <= SMALL_MOBILE_VIEW;\n  }\n\n  ngAfterViewInit() {\n    this.detectMobileView();\n  }\n\n  ngOnInit() {\n    this.users = this.initialUsersList;\n  }\n}\n",
            "properties": [
                {
                    "name": "email",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "id",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "position",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AddService",
            "id": "injectable-AddService-97b6ae22858f5438fdf8a885676d31dd",
            "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/add-dynamic-component/add.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getAds",
                    "args": [
                        {
                            "name": "type",
                            "type": "string"
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { PoliciesDynamicListComponent } from '../../../Atoms/dynamic-list/dynamic-list.component';\nimport { PoliciesDynamicTextComponent } from '../../../Atoms/dynamic-text/dynamic-text.component';\nimport { PoliciesDynamicTableComponent } from '../../../Atoms/dynamic-table/dynamic-table.component';\nimport { AddItem } from './add-item';\n\n@Injectable()\nexport class AddService {\n  getAds(type: string, data?: any) {\n    if (type === 'table' && data) {\n      return new AddItem(PoliciesDynamicTableComponent, data)\n    } else if (type ==='list' && data) {\n       return new AddItem(PoliciesDynamicListComponent, data)\n    } else if (type === 'text' && data) {\n      return new AddItem(PoliciesDynamicTextComponent, data)\n    }\n  }\n}",
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AddItem",
            "id": "class-AddItem-2c3c07e596d6a1843ae0405275c36294",
            "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/add-dynamic-component/add-item.ts",
            "type": "class",
            "sourceCode": "import { Type } from '@angular/core';\n\nexport class AddItem {\n  constructor(public component: Type<any>, public dataFromParent: any, ) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "component",
                        "type": "Type<any>"
                    },
                    {
                        "name": "dataFromParent",
                        "type": "any"
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "component",
                        "type": "Type<any>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dataFromParent",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "component",
                    "type": "Type<any>",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "dataFromParent",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "AddDirective",
            "id": "directive-AddDirective-611723920efcd1e770f65ac2f7afd6dd",
            "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/add-dynamic-component/add.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[adHost]',\n})\n\nexport class AddDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}",
            "selector": "[adHost]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "viewContainerRef",
                    "type": "ViewContainerRef",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef"
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AddComponent",
            "id": "component-AddComponent-f09aadf8803bec00a59786997a651d5a",
            "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/add-dynamic-component/add-dynamic.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-dynamic",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"add-dynamic-component\">\n  <ng-template adHost></ng-template>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "component",
                    "line": 21,
                    "type": "AddItem"
                }
            ],
            "outputsClass": [
                {
                    "name": "handler",
                    "defaultValue": "new EventEmitter()",
                    "line": 22,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "adHost",
                    "type": "AddDirective",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "AddDirective, {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "loadComponent",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild, ComponentFactoryResolver, OnDestroy, OnChanges, EventEmitter, Output } from '@angular/core';\n\nimport { AddDirective } from './add.directive';\nimport { AddItem } from './add-item';\n\nexport interface AdComponent {\n  data: any;\n  handler: any\n}\n\n@Component({\n  selector: 'app-add-dynamic',\n  template: `\n              <div class=\"add-dynamic-component\">\n                <ng-template adHost></ng-template>\n              </div>\n            `\n})\n\nexport class AddComponent implements OnInit {\n  @Input() component: AddItem;\n  @Output() handler: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(AddDirective, {static: true}) adHost: AddDirective;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  loadComponent() {\n    const adItem = this.component;\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(adItem.component);\n    const viewContainerRef = this.adHost.viewContainerRef;\n    const componentRef = viewContainerRef.createComponent<AdComponent>(componentFactory);\n    componentRef.instance.data = adItem.dataFromParent;\n    componentRef.instance.handler.subscribe(val => {\n      this.handler.emit(val);\n    });\n    componentRef.changeDetectorRef.detectChanges();\n    return componentRef\n  }\n\n  ngOnInit() {\n    this.loadComponent();\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver"
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-81815506698c876bb928eed614f5899c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\n\nexport class AppComponent  {\n  title=\"\"\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p appHighlight>Secure Privacy Components Angular</p>"
        },
        {
            "name": "BillingCardComponent",
            "id": "component-BillingCardComponent-3d0290c15350dc9719a78367c5e1af16",
            "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-card/billing-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-billing-card",
            "styleUrls": [
                "./billing-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./billing-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "date",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "lastNumbers",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "name",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-billing-card',\n  templateUrl: './billing-card.component.html',\n  styleUrls: ['./billing-card.component.scss']\n})\nexport class BillingCardComponent implements OnInit {\n  @Input() lastNumbers: string;\n  @Input() date: string;\n  @Input() name: string;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-billing-card {\n  &__wrapper {\n    width: 268px;\n    height: 304px;  \n    padding: 24px;\n    border-radius: 20px;\n    background-color: rgba(var(--secondary-color-code), 0.05);\n  }\n  \n  position: relative;\n  width: 160px;\n  height: 106px;\n  padding: 16px;\n  background: url('../../../../../assets/images/card-bg.png');\n  border-radius: 16px;\n\n  font-family: 'Sofia pro', 'open-sans';\n  color: var(--text-color);\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 49px;\n    left: 16px;\n    width: 22px;\n    height: 16px;\n    background: url('../../../../../assets/images/card-chip.png');\n  }\n\n  &::before {\n    content: '';\n    z-index: 2;\n    position: absolute;\n    bottom: 16px;\n    right: 16px;\n    width: 22px;\n    height: 16px;\n    background: url('../../../../../assets/images/card-bank.png') no-repeat center;\n    background-size: contain;\n  }\n\n  &__number {\n    margin-top: 45px;\n    font-weight: 500;\n    font-size: 12px;\n  }\n\n  &__title {\n    font-style: normal;\n    font-weight: 800;\n    font-size: 8px;\n    text-transform: uppercase;\n  }\n\n  &__currency {\n    font-weight: 800;\n    font-size: 16px;\n  }\n\n  &__top {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  &__details {\n    width: 100%;\n  }\n\n  &__detail {\n    width: 100%;\n    margin-bottom: 3px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 180%;\n    color: var(--secondary-color);\n\n    &-title {\n      font-weight: 300;\n      color: rgba(var(--secondary-color-code), 0.9);\n    }\n  }\n}\n\n.separator {\n  height: 1px;\n  width: 100%;\n  background-color: rgba(var(--secondary-color-code), 0.1);\n  margin: 24px 0;\n}",
                    "styleUrl": "./billing-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-billing-card__wrapper\">\n  <div class=\"app-billing-card\">\n    <div class=\"app-billing-card__top\">\n      <p class=\"app-billing-card__title\">United</p>\n      <p class=\"app-billing-card__currency\">$</p>\n    </div>\n    <p class=\"app-billing-card__number\">**** {{ lastNumbers }}</p>\n  </div>\n  <div class=\"separator\"></div>\n  <div class=\"app-billing-card__details\">\n    <div class=\"app-billing-card__detail\">\n      <p class=\"app-billing-card__detail-title\">Mastercard</p>\n      <p>{{ lastNumbers }}</p>\n    </div>\n    <div class=\"app-billing-card__detail\">\n      <p class=\"app-billing-card__detail-title\">Exp date</p>\n      <p>{{ date }}</p>\n    </div>\n    <div class=\"app-billing-card__detail\">\n      <p class=\"app-billing-card__detail-title\">Card holder</p>\n      <p>{{ name }}</p>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "BillingDangerButtonComponent",
            "id": "component-BillingDangerButtonComponent-66031b0cb5853852d8bc6bb27c9f0ff3",
            "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-danger-button/billing-danger-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-billing-danger-button",
            "styleUrls": [
                "./billing-danger-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./billing-danger-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isShort",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-billing-danger-button',\n  templateUrl: './billing-danger-button.component.html',\n  styleUrls: ['./billing-danger-button.component.scss']\n})\n\nexport class BillingDangerButtonComponent implements OnInit {\n  @Input() title: string; \n  @Input() isShort: boolean;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-billing-danger-button {\n  color: var(--danger-color);\n  background: inherit;\n  outline: none;\n  border: 1px solid rgba(var(--danger-color-code), 0.2);\n\n  text-transform: uppercase;\n  text-align: center;\n  font-family: 'Gramatica Bold', 'open-sans';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  height: 46px;\n  width: 100%;\n  padding: 16px 20px;\n\n  transition: var(--transition);\n  border-radius: 8px;\n\n  &.short {\n    height: 30px;\n    padding: 8px 11px;\n    border: 1px solid rgba(var(--danger-color-code), 1);\n    border-radius: 4px;\n\n    &:hover {\n      cursor: pointer;\n      background: rgba(var(--danger-color-code), 1);\n      color: var(--text-color);\n    }\n\n    &:active {\n      background: rgba(var(--danger-color-code), 1);\n      color: var(--text-color);\n    }\n  }\n\n  &:hover {\n    cursor: pointer;\n    background: rgba(var(--danger-color-code), 0.3);\n  }\n\n  &:active {\n    background: rgba(var(--danger-color-code), 0.5);\n  }\n}",
                    "styleUrl": "./billing-danger-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button \n  type=\"button\" \n  [ngClass]=\"{'app-billing-danger-button': true, 'short': isShort, 'third': false}\"\n>\n  {{ title }}\n</button>\n"
        },
        {
            "name": "BillingInputComponent",
            "id": "component-BillingInputComponent-9f363d7bc73c5869ec5b3286e0ad2544",
            "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-input/billing-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-billing-input",
            "styleUrls": [
                "./billing-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./billing-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "initialValue",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "isCvv",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "isError",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "placeholderText",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onInputBlur",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter"
                },
                {
                    "name": "onInputFocus",
                    "defaultValue": "new EventEmitter()",
                    "line": 16,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onInputPaste",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                },
                {
                    "name": "onFocus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                },
                {
                    "name": "onPaste",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-billing-input',\n  templateUrl: './billing-input.component.html',\n  styleUrls: ['./billing-input.component.scss']\n})\n\nexport class BillingInputComponent implements OnInit, OnChanges {\n  @Input() id: string;\n  @Input() placeholderText: string;\n  @Input() initialValue: string;\n  @Input() isCvv: boolean;\n  @Input() isError: boolean;\n  @Output() onInputBlur = new EventEmitter();\n  @Output() onInputFocus: EventEmitter<any> = new EventEmitter();\n  @Output() onInputPaste: EventEmitter<any> = new EventEmitter();\n\n  onBlur() {\n    this.onInputBlur.emit()\n  }\n\n  onFocus() {\n    this.onInputFocus.emit();\n  }\n\n  onPaste(event) {\n    event.preventDefault();\n    const value = event.clipboardData.getData('text');\n    this.onInputPaste.emit(value);\n  }\n\n  ngOnChanges(): void {}\n\n  ngOnInit(): void {}\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-billing-input {\n  width: 100%;\n  padding: 15.5px 19px;\n  color: var(--secondary-color);\n  letter-spacing: 0.03em;\n  background: var(--text-color);\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n  border-radius: 8px;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 100%;\n  &::placeholder {\n    color: #1C1C1C;\n    opacity: 0.2;\n  }\n\n  &.error {\n    border: 1px solid rgba(var(--danger-color-code), 0.3);\n  }\n}",
                    "styleUrl": "./billing-input.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<input \n  [ngClass]=\"{ 'app-billing-input': true, error: isError }\"\n  [type]=\"isCvv ? 'password' : 'text'\"\n  [id]=\"id\"\n  [placeholder]=\"placeholderText\"\n  spellcheck=\"false\"\n  [formControl]=\"initialValue\"\n  (blur)=\"onBlur()\"\n  (focus)=\"onFocus()\"\n  (paste)=\"onPaste($event)\"\n  autocomplete=\"off\"\n>\n\n"
        },
        {
            "name": "BillingInvoicesComponent",
            "id": "component-BillingInvoicesComponent-26f211f2f51360a26cad4f91a4d2c108",
            "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-billing-invoices",
            "styleUrls": [
                "./billing-invoices.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./billing-invoices.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialData",
                    "line": 20,
                    "type": "Item[]"
                },
                {
                    "name": "title",
                    "line": 19,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "container",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ]
                },
                {
                    "name": "data",
                    "type": "Item[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "direction",
                    "defaultValue": "'forward'",
                    "type": "\"forward\" | \"back\"",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "element",
                    "defaultValue": "null",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "download",
                    "args": [
                        {
                            "name": "invoice",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "jsdoctags": [
                        {
                            "name": "invoice",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65
                },
                {
                    "name": "sortTable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 30
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\n\ninterface Item {\n  date: string,\n  amount: number,\n  paid: boolean,\n  invoice: string,\n}\n\nconst MOBILE_VIEW = 680;\n\n@Component({\n  selector: 'app-billing-invoices',\n  templateUrl: './billing-invoices.component.html',\n  styleUrls: ['./billing-invoices.component.scss']\n})\n\nexport class BillingInvoicesComponent implements OnInit, AfterViewInit {\n  @Input() title: string;\n  @Input() initialData: Item[];\n\n  data: Item[];\n  direction: 'forward' | 'back' = 'forward';\n  isMobile: boolean;\n  element = null;\n\n  @ViewChild('container') container: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n  }\n\n  sortTable() {\n    if(this.direction === 'forward') {\n      this.direction = 'back';\n      this.data = this.data.sort((a, b) => {\n        const aDateSplited = a.date.split('.');\n        const aDate = Date.parse([aDateSplited[1], aDateSplited[0], aDateSplited[2]].join(' '));\n        const bDateSplited = b.date.split('.');\n        const bDate = Date.parse([bDateSplited[1], bDateSplited[0], bDateSplited[2]].join(' '));\n        return aDate - bDate;\n      });\n    } else {\n      this.direction = 'forward';\n      this.data = this.data.sort((a, b) => {\n        const aDateSplited = a.date.split('.');\n        const aDate = Date.parse([aDateSplited[1], aDateSplited[0], aDateSplited[2]].join(' '));\n        const bDateSplited = b.date.split('.');\n        const bDate = Date.parse([bDateSplited[1], bDateSplited[0], bDateSplited[2]].join(' '));\n        return bDate - aDate;\n      });\n    }\n  }\n\n  download(invoice: string) {\n    console.log(invoice, 'downloaded');\n    /// put your logic here\n  }\n\n  ngAfterViewInit(): void {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;  \n  }\n\n  ngOnInit(): void {\n    this.data = JSON.parse(JSON.stringify(this.initialData));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-billing-invoices {\n  padding: 32px;\n  background: var(--text-color);\n  box-shadow: 0px 30px 70px rgba(var(--secondary-color-code), 0.15);\n  border-radius: 20px;\n  max-width: 1200px;\n\n  ::ng-deep {\n    .app-billing-title {\n      & > .app-billing-title__text {\n        flex: 0 0 190px;  \n      }\n    }\n  }\n\n  &__table-container {\n    width: 100%;\n    overflow-x: scroll;\n\n    &::-webkit-scrollbar-thumb {\n      background-color: rgba(var(--secondary-color-code), 0.5);\n      border-radius: 5px;\n    }\n\n    &::-webkit-scrollbar {\n      height: 5px;\n    }\n  }\n\n  &__status {\n    height: 19px;\n    width: 19px;\n    position: relative;\n    border-radius: 50%;\n    background-color: rgba(var(--danger-color-code), 0.2);\n\n    &::after {\n      content: '';\n      width: 7px;\n      height: 7px;\n\n      position: absolute;\n      top: 6px;\n      left: 6px;\n\n      background: url('../../../../../assets/images/close.svg') center no-repeat;\n      background-size: contain;\n    }\n\n    &.active {\n      background: var(--success-grad-light);\n\n      &::after {\n        content: '';\n        width: 9px;\n        height: 9px;\n  \n        position: absolute;\n        top: 5px;\n        left: 5px;\n  \n        background: url('../../../../../assets/images/checkbox.svg') center no-repeat;\n        background-size: contain;\n      }\n    }\n  }\n\n  &__table {\n    width: 100%;\n    min-width: 400px;\n    \n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-size: 12px;\n    line-height: 100%;\n    text-align: left;\n    border-collapse: collapse;\n    color: var(--secondary-color);\n\n    &-row {\n      padding: 16px 0;\n      font-weight: 300;\n      color: rgba(var(--secondary-color-code), 1);\n  \n      &-item {\n        padding: 16px 0;\n        width: 25%;\n\n        &.download {\n          font-weight: 800;\n          text-decoration-line: underline;\n          transition: var(--transition);\n\n          &:hover {\n            cursor: pointer;\n          }\n\n          &:active {\n            opacity: 0.8;\n          }\n        }\n      }\n    }\n\n    &-header {\n      font-weight: 400;\n      color: rgba(var(--secondary-color-code), 0.5);\n      border-bottom: 0.6px solid rgba(var(--secondary-color-code), 0.1);\n  \n      &-item {\n        padding: 16px 0;\n  \n        &.date {\n          display: flex;\n          align-items: center;\n          justify-content: flex-start;\n  \n          &:hover {\n            cursor: pointer;\n          }\n  \n          & > img {\n            margin-left: 10px;\n          }\n        }\n      }\n    }\n  }\n}",
                    "styleUrl": "./billing-invoices.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div \n  class=\"app-billing-invoices\"\n  #container\n  [style.padding]=\"isMobile ? '16px' : '32px'\"\n>\n  <app-billing-title [title]=\"title\"></app-billing-title>\n  <div class=\"app-billing-invoices__table-container\">\n    <table class=\"app-billing-invoices__table\">\n      <tr class=\"app-billing-invoices__table-header\">\n        <th class=\"app-billing-invoices__table-header-item date\" (click)=\"sortTable()\">\n          Date\n          <img src=\"assets/images/sort-arrows.png\" alt=\"sort arrow\">\n        </th>\n        <th class=\"app-billing-invoices__table-header-item\">Amount</th>\n        <th class=\"app-billing-invoices__table-header-item\">Paid</th>\n        <th class=\"app-billing-invoices__table-header-item\">Download Invoice</th>\n      </tr>\n      <tr *ngFor=\"let item of data\" class=\"app-billing-invoices__table-row\">\n        <td class=\"app-billing-invoices__table-row-item\">{{ item.date }}</td>\n        <td class=\"app-billing-invoices__table-row-item\">${{ item.amount.toFixed(2) }}</td>\n        <td class=\"app-billing-invoices__table-row-item status\">\n          <div [ngClass]=\"{ 'app-billing-invoices__status': true, 'active': item.paid }\"></div>\n        </td>\n        <td \n          class=\"app-billing-invoices__table-row-item download\"\n          (click)=\"download(item.invoice)\"\n        >\n          Download\n        </td>\n     </tr>\n    </table>\n  </div>\n"
        },
        {
            "name": "BillingModalComponent",
            "id": "component-BillingModalComponent-8a5d7c6d1a4a819407ba4fce358893d3",
            "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-modal/billing-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-billing-modal",
            "styleUrls": [
                "./billing-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./billing-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dangerButtonTitle",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "secondaryButtonTitle",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "text",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onDangerClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onSecondaryClick",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-billing-modal',\n  templateUrl: './billing-modal.component.html',\n  styleUrls: ['./billing-modal.component.scss']\n})\nexport class BillingModalComponent implements OnInit {\n  @Input() title: string;\n  @Input() text:  string;\n  @Input() secondaryButtonTitle: string;\n  @Input() dangerButtonTitle: string;\n  @Output() close: EventEmitter<any> = new EventEmitter();\n  @Output() onSecondaryClick: EventEmitter<any> = new EventEmitter();\n  @Output() onDangerClick: EventEmitter<any> = new EventEmitter();\n\n  ngOnInit() {\n    \n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-billing-modal {\n  width: 100vw;\n  height: 100vh;\n  z-index: 3;  \n  \n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  background-color: rgba(var(--secondary-color-code), 0.5);\n  text-align: center;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  color: var(--secondary-color);\n\n  &__container {\n    min-width: 588px;\n    max-width: 800px;\n    padding: 32px 64px;\n    margin: auto;\n\n    position: relative;\n    background: var(--card-bg-color);\n    border-radius: 12px 30px;\n  }\n\n  &__title {\n    font-weight: 800;\n    font-size: 24px;\n    line-height: 180%;\n\n    margin-bottom: 16px;\n  }\n\n  &__text {\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 150%;\n\n    margin-bottom: 32px;\n  }\n\n  &__close {\n    position: absolute;\n    right: 28px;\n    top: 24px;\n    \n    background-color: transparent;\n    border: none;\n    outline: none;\n  }\n\n  &__buttons {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    ::ng-deep {\n      .app-billing-secondary-button {\n        width: 140px;\n      }\n\n      .app-billing-danger-button  {\n        width: 116px;\n        margin-left: 32px;\n      }\n    }\n  }\n}\n\n@media screen and (max-width: 600px) {\n  .app-billing-modal {\n    &__container {\n      min-width: 95%;\n      max-width: 95%;\n      padding: 20px;\n    }\n    &__buttons {\n      ::ng-deep {\n        .app-billing-danger-button  {\n          margin-left: 10px;\n        }\n      }\n    }\n  }\n}",
                    "styleUrl": "./billing-modal.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-billing-modal\">\n  <div class=\"app-billing-modal__container\">\n    <button \n      type=\"button\" \n      class=\"app-billing-modal__close\" \n      (click)=\"close.emit()\"\n    >\n      <img src=\"assets/images/deleteX.png\" alt=\"delete\">\n    </button>\n    <p class=\"app-billing-modal__title\">{{ title }}</p>\n    <p class=\"app-billing-modal__text\" [innerHTML]=\"text\"></p>\n    <div class=\"app-billing-modal__buttons\">\n      <app-billing-secondary-button \n        [title]=\"secondaryButtonTitle\"\n        (click)=\"onSecondaryClick.emit()\"\n      >\n      </app-billing-secondary-button>\n      <app-billing-danger-button \n        *ngIf=\"dangerButtonTitle && dangerButtonTitle !== ''\"\n        [title]=\"dangerButtonTitle\"\n        (click)=\"onDangerClick.emit()\"\n      >\n      </app-billing-danger-button>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "BillingPaymentComponent",
            "id": "component-BillingPaymentComponent-e2a49d2958effa9524c3c5355d5b65e5",
            "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-billing-payment",
            "styleUrls": [
                "./billing-payment.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./billing-payment.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "tableData",
                    "line": 23,
                    "type": "TableItem[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cardNumber",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "container",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ]
                },
                {
                    "name": "date",
                    "defaultValue": "\"**/**\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "errors",
                    "defaultValue": "{\n    month: false,\n    year: false,\n    cvv: false,\n    name: false,\n    number: false\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "isSmallMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "lastNumbers",
                    "defaultValue": "'0000'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "monthes",
                    "defaultValue": "MONTHES",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "name",
                    "defaultValue": "'Name'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "temporaryCardNumber",
                    "defaultValue": "new FormControl(this.cardNumber)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "temporaryCvv",
                    "defaultValue": "new FormControl('')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "temporaryMonth",
                    "defaultValue": "'Month'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "temporaryName",
                    "defaultValue": "new FormControl(this.name)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "temporaryYear",
                    "defaultValue": "'Year'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "totalSum",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "vat",
                    "defaultValue": "25",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteError",
                    "args": [
                        {
                            "name": "type",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 199
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 204
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101
                },
                {
                    "name": "setCardNumber",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCvv",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setMonth",
                    "args": [
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setName",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setYear",
                    "args": [
                        {
                            "name": "value",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "type",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateOnPaste",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        },
                        {
                            "name": "type",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 51
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\ninterface TableItem {\n  status: boolean,\n  details: string,\n  cycle: string,\n  domains: number,\n  unitPrice: number,\n}\n\nconst MOBILE_VIEW = 800;\nconst SMALL_MOBILE_VIEW = 680;\nconst MONTHES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n@Component({\n  selector: 'app-billing-payment',\n  templateUrl: './billing-payment.component.html',\n  styleUrls: ['./billing-payment.component.scss']\n})\n\nexport class BillingPaymentComponent implements OnInit, AfterViewInit {\n  @Input() tableData: TableItem[];\n\n  lastNumbers: string = '0000';\n  date: string = \"**/**\";\n  name: string = 'Name'\n  cardNumber: string = '';\n  isMobile: boolean;\n  isSmallMobile: boolean;\n  monthes = MONTHES;\n  totalSum: number;\n  errors = {\n    month: false,\n    year: false,\n    cvv: false,\n    name: false,\n    number: false\n  }\n  vat: number = 25;\n\n  temporaryMonth = 'Month';\n  temporaryYear = 'Year';\n  temporaryCardNumber = new FormControl(this.cardNumber);\n  temporaryCvv = new FormControl('');\n  temporaryName = new FormControl(this.name);\n\n  @ViewChild('container') container: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n    this.isSmallMobile = this.container.nativeElement.clientWidth < SMALL_MOBILE_VIEW;\n  }\n\n  setYear(value: number) {\n    this.temporaryYear = value + '';\n  }\n\n  setMonth(value: string) {\n    this.temporaryMonth = value;\n  }\n\n  setName(event) {\n    const value = event.target.value;\n    const index = value.length - 1;\n    if (value[index].match(/[a-z]/i) && index < 20) {\n      this.temporaryName.setValue(value);\n    } else {\n      this.temporaryName.setValue(value.substring(0, index));\n    }\n  }\n\n  setCardNumber(event) {\n    if (event.target.value.trim().length) {\n      let value = event.target.value.split(\" - \").join('');\n      let splitedValue = value.match(new RegExp('.{1,4}', 'g')).join(\" - \");\n      const index = splitedValue.length - 1;\n  \n      if (+splitedValue[index]) {\n        splitedValue = splitedValue.length > 25 ? splitedValue.substr(0, 25) : splitedValue;\n        this.temporaryCardNumber.setValue(splitedValue);\n      } else {\n        this.temporaryCardNumber.setValue(splitedValue.substring(0, index));\n      }\n    } else {\n      this.temporaryCardNumber.setValue('');\n    }\n  }\n\n  setCvv(event) {\n    const value = event.target.value;\n    const index = value.length - 1;\n    if (+value[index] && value.length < 4) {\n      this.temporaryCvv.setValue(value);\n    } else {\n      this.temporaryCvv.setValue(value.substring(0, index));\n    }\n  }\n\n  save() {\n    let errorsNumbers = 0;\n    const cardNumberJoined = this.temporaryCardNumber.value.split(\" - \").join('');\n    if (this.temporaryYear === 'Year') {\n      this.errors.year = true;\n      errorsNumbers++;\n    }\n    if (this.temporaryCvv.value.length < 3) {\n      this.errors.cvv = true;\n      errorsNumbers++;\n    }\n    if (this.temporaryMonth === 'Month') {\n      this.errors.month = true;\n      errorsNumbers++;\n    }\n    if (this.temporaryName.value.length < 5) {\n      this.errors.name = true;\n      errorsNumbers++;\n    }\n    if (cardNumberJoined.length < 16) {\n      this.errors.number = true;\n      errorsNumbers++;\n    }\n \n    if (errorsNumbers > 0) {\n      return\n    }\n    const month = this.monthes.findIndex(item => item === this.temporaryMonth) + 1;\n    const convertedMonth = month < 10 ? `0${month}` : `${month}`;\n    const year = `${this.temporaryYear}`.substr(2, 4);\n    this.date = `${convertedMonth}/${year}`;\n    this.lastNumbers = cardNumberJoined.substr(12, 16);\n    this.name = this.temporaryName.value;\n  }\n\n  validate(type: string) {\n    switch(type) {\n      case 'name':\n        if (this.temporaryName.value.length < 5) {\n          this.errors.name = true;\n        }\n        break;\n      case 'number':\n        const cardNumberJoined = this.temporaryCardNumber.value.split(\" - \").join('');\n        if (cardNumberJoined.length < 16) {\n          this.errors.number = true;\n        }\n        break;\n      case 'cvv':\n        if (this.temporaryCvv.value.length < 3) {\n          this.errors.cvv = true;\n        }\n        break;\n      case 'month':\n        if (this.temporaryMonth === 'Month') {\n          this.errors.month = true;\n        }\n        break;\n      case 'year':\n        if (this.temporaryYear === 'Year') {\n          this.errors.year = true;\n        }\n        break;\n    }\n  }\n\n  validateOnPaste(value, type) {\n    const patternNumbers  = /\\d+/g;\n    const patternLetters = /[a-z]+/gi;\n    let matches;\n    let filtered;\n    switch (type) {\n      case 'number':\n        matches = value.match(patternNumbers);\n        filtered = matches ? matches.join('') : '';\n        this.temporaryCardNumber.setValue(filtered);\n        break;\n      case 'cvv':\n        matches = value.match(patternNumbers);\n        filtered = matches ? matches.join('') : '';\n        filtered = filtered.length > 3 ? filtered.substr(0, 3) : filtered;\n        this.temporaryCvv.setValue(filtered);\n        break;\n      case 'name': \n        matches = value.match(patternLetters);\n        filtered = matches ? matches.join('') : '';\n        filtered = filtered.length > 20 ? filtered.substr(0, 20) : filtered;\n        this.temporaryName.setValue(filtered);\n        break;\n      default:\n        return;\n    }\n  }\n\n  deleteError (type: string) {\n    this.errors[type] = false;\n  }\n\n  ngAfterViewInit() {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n    this.isSmallMobile = this.container.nativeElement.clientWidth < SMALL_MOBILE_VIEW;\n  }\n\n  ngOnInit(): void {\n    let sum = 0;\n    this.tableData.forEach((value) => { sum = sum + value.unitPrice * value.domains });\n    this.totalSum = sum;\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-billing-payment {\n  padding: 32px;\n  background: var(--text-color);\n  box-shadow: 0px 30px 70px rgba(var(--secondary-color-code), 0.15);\n  border-radius: 20px;\n  max-width: 1200px;\n\n  &__container {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 32px;\n  }\n\n  &__form {\n    width: calc(100% - 324px);\n\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: normal;\n    font-size: 12px;\n    line-height: 160%;\n    color: rgba(var(--secondary-color-code), 0.5);\n\n    &-row {\n      display: flex;\n      align-items: flex-end;\n\n      ::ng-deep {\n        app-billing-primary-button {\n          width: 115px;\n          margin-left: 30px;\n        }\n      }\n    }\n\n    &-cvv {\n      margin-left: 30px;\n      width: 115px;\n    }\n\n    &-holder {\n      width: calc(100% - 145px);\n    }\n\n    &-input-wrapper {\n      width: calc(100% - 145px);\n    }\n\n    &-title {\n      margin-bottom: 10px;\n      margin-top: 16px;\n    }\n\n    &-date {\n      width: 100%;\n      display: flex;\n      justify-content: space-between;\n\n      ::ng-deep {\n        app-billing-select {\n          width: 47%;\n        }\n      }\n    }\n  }\n\n  &__total {\n    height: 77px;\n    width: 290px;\n    max-width: 100%;\n    padding: 14px 55px;\n    margin-top: 15px;\n    margin-left: auto;\n\n    background: rgba(var(--secondary-color-code), 0.05);\n    border-radius: 12px;\n    font-family: 'Sofia pro', 'open-sans';\n\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n\n    &-titles {\n      width: calc(100% - 65px);\n    }\n\n    &-title-main, &-value-main {\n      font-weight: 600;\n      font-size: 16px;\n      line-height: 180%;\n      background: var(--success-grad-light);\n      -webkit-background-clip: text;\n      background-clip: text;\n      -webkit-text-fill-color: transparent;\n\n      margin-bottom: 5px;\n    }\n\n    &-title-secondary, &-value-secondary{\n      font-weight: 500;\n      font-size: 12px;\n      line-height: 130%;\n      color: rgba(var(--secondary-color-code), 0.5);\n    }\n  }\n}\n",
                    "styleUrl": "./billing-payment.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div \n  class=\"app-billing-payment\" \n  #container\n  [style.padding]=\"isSmallMobile ? '16px' : '32px'\"\n>\n  <app-billing-title [title]=\"'Payment Details'\"></app-billing-title>\n  <div \n    class=\"app-billing-payment__container\"\n    [style.flexDirection]=\"isSmallMobile ? 'column' : 'row'\"\n    [style.alignItems]=\"isSmallMobile ? 'center' : 'flex-start'\"\n  >\n    <app-billing-card\n      [lastNumbers]=\"lastNumbers\"\n      [date]=\"date\"\n      [name]=\"name\"\n    ></app-billing-card>\n    <div \n      class=\"app-billing-payment__form\"\n      [style.width]=\"isSmallMobile ? '100%' : 'calc(100% - 324px)'\"\n    >\n      <p class=\"app-billing-payment__form-title\">Credit card number*</p>\n      <app-billing-input\n        (input)=\"setCardNumber($event)\"\n        [id]=\"'card-number'\"\n        [placeholderText]=\"''\"\n        [initialValue]=\"temporaryCardNumber\"\n        [isError]=\"errors.number\"\n        (onInputBlur)=\"validate('number')\"\n        (onInputFocus)=\"deleteError('number')\"\n        (onInputPaste)=\"validateOnPaste($event, 'number')\"\n      ></app-billing-input>\n      <div \n        class=\"app-billing-payment__form-row\"\n        [style.flexDirection]=\"isMobile ? 'column' : 'row'\"\n      >\n        <div \n          class=\"app-billing-payment__form-input-wrapper\"\n          [style.width]=\"isMobile ? '100%' : 'calc(100% - 145px)'\"\n        >\n          <p class=\"app-billing-payment__form-title\">Expiry date*</p>\n          <div class=\"app-billing-payment__form-date\">\n            <app-billing-select\n              (onInputBlur)=\"validate('month')\"\n              (onInputFocus)=\"deleteError('month')\"\n              (parentHandler)=\"setMonth($event)\"\n              [initialValue]=\"temporaryMonth\"\n              [isError]=\"errors.month\"\n              [items]=\"monthes\"\n            ></app-billing-select>\n            <app-billing-select\n              (onInputBlur)=\"validate('year')\"\n              (onInputFocus)=\"deleteError('year')\"\n              (parentHandler)=\"setYear($event)\"\n              [initialValue]=\"temporaryYear\"\n              [isError]=\"errors.year\"\n              [items]=\"[2021, 2022, 2023, 2024, 2025, 2026, 2027]\"\n            ></app-billing-select>\n          </div>\n        </div>\n        <div \n          class=\"app-billing-payment__form-cvv\"\n          [style.width]=\"isMobile ? '100%' : '115px'\"\n          [style.marginLeft]=\"isMobile ? '0' : '30px'\"\n        >\n          <p class=\"app-billing-payment__form-title\">CVC/CVV2*</p>\n          <app-billing-input\n            [id]=\"'cvv'\"\n            [placeholderText]=\"''\"\n            [initialValue]=\"temporaryCvv\"\n            [isCvv]=\"true\"\n            [isError]=\"errors.cvv\"\n            (input)=\"setCvv($event)\"\n            (onInputBlur)=\"validate('cvv')\"\n            (onInputFocus)=\"deleteError('cvv')\"\n            (onInputPaste)=\"validateOnPaste($event, 'cvv')\"\n          ></app-billing-input>\n        </div>\n      </div>\n      <div class=\"app-billing-payment__form-row\" [style.flexDirection]=\"isSmallMobile ? 'column' : 'row'\">\n        <div \n          class=\"app-billing-payment__form-holder\" \n          [style.width]=\"isSmallMobile ? '100%' : 'calc(100% - 145px)'\"\n        >\n          <p class=\"app-billing-payment__form-title\">Card holder*</p>\n          <app-billing-input\n            (input)=\"setName($event)\"\n            [id]=\"'name'\"\n            [placeholderText]=\"''\"\n            [initialValue]=\"temporaryName\"\n            [isError]=\"errors.name\"\n            (onInputBlur)=\"validate('name')\"\n            (onInputFocus)=\"deleteError('name')\"\n            (onInputPaste)=\"validateOnPaste($event, 'name')\"\n          ></app-billing-input>\n        </div>\n        <app-billing-primary-button \n          (click)=\"save()\"\n          [title]=\"'Save'\"\n          [style.width]=\"isSmallMobile ? '100%' : '115px'\"\n          [style.marginLeft]=\"isSmallMobile ? '0' : '30px'\"\n          [style.marginTop]=\"isSmallMobile ? '30px' : '0'\"\n        ></app-billing-primary-button>\n      </div>\n    </div>\n  </div>\n  <app-billing-payment-table [initialData]=\"tableData\"></app-billing-payment-table>\n  <div class=\"app-billing-payment__total\" [style.padding]=\"isSmallMobile ? '14px 55px' : '14px 70px'\">\n    <div class=\"app-billing-payment__total-titles\">\n      <p class=\"app-billing-payment__total-title-main\">Sum Total</p>\n      <p class=\"app-billing-payment__total-title-secondary\">Vat</p>\n    </div>\n    <div class=\"app-billing-payment__total-values\">\n      <p class=\"app-billing-payment__total-value-main\">${{ totalSum }}</p>\n      <p class=\"app-billing-payment__total-value-secondary\">{{ vat }}%</p>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "BillingPaymentTableComponent",
            "id": "component-BillingPaymentTableComponent-5689fc03be2737bca918d09426315e1d",
            "file": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-billing-payment-table",
            "styleUrls": [
                "./billing-payment-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./billing-payment-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialData",
                    "line": 21,
                    "type": "Item[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "type": "Item[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "direction",
                    "defaultValue": "'forward'",
                    "type": "\"forward\" | \"back\"",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "detectColor",
                    "args": [
                        {
                            "name": "status",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)\" | \"#EA2D2D\"",
                    "typeParameters": [],
                    "line": 26,
                    "jsdoctags": [
                        {
                            "name": "status",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40
                },
                {
                    "name": "sortTable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\ninterface Item {\n  status: boolean,\n  details: string,\n  cycle: string,\n  domains: number,\n  unitPrice: number,\n}\n\nconst ACTIVE_COLOR = 'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)';\nconst INACTIVE_COLOR = '#EA2D2D';\n\n@Component({\n  selector: 'app-billing-payment-table',\n  templateUrl: './billing-payment-table.component.html',\n  styleUrls: ['./billing-payment-table.component.scss']\n})\n\nexport class BillingPaymentTableComponent implements OnInit {\n  @Input() initialData: Item[];\n\n  data: Item[];\n  direction: 'forward' | 'back' = 'forward';\n\n  detectColor(status) {\n    return status ? ACTIVE_COLOR : INACTIVE_COLOR;\n  }\n\n  sortTable() {\n    if(this.direction === 'forward') {\n      this.direction = 'back';\n      this.data = this.data.sort((a, b) => a.domains - b.domains);\n    } else {\n      this.direction = 'forward';\n      this.data = this.data.sort((a, b) => b.domains - a.domains);\n    }\n  }\n\n  ngOnInit(): void {\n    this.data = JSON.parse(JSON.stringify(this.initialData));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-billing-payment-table {\n  width: 100%;\n  min-width: 600px;\n  \n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-size: 12px;\n  line-height: 100%;\n  text-align: left;\n  border-collapse: collapse;\n  \n  &__container {\n    width: 100%;\n    overflow-x: scroll;\n\n    &::-webkit-scrollbar-thumb {\n      background-color: rgba(var(--secondary-color-code), 0.5);\n      border-radius: 5px;\n    }\n\n    &::-webkit-scrollbar {\n      height: 5px;\n    }\n  }\n\n  &__header {\n    font-weight: 400;\n    color: rgba(var(--secondary-color-code), 0.5);\n    border-bottom: 0.6px solid rgba(var(--secondary-color-code), 0.1);\n\n    &-item {\n      padding: 16px 0;\n\n      &.domains {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n\n        &:hover {\n          cursor: pointer;\n        }\n\n        & > img {\n          margin-left: 10px;\n        }\n      }\n    }\n  }\n\n  &__row {\n    padding: 16px 0;\n    font-weight: 300;\n    color: rgba(var(--secondary-color-code), 1);\n\n    &-item {\n      padding: 16px 0;\n\n      &.status-block {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n      }\n    }\n  }\n\n  &__status {\n    width: 10px;\n    height: 10px;\n    margin-right: 10px;\n    border-radius: 50%;\n    position: relative;\n    margin-bottom: 2px;\n\n    &:after {\n      content: '';\n      width: 6px;\n      height: 6px;\n      border-radius: 50%;\n      position: absolute;\n      top: 2px;\n      left: 2px;\n      background-color: var(--text-color);\n    }\n  }\n}",
                    "styleUrl": "./billing-payment-table.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-billing-payment-table__container\">\n  <table class=\"app-billing-payment-table\">\n    <tr class=\"app-billing-payment-table__header\">\n      <th class=\"app-billing-payment-table__header-item\">Status</th>\n      <th class=\"app-billing-payment-table__header-item\">Plan Details</th>\n      <th class=\"app-billing-payment-table__header-item\">Billing Cycle</th>\n      <th class=\"app-billing-payment-table__header-item domains\" (click)=\"sortTable()\">\n        Domains\n        <img src=\"assets/images/sort-arrows.png\" alt=\"sort arrow\">\n      </th>\n      <th class=\"app-billing-payment-table__header-item\">Unit Price</th>\n      <th class=\"app-billing-payment-table__header-item\">Total Price</th>\n    </tr>\n    <tr *ngFor=\"let item of data\" class=\"app-billing-payment-table__row\">\n      <td class=\"app-billing-payment-table__row-item status-block\">\n        <div \n          class=\"app-billing-payment-table__status\"\n          [style.background]=\"detectColor(item.status)\"\n        ></div>\n        {{ item.status ? 'Active' : 'Non-active' }}\n      </td>\n      <td class=\"app-billing-payment-table__row-item\">{{ item.details }}</td>\n      <td class=\"app-billing-payment-table__row-item\">{{ item.cycle }}</td>\n      <td class=\"app-billing-payment-table__row-item\">{{ item.domains }}</td>\n      <td class=\"app-billing-payment-table__row-item\">${{ item.unitPrice.toFixed(2) }}</td>\n      <td class=\"app-billing-payment-table__row-item\">${{ (item.unitPrice * item.domains).toFixed(2) }}</td>\n   </tr>\n  </table>\n</div>\n"
        },
        {
            "name": "BillingPlanComponent",
            "id": "component-BillingPlanComponent-a3f6699e86fc761853bdb333939fefc6",
            "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-billing-plan",
            "styleUrls": [
                "./billing-plan.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./billing-plan.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currency",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "date",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "description",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "domainsNumber",
                    "line": 21,
                    "type": "number"
                },
                {
                    "name": "features",
                    "line": 12,
                    "type": "string[]"
                },
                {
                    "name": "featuresTitle",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "isFreemium",
                    "line": 19,
                    "type": "boolean"
                },
                {
                    "name": "period",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "price",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "container",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ]
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "isModalVisible",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "MODAL_APPROVE",
                    "defaultValue": "'approve'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "MODAL_ERROR",
                    "defaultValue": "'error'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "modalType",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "downgradePlan",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                },
                {
                    "name": "hideModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                },
                {
                    "name": "showModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 32
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\n\nconst MOBILE_VIEW = 680;\n\n@Component({\n  selector: 'app-billing-plan',\n  templateUrl: './billing-plan.component.html',\n  styleUrls: ['./billing-plan.component.scss']\n})\n\nexport class BillingPlanComponent implements OnInit, AfterViewInit {\n  @Input() features: string[];\n  @Input() title: string;\n  @Input() featuresTitle: string;\n  @Input() period: string;\n  @Input() price: string;\n  @Input() currency: string;\n  @Input() description: string;\n  @Input() isFreemium: boolean;\n  @Input() date: string; \n  @Input() domainsNumber: number;\n\n  MODAL_ERROR = 'error';\n  MODAL_APPROVE = 'approve';\n\n  isMobile: boolean;\n  isModalVisible: boolean;\n  modalType: string;\n  @ViewChild('container') container: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n  }\n\n  showModal() {\n    this.modalType = this.domainsNumber > 1 ? this.MODAL_ERROR : this.MODAL_APPROVE;\n    this.isModalVisible = true;\n  }\n\n  hideModal() {\n    this.isModalVisible = false;\n  }\n\n  downgradePlan() {\n    this.isModalVisible = false;\n    console.log('Downgraded');\n    /// put your logic\n  }\n\n  ngAfterViewInit(): void {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;  \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-billing-plan {\n  padding: 32px;\n  background: var(--text-color);\n  box-shadow: 0px 30px 70px rgba(var(--secondary-color-code), 0.15);\n  border-radius: 20px;\n  max-width: 1200px;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  color: rgba(var(--secondary-color-code), 1);\n\n  &__container {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n  }\n\n  &__card-wrapper {\n    border: 1px solid rgba(var(--secondary-color-code), 0.2);\n    padding: 16px;\n    border-radius: 24px;\n    max-width: 100%;\n\n    ::ng-deep {\n      .app-billing-primary-asymmetrical-button {\n        width: 184px;\n        margin: 0 auto;\n      }\n    }\n  }\n\n  &__card {\n    width: 352px;\n    max-width: 100%;\n    padding: 56px 10% 24px;\n\n    background: var(--text-color);\n    box-shadow: 0px 40px 100px rgba(28, 86, 76, 0.3);\n    border-radius: 24px;\n\n    text-align: center;\n\n    &-title {\n      font-family: 'Gramatica Bold', 'open-sans';\n      font-size: 42px;\n      line-height: 130%;\n    }\n\n    &-description {\n      font-weight: 300;\n      font-size: 14px;\n      line-height: 140%;\n      margin-bottom: 16px;\n    }\n\n    &-price {\n      font-weight: 800;\n      font-size: 32px;\n      line-height: 125%;\n      margin-bottom: 54px;\n    }\n\n    &-period {\n      font-weight: 300;\n      font-size: 16px;\n      line-height: 140%;\n    }\n  }\n\n  &__features {\n    width: calc(100% - 386px - 32px);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    &-title {\n      font-weight: 300;\n      font-size: 16px;\n      line-height: 140%;\n\n      margin-bottom: 17px;\n    }\n\n    &-description {\n      font-weight: 300;\n      font-size: 12px;\n      line-height: 160%;\n      color: rgba(var(--secondary-color-code), 0.5);\n\n      width: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    &-item {\n      display: flex;\n      align-items: center;\n      margin-bottom: 16px;\n\n      font-weight: 300;\n      font-size: 12px;\n      line-height: 150%;\n    }\n\n    &-status {\n      width: 19px;\n      height: 19px;\n      margin-right: 16px;\n      border-radius: 50%;\n      position: relative;\n      background: var(--success-grad-light);\n\n      &::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 2;\n    \n        box-sizing: border-box;\n        width: 19px;\n        height: 19px;\n        border-radius: 50%;\n    \n        background: no-repeat center url('../../../../../assets/images/checkbox.svg');\n      }\n    }\n  }\n}\n\n.separator {\n  width: 100%;\n  height: 0.6px;\n  background-color: rgba(var(--secondary-color-code), 0.1);\n  margin-bottom: 23px;\n}",
                    "styleUrl": "./billing-plan.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div\n  class=\"app-billing-plan\"\n  #container\n  [style.padding]=\"isMobile ? '16px' : '32px'\"\n>\n  <app-billing-modal\n    *ngIf=\"isModalVisible && modalType===MODAL_APPROVE\"\n    [title]=\"'Are You Sure?'\"\n    [text]=\"'Are you sure you want to unsubscribe from your plan? You will be downgrade to the &#60;b&#62;&quot;Freemium plan&quot;&#60;/b&#62;'\"\n    [secondaryButtonTitle]=\"'Cancel'\"\n    [dangerButtonTitle]=\"'Downgrade'\"\n    (close)=\"hideModal()\"\n    (onSecondaryClick)=\"hideModal()\"\n    (onDangerClick)=\"downgradePlan()\"\n  ></app-billing-modal>\n  <app-billing-modal\n    *ngIf=\"isModalVisible && modalType===MODAL_ERROR\"\n    [title]=\"'Oops, Sorry'\"\n    [text]=\"'We cannot downgrade your account as you have more than 1 domain. Please delete your domains until you have 1 to enable the free plan.'\"\n    [secondaryButtonTitle]=\"'Close'\"\n    (close)=\"hideModal()\"\n    (onSecondaryClick)=\"hideModal()\"\n  ></app-billing-modal>\n  <app-billing-title [title]=\"'Current Plan'\"></app-billing-title>\n  <div \n    class=\"app-billing-plan__container\"\n    [style.flexDirection]=\"isMobile ? 'column' : 'row'\"\n    [style.alignItems]=\"isMobile ? 'center' : 'flex-end'\"\n  >\n    <div class=\"app-billing-plan__card-wrapper\">\n      <div class=\"app-billing-plan__card\">\n        <p \n          class=\"app-billing-plan__card-title\"\n          [style.fontSize]=\"isMobile ? '32px' : '42px'\"\n        >\n          {{ title }}\n        </p>\n        <p class=\"app-billing-plan__card-description\">\n          {{ description }}\n        </p>\n        <p class=\"app-billing-plan__card-price\">\n          ${{ price }}<span class=\"app-billing-plan__card-period\">/{{ period }}</span>\n        </p>\n        <app-billing-primary-asymmetrical-button [title]=\"'change plan'\"></app-billing-primary-asymmetrical-button>\n      </div>\n    </div>\n    <div \n      class=\"app-billing-plan__features\"\n      [style.width]=\"isMobile ? '100%' : 'calc(100% - 386px - 32px)'\"\n      [style.marginTop]=\"isMobile ? '40px' : '0'\"\n    >\n      <ul class=\"app-billing-plan__features-list\">\n        <li class=\"app-billing-plan__features-title\" [innerHTML]=\"featuresTitle\"></li>\n        <li \n          [style.marginBottom]=\"isFreemium ? '16px' : '8px'\"\n          class=\"app-billing-plan__features-item\" \n          *ngFor=\"let feature of features\"\n        >\n          <div class=\"app-billing-plan__features-status\"></div>\n          <p class=\"app-billing-plan__features-text\">{{ feature }}</p>\n        </li>\n      </ul>\n      <div class=\"separator\"></div>\n      <div class=\"app-billing-plan__features-description\" [style.justifyContent]=\"isFreemium ? 'center' : 'space-between'\">\n        <p>\n          Your plan will end on  <b>{{ date }}</b>\n        </p>\n        <app-billing-danger-button\n          *ngIf=\"!isFreemium\" \n          [title]=\"'Downgrade'\" \n          [isShort]=\"true\"\n          [style.marginLeft]=\"isMobile ? '16px' : '9px'\"\n          (click)=\"showModal()\"\n        >\n        </app-billing-danger-button>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "BillingPrimaryAsymmetricalButtonComponent",
            "id": "component-BillingPrimaryAsymmetricalButtonComponent-75ee1ab8d58d0cbe237be5cdacbd0af0",
            "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-asymmetrical-button/billing-primary-asymmetrical-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-billing-primary-asymmetrical-button",
            "styleUrls": [
                "./billing-primary-asymmetrical-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./billing-primary-asymmetrical-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-billing-primary-asymmetrical-button',\n  templateUrl: './billing-primary-asymmetrical-button.component.html',\n  styleUrls: ['./billing-primary-asymmetrical-button.component.scss']\n})\nexport class BillingPrimaryAsymmetricalButtonComponent implements OnInit {\n  @Input() title: string;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-billing-primary-asymmetrical-button {\n  border-radius: 12px 4px;\n  height: 42px;\n  position: relative;\n  z-index: 2;\n  width: 100%;\n\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  padding: 15px 20px;\n  font-family: 'Gramatica Bold', 'open-sans';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 100%;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 12px 4px;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 12px 4px;\n    opacity: 0;\n  }\n  \n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n  \n  &:active {\n    &::before {\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 0;\n    }\n  }\n}\n\n",
                    "styleUrl": "./billing-primary-asymmetrical-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button type=\"button\" class=\"app-billing-primary-asymmetrical-button\">{{ title }}</button>\n"
        },
        {
            "name": "BillingPrimaryButtonComponent",
            "id": "component-BillingPrimaryButtonComponent-5968c752772b2fc8f55415dc4f7dfdbc",
            "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-button/billing-primary-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-billing-primary-button",
            "styleUrls": [
                "./billing-primary-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./billing-primary-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-billing-primary-button',\n  templateUrl: './billing-primary-button.component.html',\n  styleUrls: ['./billing-primary-button.component.scss']\n})\nexport class BillingPrimaryButtonComponent implements OnInit {\n  @Input() title: string;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-billing-primary-button {\n  border-radius: 8px;\n  height: 46px;\n  position: relative;\n  z-index: 2;\n  width: 100%;\n\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  padding: 17px 20px;\n  font-family: 'Gramatica Bold', 'open-sans';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 100%;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 8px;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 8px;\n    opacity: 0;\n  }\n  \n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n  \n  &:active {\n    &::before {\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 0;\n    }\n  }\n}\n\n",
                    "styleUrl": "./billing-primary-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button type=\"button\" class=\"app-billing-primary-button\">{{ title }}</button>\n"
        },
        {
            "name": "BillingSecondaryButtonComponent",
            "id": "component-BillingSecondaryButtonComponent-a402c6429d194b0430b430e03bcff1d5",
            "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-secondary-button/billing-secondary-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-billing-secondary-button",
            "styleUrls": [
                "./billing-secondary-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./billing-secondary-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-billing-secondary-button',\n  templateUrl: './billing-secondary-button.component.html',\n  styleUrls: ['./billing-secondary-button.component.scss'],\n})\n\nexport class BillingSecondaryButtonComponent implements OnInit {\n  @Input() title: string;\n\n  ngAfterViewInit() {}\n  \n  ngOnInit(): void {\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-billing-secondary-button {\n  width: 100%;\n  padding: 16px 20px;\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n  border-radius: 8px;\n  text-transform: uppercase;\n  color: var(--secondary-color);\n  background: transparent;\n  transition: 0.3s;\n\n  font-family: 'Helvetica', 'open-sans';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n\n  &:hover {\n    border: 1px solid rgba(var(--secondary-color-code), 0.7);\n  }\n\n  &:active {\n    border: 1px solid rgba(var(--secondary-color-code), 1);\n  }\n}",
                    "styleUrl": "./billing-secondary-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button type=\"button\" class=\"app-billing-secondary-button\" #container>{{ title }}</button>\n"
        },
        {
            "name": "BillingSelectComponent",
            "id": "component-BillingSelectComponent-a2002532dc1748fc2f29835bbf8a3869",
            "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-select/billing-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-billing-select",
            "styleUrls": [
                "./billing-select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./billing-select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialValue",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "isError",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "items",
                    "line": 10,
                    "type": "string | number[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "onInputBlur",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onInputFocus",
                    "defaultValue": "new EventEmitter()",
                    "line": 16,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "parentHandler",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "onFocus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "onSelect",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-billing-select',\n  templateUrl: './billing-select.component.html',\n  styleUrls: ['./billing-select.component.scss']\n})\n\nexport class BillingSelectComponent implements OnInit {\n  @Input() items: string|number[];\n  @Input() initialValue: string;\n  @Input() isError: boolean;\n\n  @Output() parentHandler: EventEmitter<any> = new EventEmitter();\n  @Output() onInputBlur: EventEmitter<any> = new EventEmitter();\n  @Output() onInputFocus: EventEmitter<any> = new EventEmitter();\n\n  onBlur() {\n    this.onInputBlur.emit();\n  }\n\n  onFocus() {\n    this.onInputFocus.emit();\n  }\n\n  onSelect(value) {\n    this.parentHandler.emit(value);\n  }\n\n  selectedItem: string;\n\n  ngOnInit(): void {\n    this.selectedItem = this.initialValue;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-billing-select {\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 14px;\n  line-height: 100%;\n\n  ::ng-deep {\n    .ng-select {\n      position: relative;\n      box-sizing: border-box;\n      height: 48px; \n      width: 100%;\n    \n      border-radius: 8px;\n      border: 1px solid rgba(var(--secondary-color-code), 0.3);\n      color: rgba(var(--secondary-color-code), 1);\n    \n      &:after {\n        content: url('../../../../../../assets/images/select.png');\n        position: absolute;\n        top: calc(50% - 9px);\n        right: 21px;\n      }\n    \n      &.ng-select-opened{\n        &:after {\n          content: url('../../../../../../assets/images/select.png');\n          position: absolute;\n          top: calc(50% - 9px);\n          right: 21px;\n          transform: rotate(180deg);\n        }\n      }\n    \n      &-container {\n        width: 100%;\n        height: 46px;\n        padding: 16px 21px 16px 16px;\n        margin-bottom: 4px;\n      }\n    }\n\n    .ng-dropdown-panel-items.scroll-host {\n      width: 100%;\n      border: 1px solid rgba(var(--secondary-color-code), 0.3);\n    }\n    \n    .ng-option {\n      background-color: var(--text-color);\n      padding: 16px 21px 16px 16px;  \n    \n      &:hover {\n        background-color: var(--light-btn-hover);\n      }\n    }\n    \n    .ng-dropdown-panel {\n      position: absolute;\n    }\n    \n    .scroll-host {\n      color: rgba(var(--secondary-color-code), 1);\n      position: absolute;\n      box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n      border-radius: 8px;\n    }\n    \n    .ng-clear-wrapper {\n      display: none;\n    }\n  }\n}\n\n.app-billing-select.error {\n  ::ng-deep {\n    .ng-select {\n      border: 1px solid rgba(var(--danger-color-code), 0.3);\n    }\n  }\n}\n",
                    "styleUrl": "./billing-select.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [ngClass]=\"{ 'app-billing-select': true, error: isError }\">\n  <ng-select \n      [(ngModel)]=\"selectedItem\"\n      (change)=\"onSelect($event)\"\n      class=\"app-billing-select__input\" \n      [hideSelected]=\"true\"\n      [searchable]=\"false\"\n      (blur)=\"onBlur()\"\n      (focus)=\"onFocus()\"\n  >\n    <ng-option class=\"app-billing-select__option\" *ngFor=\"let item of items\" [value]=\"item\">\n      {{ item }}\n    </ng-option>\n  </ng-select>\n</div>\n\n"
        },
        {
            "name": "BillingTitleComponent",
            "id": "component-BillingTitleComponent-926da9faca20aefc4b46bb1c64ffefa9",
            "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-title/billing-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-billing-title",
            "styleUrls": [
                "./billing-title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./billing-title.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-billing-title',\n  templateUrl: './billing-title.component.html',\n  styleUrls: ['./billing-title.component.scss']\n})\n\nexport class BillingTitleComponent {\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-billing-title {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 32px;\n\n  &__text {\n    flex: 0 0 150px;  \n    font-family: 'Gramatica Bold', 'open-sans';\n    font-size: 14px;\n    line-height: 150%;\n    text-transform: uppercase;\n    background: var(--success-grad-light);\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n\n  &__line {\n    height: 1px;\n    width: 85%;\n    background: var(--success-grad-light);\n    opacity: 0.1;\n  }\n}",
                    "styleUrl": "./billing-title.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-billing-title\">\n  <h4 class=\"app-billing-title__text\">{{ title }}</h4> \n  <div class=\"app-billing-title__line\"></div>\n</div>\n"
        },
        {
            "name": "BillingWarningComponent",
            "id": "component-BillingWarningComponent-9107e22f403beda3094056b59ddb4bce",
            "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-billing-warning",
            "styleUrls": [
                "./billing-warning.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./billing-warning.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "container",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ]
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 15
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\n\nconst MOBILE_VIEW = 680;\n\n@Component({\n  selector: 'app-billing-warning',\n  templateUrl: './billing-warning.component.html',\n  styleUrls: ['./billing-warning.component.scss']\n})\nexport class BillingWarningComponent implements OnInit, AfterViewInit {\n  isMobile: boolean;\n  @ViewChild('container') container: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n  }\n\n  ngAfterViewInit(): void {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;  \n  }\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-billing-warning {\n  width: 100%;\n  max-width: 1200px;\n  display: flex;\n  background: linear-gradient(269.4deg, rgba(251, 95, 71, 0.2) 38.27%, rgba(249, 190, 90, 0.2) 113.07%);\n  border-radius: 12px;\n  justify-content: space-between;\n  align-items: center;\n\n  &__text {\n    font-family: 'Sofia pro', 'open-sans';\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 130%;\n    color: rgba(var(--secondary-color-code), 0.75);\n  }\n}",
                    "styleUrl": "./billing-warning.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div \n  class=\"app-billing-warning\" \n  #container\n  [style.padding]=\"isMobile ? '16px' : '16px 32px'\"\n  [style.flexDirection]=\"isMobile ? 'column' : 'row'\"\n>\n  <div \n    class=\"app-billing-warning__text\"\n    [style.textAlign]=\"isMobile ? 'center' : 'left'\"\n  >\n    <p>Your current plan is <b>“Freemium”</b>.</p>\n    <p> You’re limited to 1 domain, and have restricted functionality.</p>\n    <br>\n    <p> To add more domains, please upgrade.</p> \n  </div>\n  <app-billing-primary-button \n    [title]=\"'View Pricing'\"\n    [style.width]=\"isMobile ? '100%' : '132px'\"\n    [style.marginTop]=\"isMobile ? '15px' : '0'\"\n  ></app-billing-primary-button>\n</div>\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-6d15749d9e30bca96093e8262a56e615",
            "file": "src/app/atoms/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isActive",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "src",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "text",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\n\nexport class CardComponent implements OnChanges {\n  @Input() text: string;\n  @Input() title: string;\n  @Input() src: string;\n  @Input() isActive: string;\n\n  classes: string;\n\n  ngOnChanges() {\n    this.classes = this.isActive ? \"app-card active\" : \"app-card\";\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-card {\n  width: fit-content;\n  padding: 1px;\n\n  background: rgba(var(--secondary-color-code), 0.5);\n  border-radius: 12px;\n  text-align: center;\n\n  &.active {\n    position: relative;\n    background: var(--success-grad-light);\n      \n    &::after {\n      content: \"\";\n      position: absolute;\n      top: 8px;\n      right: 8px;\n\n      width: 19px;\n      height: 19px;\n\n      background: var(--success-grad-light);\n      border-radius: 50%;\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      z-index: 2;\n\n      box-sizing: border-box;\n      width: 19px;\n      height: 19px;\n      border-radius: 50%;\n\n      background: no-repeat center url('../../../assets/images/checkbox.svg');\n    }\n  }\n\n  &:hover {\n    cursor: pointer;\n    background: var(--success-grad-light);\n    box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n  }\n\n  &__title {\n    margin-bottom: 6px;\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 100%;\n  }\n\n  &__text {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 10px;\n    line-height: 100%;\n  }\n\n  &__wrapper {\n    border-radius: 12px;\n    background-color: var(--text-color);\n  }\n\n  &__text-wrapper {\n    width: 100%;\n    word-wrap: break-word;\n  }\n\n  &__container {\n    width: 130px;\n    padding: 22px 15px 28px;\n\n    border-radius: 12px;\n    background-color: rgba(var(--text-color-code), 0.15);\n    color: var(--secondary-color);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n      & > img {\n        margin-bottom: 20px;\n        width: 44px;\n        height: 50px;\n      }\n    }\n  }\n\n@media screen and (max-width: 600px) {\n  .app-card {\n    width: 100%;\n\n    &.active {\n\n      &::after {\n        top: 12px;\n        left: 58px;\n      }\n    }\n\n    &__wrapper  {\n      width: 100%;\n    } \n\n    &__container {\n      flex-direction: row;\n      padding: 13px 15px;\n      width: 100%;\n\n      & > img {\n        margin-right: 50px;\n        margin-bottom: 0;\n        width: 55px;\n        height: 62px;\n      }\n    }\n\n    &__text-wrapper {\n      text-align: center;\n      width: 50%;\n    }\n  }\n}",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div [ngClass]=\"classes\">\n  <div class=\"app-card__wrapper\">\n    <div class=\"app-card__container\">\n      <img [src]='src' alt=\"text + 'flag'\" />\n      <div class=\"app-card__text-wrapper\">\n        <p class=\"app-card__title\">{{ title }}</p>\n        <p class=\"app-card__text\">{{ text }}</p>\n      </div>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "CardReportsComponent",
            "id": "component-CardReportsComponent-d0bafcf0ab89249cb9b4d4a576bd8cc2",
            "file": "src/app/atoms/card/card-reports/card-reports.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-reports",
            "styleUrls": [
                "./card-reports.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-reports.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iconSrc",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "text",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "value",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-card-reports',\n  templateUrl: './card-reports.component.html',\n  styleUrls: ['./card-reports.component.scss']\n})\n\nexport class CardReportsComponent {\n  @Input() title: string;\n  @Input() text: string;\n  @Input() iconSrc: string;\n  @Input() value: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-reports {\n  width: 188px;\n  padding: 16px 16px 11px;\n  border-radius: 12px;\n  color: var(--secondary-color);\n\n  &__title {\n    margin-bottom: 2px;\n    letter-spacing: 0.05em;\n    text-transform: uppercase;\n    line-height: 130%;\n\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 100%;\n  }\n\n  &__text {\n    line-height: 110%;\n    margin-bottom: 7px;\n\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 12px;\n  }\n\n  &__container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 14px;\n    border-top: 0.580318px solid rgba(var(--secondary-color-code), 0.1);\n  }\n\n  &__img {\n    width: 20px;\n    height: 20px;\n  }\n\n  &__value {\n    opacity: 0.75;\n\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    color: var(--secondary-color);\n  }\n}",
                    "styleUrl": "./card-reports.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"card-reports\">\n  <p class=\"card-reports__title\">{{ title }}</p>\n  <p class=\"card-reports__text\">{{ text }}</p>\n  <div class=\"card-reports__container\">\n    <img class=\"card-reports__img\" [src]=\"iconSrc\" [alt]=\"title\">\n    <span class=\"card-reports__value\">{{ value }}</span>\n  </div>\n</div>\n"
        },
        {
            "name": "CardReportStatusComponent",
            "id": "component-CardReportStatusComponent-510fcb724c0b317493089d36d1d49a4b",
            "file": "src/app/atoms/card/card-report-status/card-report-status.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-report-status",
            "styleUrls": [
                "./card-report-status.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-report-status.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "texts",
                    "line": 16,
                    "type": "Text[]"
                },
                {
                    "name": "title",
                    "line": 15,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\ninterface Text {\n  text: string,\n  value: string\n}\n\n@Component({\n  selector: 'app-card-report-status',\n  templateUrl: './card-report-status.component.html',\n  styleUrls: ['./card-report-status.component.scss']\n})\n\nexport class CardReportStatusComponent {\n  @Input() title: string;\n  @Input() texts: Text[];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-report-status {\n  width: 214px;\n  padding: 16px 16px 6px;\n  border-radius: 12px 12px 12px 0px;\n  background-color: rgba(var(--secondary-color-code), 0.8);\n  color: var(--text-color);\n  box-shadow: 0px 40px 70px rgba(1, 25, 73, 0.3);\n\n  &__title {\n    margin-bottom: 14px;\n    text-transform: uppercase;\n    color: rgba(var(--text-color-code), 0.5);\n    font-family: 'Gramatica Light', 'open-sans';\n    font-size: 18px;\n    line-height: 100%;\n  }\n\n  &__list {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n\n  &__value {\n    font-family: 'Sofia pro', 'open-sans';\n    font-weight: 800;\n    font-size: 14px;\n    line-height: 100%;\n  }\n\n  &__item {\n    width: 49%;\n    text-align: start;\n    margin-bottom: 13px;\n\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 100%;\n\n    &:nth-child(even) {\n      text-align: end;\n    }\n  }\n}",
                    "styleUrl": "./card-report-status.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"card-report-status\">\n  <p class=\"card-report-status__title\">\n    {{ title }}\n  </p>\n  <ul class=\"card-report-status__list\">\n    <li\n      class=\"card-report-status__item\"\n      *ngFor=\"let text of texts\"\n    >\n      <span class=\"card-report-status__value\">{{ text.value }}</span>\n      {{ text.text }}\n    </li>\n  </ul>\n</div>\n"
        },
        {
            "name": "CardRowComponent",
            "id": "component-CardRowComponent-075dd72f2f143febfbf8df31cd92a233",
            "file": "src/app/molecules/card-row/card-row.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-row",
            "styleUrls": [
                "./card-row.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-row.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-card-row',\n  templateUrl: './card-row.component.html',\n  styleUrls: ['./card-row.component.scss']\n})\n\nexport class CardRowComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-card-row {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  width: 100%;\n\n  ::ng-deep {\n\n    & > * {\n      margin-bottom: 10px;\n      margin-right: 10px;\n    }\n  \n    & .card {\n      height: 100%!important;\n      margin-bottom: 10px;\n      margin-right: 10px;\n      \n      & :last-child {\n        margin-bottom: 0;\n        margin-right: 0;\n      }\n    }\n  }\n\n}\n",
                    "styleUrl": "./card-row.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-card-row\">\n  <app-card-with-donut-chart\n    [title]=\"'Cookies by category'\"\n    [labels]=\"['in advertisement storage some objects ', 'local storage objects local storage objects', 'in social media', 'in analytics', 'in preferences', 'in presferences', 'iframe' ]\"\n    [values]=\"[13, 6, 8, 4, 6, 7, 9]\"\n  >\n  </app-card-with-donut-chart>\n  <app-card-with-donut-chart\n    [title]=\"'Cookies by category'\"\n    [labels]=\"['in advertisement objects ', 'local storage objects local storage objects', 'in social media', 'in analytics', 'in preferences', 'in preferesnces' ]\"\n    [values]=\"[1, 3, 1, 4, 2, 4]\"\n  >\n  </app-card-with-donut-chart>\n  <app-semicircle-chart-card\n    [title]=\"'Overall score'\"\n    [percent]='80'\n    [text]=\"'Remaining recommendations'\"\n    [value]=\"5\"\n  >\n  </app-semicircle-chart-card>\n  <app-card-with-center-text\n    [text]=\"'Pages scanned'\"\n    [value]=\"313\"\n    [title]=\"'Pages'\"\n  >\n  </app-card-with-center-text>\n</div>\n"
        },
        {
            "name": "CardWithCenterTextComponent",
            "id": "component-CardWithCenterTextComponent-3ca42f00a3d60dbaffc912a77ef5aaf8",
            "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-with-center-text",
            "styleUrls": [
                "./card-with-center-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-with-center-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "text",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "value",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card-with-center-text',\n  templateUrl: './card-with-center-text.component.html',\n  styleUrls: ['./card-with-center-text.component.scss']\n})\n\nexport class CardWithCenterTextComponent {\n  @Input() value: string;\n  @Input() text: string;\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-with-center-text  {\n  width: 256px;\n  height: 152px;\n  min-height: 152px;\n  padding: 8px 16px;\n  overflow: hidden;\n\n  border-radius: 12px 30px;\n  color: var(--secondary-color);\n  text-align: center;\n  background-color: var(--card-bg-color);\n\n  &:hover {\n    box-shadow: 0px 40px 70px rgba(var(--secondary-color-code), 0.3);\n  }\n\n  &__value {\n    margin-bottom: 6px;\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-size: 38px;\n    line-height: 120%;\n    text-transform: capitalize;\n    color: var(--secondary-color);\n  }\n\n  &__text {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 12px;\n  }\n\n  &__title {\n    margin-bottom: 20px;\n  }\n}",
                    "styleUrl": "./card-with-center-text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"card-with-center-text card\">\n  <p class=\"card-with-center-text__title\">{{ title }}</p>\n  <span class=\"card-with-center-text__value\">{{ value }}</span>\n  <p class=\"card-with-center-text__text\">{{ text }}</p>\n</div>\n"
        },
        {
            "name": "CardWithColumnsTextComponent",
            "id": "component-CardWithColumnsTextComponent-54eba1b740c33a4b30fbfb5b895fd4c4",
            "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-with-columns-text",
            "styleUrls": [
                "./card-with-columns-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-with-columns-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "texts",
                    "line": 11,
                    "type": "string[]"
                },
                {
                    "name": "title",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "values",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-card-with-columns-text',\n  templateUrl: './card-with-columns-text.component.html',\n  styleUrls: ['./card-with-columns-text.component.scss']\n})\n\nexport class CardWithColumnsTextComponent {\n  @Input() values: string[];\n  @Input() texts: string[];\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-with-columns-text  {\n  width: 256px;\n  min-height: 152px;\n  height: 100%;\n  padding: 8px 16px;\n  overflow: hidden;\n\n  border-radius: 12px 30px;\n  color: var(--secondary-color);\n  background-color: var(--card-bg-color);\n\n  &:hover {\n    box-shadow: 0px 40px 70px rgba(var(--secondary-color-code), 0.3);\n  }\n\n  &__container {\n    display: flex;\n    align-items: flex-start;\n  }\n\n  &__left {\n    width: 47%;\n    margin-right: 16px;\n  }\n\n  &__right {\n    width: 50%;\n  }\n\n  &__value {\n    margin-bottom: 6px;\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-size: 38px;\n    line-height: 120%;\n    text-transform: capitalize;\n    color: var(--secondary-color);\n  }\n\n  &__title {\n    margin-bottom: 20px;\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 100%;\n  }\n\n  &__text {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 12px;\n  }\n}",
                    "styleUrl": "./card-with-columns-text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"card-with-columns-text card\">\n  <p class=\"card-with-columns-text__title\">{{ title }}</p>\n  <div class=\"card-with-columns-text__container\">\n    <div class=\"card-with-columns-text__left\">\n      <span class=\"card-with-columns-text__value\">{{ values[0] }}</span>\n      <p class=\"card-with-columns-text__text\">{{ texts[0] }}</p>\n    </div>\n    <div class=\"card-with-columns-text__right\">\n      <span class=\"card-with-columns-text__value\">{{ values[1] }}</span>\n      <p class=\"card-with-columns-text__text\">{{ texts[1] }}</p>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "CardWithDonutChartComponent",
            "id": "component-CardWithDonutChartComponent-c2d1983b2a70e13094d4f4881555ffeb",
            "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-with-donut-chart",
            "styleUrls": [
                "./card-with-donut-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-with-donut-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "colors",
                    "line": 11,
                    "type": "string[]"
                },
                {
                    "name": "labels",
                    "line": 12,
                    "type": "string[]"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "values",
                    "line": 13,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeValue",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "data",
                    "defaultValue": "[{\n    type: 'pie',\n    values: [],\n    labels: [],\n    domain: {column: 1},\n    hoverinfo: 'none',\n    hole: .55,\n    automargin: false,\n    marker: {\n      colors: this.defaultColors,\n    }\n  }]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "defaultColors",
                    "defaultValue": "['#509AAF', '#7DD8C7', '#645FCE', '#9ED0E0', '#F9BE5A', '#645FCD', \"#9ED0E0\", \"#0263BC\", \"#24B04B;\"]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "layout",
                    "defaultValue": "{\n    margin: {\"t\": 0, \"b\": 0, \"l\": 0, \"r\": 0},\n    annotations: [\n      {\n        showarrow: false,\n        text: '',\n      },\n    ],\n    position: 'absolute',\n    height: 150,\n    width: 600,\n    showlegend: false,\n    grid: {rows: 1, columns: 2}\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "changeNumberOnChartsClick",
                    "args": [
                        {
                            "name": "data",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeNumberOnLegendClick",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card-with-donut-chart',\n  templateUrl: './card-with-donut-chart.component.html',\n  styleUrls: ['./card-with-donut-chart.component.scss'],\n})\n\nexport class CardWithDonutChartComponent implements OnInit {\n  @Input() title: string;\n  @Input() colors?: string[];\n  @Input() labels: string[];\n  @Input() values: string[];\n\n  activeValue: number;\n  defaultColors=['#509AAF', '#7DD8C7', '#645FCE', '#9ED0E0', '#F9BE5A', '#645FCD', \"#9ED0E0\", \"#0263BC\", \"#24B04B;\"];\n\n  data = [{\n    type: 'pie',\n    values: [],\n    labels: [],\n    domain: {column: 1},\n    hoverinfo: 'none',\n    hole: .55,\n    automargin: false,\n    marker: {\n      colors: this.defaultColors,\n    }\n  }];\n  \n  layout = {\n    margin: {\"t\": 0, \"b\": 0, \"l\": 0, \"r\": 0},\n    annotations: [\n      {\n        showarrow: false,\n        text: '',\n      },\n    ],\n    position: 'absolute',\n    height: 150,\n    width: 600,\n    showlegend: false,\n    grid: {rows: 1, columns: 2}\n  };\n\n  changeNumberOnChartsClick(data) {\n    this.activeValue = data.points[0].value;\n  }\n\n  changeNumberOnLegendClick(index: number) {\n    this.activeValue=this.data[0].values[index];\n  }\n\n  ngOnInit(): void {\n    this.data[0].values = this.values;\n    this.data[0].labels = this.labels;\n    this.activeValue = this.data[0].values[0];\n    \n    if (this.colors) {\n      this.data[0].marker.colors = this.colors;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-donut-chard-card {\n  position: relative;\n  width: 256px;\n  min-height: 152px;\n  overflow-x: hidden;\n  display: flex;\n\n  border-radius: 12px 30px;\n  color: var(--secondary-color);\n  background-color: var(--card-bg-color);\n\n  &:hover {\n    box-shadow: 0px 40px 70px rgba(var(--secondary-color-code), 0.3);\n  }\n\n  &__title {\n    position: absolute;\n    top: 10px;\n    left: 16px;\n    width: 88px;\n\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 100%;\n  }\n\n  &__value {\n    position: absolute;\n    top: 79px;\n    left: 47px;\n    width: 30px;\n    text-align: center;\n    line-height: 24px;\n\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-style: normal;\n    font-weight: 800;\n    font-size: 24px;\n    color: var(--secondary-color);\n  }\n\n  &__legend {\n    position: relative;\n    top: 0;\n    left: -485px;\n    z-index: 3;\n\n    min-width: 154px;\n    width: 154px;\n    height: 100%;\n    min-height: 152px;\n    \n    padding: 10px 26px 8px 16px;\n    background-color: rgba(var(--secondary-color-code), 0.05);\n    \n    &-item {\n      display: flex;\n      margin-bottom: 6px;\n\n      font-family: 'Sofia pro', 'open-sans';\n      font-style: normal;\n      font-weight: 300;\n      font-size: 12px;\n\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n\n  &__marker {\n    width: 10px;\n    height: 10px;\n    min-width: 10px;\n    margin-right: 8px;\n    border-radius: 50%;\n  }\n}\n\n/* ####### override css rules for plotify module ###### */\n\n.app-donut-chard-card {\n  ::ng-deep {\n    .user-select-none .svg-container {\n      position: absolute!important;\n    }\n    \n    .pielayer {\n      transform: scale(0.6) translateX(-355px) translateY(80px)!important;\n    }\n    \n    .js-plotly-plot .plotly .modebar--hover > :not(.watermark) {\n      display: none;\n    }\n    \n    .surface {\n      stroke-width: 8!important;\n      stroke: var(--card-bg-color)!important;\n      \n      &:hover {\n        cursor: pointer;\n        stroke-width: 12px!important;\n        stroke-dasharray: 550 0!important;\n        opacity: 0.8!important;\n        background:linear-gradient(to right, #e5405e 0%, #e5405e 15%, rgba(46,2014,113,0.8) 30%, rgba(39,174,96,0.3)45%,#3fffa2 60%, #1a9be0 73%, #ba68ed 100%)!important;\n      }\n    }\n    \n    .slicetext {\n      display: none!important;\n    }\n    \n    .main-svg {\n      background-color: transparent!important;\n    }\n  }\n}\n\n",
                    "styleUrl": "./card-with-donut-chart.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-donut-chard-card card\" id=\"app-donut-chard-card\">\n  <div class=\"app-donut-chard-card__title\">\n    {{ title }}\n  </div>\n  <plotly-plot \n    (plotlyClick)=\"changeNumberOnChartsClick($event)\"\n    [data]=\"data\" \n    [layout]=\"layout\"\n  ></plotly-plot>\n  <div class=\"app-donut-chard-card__value\"><p>{{ activeValue }}</p></div>\n  <ul class=\"app-donut-chard-card__legend\" #legend>\n    <li \n      class=\"app-donut-chard-card__legend-item\" \n      *ngFor=\"let item of data[0].labels; let i = index\"\n      (click)=\"changeNumberOnLegendClick(i)\"\n    >\n      <div \n        class=\"app-donut-chard-card__marker\" \n        [ngStyle]=\"{ 'background-color': data[0].marker.colors[i] }\"\n      >\n      </div>\n      {{ data[0].values[i ]}} {{ item }} \n    </li>\n  </ul>\n</div>\n"
        },
        {
            "name": "CheckboxCircleInputComponent",
            "id": "component-CheckboxCircleInputComponent-91db83aa8ee5b5e0b6ee531f2934a667",
            "file": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-circle-input",
            "styleUrls": [
                "./checkbox-circle-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-circle-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Date.now()",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "isChecked",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox-circle-input',\n  templateUrl: './checkbox-circle-input.component.html',\n  styleUrls: ['./checkbox-circle-input.component.scss']\n})\n\nexport class CheckboxCircleInputComponent {\n  @Input() isChecked: boolean;\n  @Input() title: string;\n  @Input() id?: number = Date.now();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-circle-input {\n  display: none;\n\n  &__title {\n    margin-left: 40px;\n    color: var(--secondary-color);\n\n    line-height: 24px;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n  }\n\n  &__label {\n    display: block;\n    position: relative;\n\n    &:after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        box-sizing: border-box;\n        width: 24px;\n        height: 24px;\n        padding-bottom: 10px;\n        padding-top: 7px;\n\n        border-radius: 50%;\n        border: 1px solid rgba(var(--secondary-color-code), 0.3);\n    }\n  }\n}\n\n.app-checkbox-circle-input:checked + .app-checkbox-circle-input__label {\n  &:after {\n    border: 1px solid rgba(var(--secondary-color-code), 1);\n  }\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 6px;\n    left: 6px;\n    z-index: 2;\n    \n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: var(--secondary-color);\n  }\n}\n",
                    "styleUrl": "./checkbox-circle-input.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div  class=\"app-checkbox-circle-input__container\">\n  <input\n    type=\"checkbox\" \n    [id]=\"id\"\n    name=\"checkbox-input-simple\" \n    class=\"app-checkbox-circle-input\"\n    [checked]=\"isChecked\"\n  >\n  <label [for]=\"id\" class=\"app-checkbox-circle-input__label\">\n    <p class=\"app-checkbox-circle-input__title\" *ngIf=\"title!==''\">\n      {{ title }}\n    </p>\n  </label>\n</div>\n"
        },
        {
            "name": "CheckboxInputDarkComponent",
            "id": "component-CheckboxInputDarkComponent-5634d167f50be07456a07d95d98105ee",
            "file": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-input-dark",
            "styleUrls": [
                "./checkbox-input-dark.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-input-dark.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Math.random()",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "isChecked",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox-input-dark',\n  templateUrl: './checkbox-input-dark.component.html',\n  styleUrls: ['./checkbox-input-dark.component.scss']\n})\n\nexport class CheckboxInputDarkComponent {\n  @Input() isChecked: boolean;\n  @Input() title?: string;\n  @Input() id?: number = Math.random();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-input-dark {\n  display: none;\n\n  &__title {\n    margin-left: 40px;\n    color: var(--secondary-color);\n    line-height: 24px;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n  }\n\n  &__label {\n    display: block;\n    position: relative;\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      top: 0;\n\n      box-sizing: border-box;\n      width: 24px;\n      height: 24px;\n      border-radius: 4px;\n      border: 1px solid rgba(var(--secondary-color-code), 0.3);\n    }\n  }\n}\n\n.app-checkbox-input-dark:checked + .app-checkbox-input-dark__label {\n  &:after {\n    background-color: var(--secondary-color);\n  }\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 4px;\n    left: 4px;\n    z-index: 2;\n\n    box-sizing: border-box;\n    width: 16px;\n    height: 16px;\n    background: center no-repeat url('../../../../../assets/images/checkbox.svg');\n    background-size: contain;\n  }\n}\n\n",
                    "styleUrl": "./checkbox-input-dark.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div  class=\"app-checkbox-input-dark__container\">\n  <input\n    type=\"checkbox\" \n    [id]=\"id\"\n    name=\"checkbox-input-simple\" \n    class=\"app-checkbox-input-dark\"\n    [checked]=\"isChecked\"\n  >\n  <label [for]=\"id\" class=\"app-checkbox-input-dark__label\">\n    <p class=\"app-checkbox-input-dark__title\" *ngIf=\"title!==''\">\n      {{ title }}\n    </p>\n  </label>\n</div>\n\n"
        },
        {
            "name": "CheckboxInputSimpleComponent",
            "id": "component-CheckboxInputSimpleComponent-00a81a5282c60a0f9a74fddb58846ccb",
            "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-input-simple",
            "styleUrls": [
                "./checkbox-input-simple.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-input-simple.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Math.random()",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "isChecked",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox-input-simple',\n  templateUrl: './checkbox-input-simple.component.html',\n  styleUrls: ['./checkbox-input-simple.component.scss']\n})\n\nexport class CheckboxInputSimpleComponent {\n  @Input() isChecked: boolean;\n  @Input() title: string;\n  @Input() id?: number = Math.random();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-input-simple {\n  display: none;\n\n  &__title {\n    margin-left: 40px;\n    color: var(--secondary-color);\n    line-height: 24px;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n  }\n\n  &__label {\n    display: block;\n    position: relative;\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      top: 0;\n\n      box-sizing: border-box;\n      width: 24px;\n      height: 24px;\n      border-radius: 4px;\n      border: 1px solid rgba(var(--secondary-color-code), 0.3);\n    }\n  }\n}\n\n.app-checkbox-input-simple:checked + .app-checkbox-input-simple__label {\n  &:after {\n    background: center no-repeat url('../../../../../assets/images/checkboxDark.svg');\n    border: 1px solid rgba(var(--secondary-color-code), 1);\n  }\n}\n",
                    "styleUrl": "./checkbox-input-simple.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div  class=\"app-checkbox-input-simple__container\">\n  <input\n    type=\"checkbox\" \n    [id]=\"id\"\n    name=\"checkbox-input-simple\" \n    class=\"app-checkbox-input-simple\"\n    [checked]=\"isChecked\"\n  >\n  <label [for]=\"id\" class=\"app-checkbox-input-simple__label\">\n    <p class=\"app-checkbox-input-simple__title\" *ngIf=\"title!==''\">\n      {{ title }}\n    </p>\n  </label>\n</div>\n"
        },
        {
            "name": "CheckboxInputSwitchComponent",
            "id": "component-CheckboxInputSwitchComponent-be20ecaed8aa91aa2fd7b9d1cc71769a",
            "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-input-switch",
            "styleUrls": [
                "./checkbox-input-switch.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-input-switch.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Math.random()",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "isChecked",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox-input-switch',\n  templateUrl: './checkbox-input-switch.component.html',\n  styleUrls: ['./checkbox-input-switch.component.scss']\n})\n\nexport class CheckboxInputSwitchComponent {\n  @Input() isChecked: boolean;\n  @Input() id?: number = Math.random();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-input-switch {\n  display: none;\n\n  &__label {\n    position: relative;\n    display: block;\n    width: 35px;\n    height: 12px;\n\n    border-radius: 18px;\n    transition: 0.3s;\n    background: rgba(var(--secondary-color-code), 0.2);\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      top: -3px;\n      left: 0;\n\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      box-sizing: border-box;\n      width: 19px;\n      height: 19px;\n      border-radius: 50%;\n      \n      background: var(--input-bg-color);\n      box-shadow: 0px 5px 8px rgba(50, 60, 111, 0.25);\n    }\n  }\n}\n\n.app-checkbox-input-switch:checked + .app-checkbox-input-switch__label {\n  background: linear-gradient(89.52deg, hsla(137, 66%, 42%, 0.2) -46.17%, rgba(2, 99, 188, 0.2) 186.99%);\n\n  &:after {\n    transform: translateX(17px);\n    background: var(--success-grad-light);\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: -3px;\n    left: 17px;\n    z-index: 2;\n\n    box-sizing: border-box;\n    width: 19px;\n    height: 19px;\n    border-radius: 50%;\n\n    background: no-repeat center url('../../../../../assets/images/checkbox.svg');\n  }\n}",
                    "styleUrl": "./checkbox-input-switch.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<input\n  type=\"checkbox\" \n  [id]=\"id\"\n  name=\"checkbox-input-switch\" \n  class=\"app-checkbox-input-switch\"\n  [checked]=\"isChecked\"\n>\n<label [for]=\"id\" class=\"app-checkbox-input-switch__label\"></label>\n"
        },
        {
            "name": "ColumnChartComponent",
            "id": "component-ColumnChartComponent-7aeca0e268d151bd37f664dd99166233",
            "file": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-column-chart",
            "styleUrls": [
                "./column-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./column-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "categories",
                    "line": 15,
                    "type": "string[]"
                },
                {
                    "name": "chartHeight",
                    "line": 19,
                    "type": "number"
                },
                {
                    "name": "colorsFromUser",
                    "line": 16,
                    "type": "string[]"
                },
                {
                    "name": "columnWidth",
                    "line": 20,
                    "type": "number"
                },
                {
                    "name": "data",
                    "line": 17,
                    "type": "number[]"
                },
                {
                    "name": "maxValue",
                    "line": 18,
                    "type": "number"
                },
                {
                    "name": "step",
                    "line": 21,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "colors",
                    "defaultValue": "[\n    \"#c98392\", \"#9ED0E0\", \"#F6BC59\", \"#645FCE\", \"#9ED0E0\", \"#612C83\", \"#FF9F68\", \"#adc9b2\", \"#c98392\", \"#9ED0E0\", \"#F6BC59\",\n    \"#c98392\", \"#9ED0E0\", \"#F6BC59\", \"#645FCE\", \"#9ED0E0\", \"#612C83\", \"#FF9F68\", \"#adc9b2\", \"#c98392\", \"#9ED0E0\", \"#F6BC59\"\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "columns",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "container",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ]
                },
                {
                    "name": "gridValues",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "isTipVisible",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "list",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'list'"
                        }
                    ]
                },
                {
                    "name": "rows",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "rowValues",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "setStartValues",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "showTips",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "tips",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tips'"
                        }
                    ]
                },
                {
                    "name": "tipsBottom",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "tipsLeft",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "width",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "mouseover",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 48
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 58
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, HostListener, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport { getRandomColor } from './helpers';\n\nconst CONTAINER_BOTTOM_PADDING = 32;\nconst CONTAINER_LEFT_PADDING = 47;\nconst YAXIS_BLOCK_WIDTH = 66;\n\n@Component({\n  selector: 'app-column-chart',\n  templateUrl: './column-chart.component.html',\n  styleUrls: ['./column-chart.component.scss']\n})\n\nexport class ColumnChartComponent implements OnInit, OnChanges {\n  @Input() categories: string[];\n  @Input() colorsFromUser: string[];\n  @Input() data: number[];\n  @Input() maxValue: number;\n  @Input() chartHeight: number;\n  @Input() columnWidth: number;\n  @Input() step: number;\n\n  isTipVisible = false;\n  width = 0;\n  rows = 0;\n  columns = 0;\n  rowValues = [];\n  gridValues = [];\n  tipsBottom = 0;\n  tipsLeft = 0;\n  colors = [\n    \"#c98392\", \"#9ED0E0\", \"#F6BC59\", \"#645FCE\", \"#9ED0E0\", \"#612C83\", \"#FF9F68\", \"#adc9b2\", \"#c98392\", \"#9ED0E0\", \"#F6BC59\",\n    \"#c98392\", \"#9ED0E0\", \"#F6BC59\", \"#645FCE\", \"#9ED0E0\", \"#612C83\", \"#FF9F68\", \"#adc9b2\", \"#c98392\", \"#9ED0E0\", \"#F6BC59\"\n  ];\n\n  @ViewChild('list') list: ElementRef;\n  @ViewChild('tips') tips: ElementRef;\n  @ViewChild('container') container: ElementRef;\n\n  showTips = (event, index) => {\n    this.tipsLeft = index * this.columnWidth + CONTAINER_LEFT_PADDING - this.list.nativeElement.scrollLeft;\n    const height = +event.target.style.height.slice(0, -2);\n    this.tipsBottom = height / 2 + CONTAINER_BOTTOM_PADDING;\n    this.isTipVisible = true;\n  }\n\n  @HostListener('mouseover', ['$event'])\n  onMouseOver(event: any) {\n    const element: HTMLElement = event.target;\n    if (this.tips) {\n      if (!(element.classList.contains('chart-column__value') || this.tips.nativeElement.contains(event.target))) {\n        this.isTipVisible = false;\n      }\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    const minColumnsNumber = \n      Math.floor((this.container.nativeElement.clientWidth - YAXIS_BLOCK_WIDTH) / this.columnWidth);\n    if (minColumnsNumber >= this.data.length) {\n      this.columns = minColumnsNumber;\n      const grid = [];\n      for (let i = 0; i < this.rows * this.columns; i++) {\n        grid.push(i);\n      }\n      this.gridValues = grid;\n      this.width = this.columns * this.columnWidth;\n    }\n  }\n\n  setStartValues = () => {\n    if (!this.colorsFromUser && this.data.length > this.colors.length) {\n      const updatedColorsList = [];\n      for (let i = 0; i < this.data.length; i++) {\n        updatedColorsList.push(getRandomColor());\n      }\n      this.colors = updatedColorsList;\n    }\n    const minColumnsNumber = \n      Math.floor((document.querySelector('.chart-column').clientWidth - YAXIS_BLOCK_WIDTH) / this.columnWidth);\n    this.rows = this.maxValue / this.step;\n    this.columns = this.data.length > minColumnsNumber ? this.data.length : minColumnsNumber;\n    this.width = this.columns * this.columnWidth;\n    const values = [];\n    for (let i = 0; i <= this.rows; i++) {\n      values.push(i * this.step);\n    }\n    this.rowValues = values.reverse();\n    const grid = [];\n    for (let i = 0; i < this.rows * this.columns; i++) {\n      grid.push(i);\n    }\n    this.gridValues = grid;\n  }\n\n  ngOnInit(): void {\n    this.setStartValues();\n  }\n\n  ngOnChanges() {\n    this.setStartValues();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".chart-column {\n  display: flex;\n  height: 420px;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n\n  &__container {\n    width: 100%;\n    height: 100%;\n    padding: 32px;\n    margin-top: 100px;\n    position: relative;\n  }\n\n  &__list {\n    display: flex;\n    align-items: flex-end;\n    position: relative;\n    width: fit-content;\n  }\n\n  &__list-wrapper {\n    max-width: 100%;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    height: auto;\n\n    display: flex;\n    padding-bottom: 50px;\n    scrollbar-width: thin;\n\n    &::-webkit-scrollbar {\n      height: 5px;\n    }\n    \n    &::-webkit-scrollbar-track {\n      -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); \n      box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n      -webkit-border-radius: 20px;\n      border-radius: 20px;\n    }\n    \n    &::-webkit-scrollbar-thumb {\n      -webkit-border-radius: 20px;\n      border-radius: 20px;\n      background: var(--success-grad-light); \n      -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); \n      box-shadow: inset 0 0 6px rgba(0,0,0,0.5); \n    }\n  }\n\n  &__item {\n    padding: 0 8px;\n    position: relative;\n  }\n\n  &__value {\n    border-radius: 10px;\n    transition: 0.3s;\n\n    &:hover {\n      cursor: pointer;\n      opacity: 0.9;\n    }\n  }\n\n  &__grid {\n    display: grid;\n    width: 100%;\n    position: absolute;\n    left: 0;\n\n    &-ceil {\n      width: 100%;\n      height: 100%;\n      border: 0.1px solid rgba(var(--secondary-color-code), 0.05);\n    }\n  }\n\n  &__yaxis {\n    position: relative;\n    margin-right: 30px;\n  }\n\n  &__yaxis-value {\n    height: 100%;\n    display: flex;\n    align-items: flex-start;\n    color: rgba(var(--secondary-color-code), 0.3);\n\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 100%;\n  }\n\n  &__xaxis-name {\n    height: 40px;\n    position: absolute;\n    bottom: -55px;\n    right: 0px;\n\n    text-align: center;\n    text-transform: uppercase;\n    color: rgba(var(--secondary-color-code), 0.3);\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 100%;\n  }\n\n  &__tips {\n    width: 228px;\n    padding: 12px;\n    position: absolute;\n    z-index: 4;\n    \n    background-color: rgba(var(--secondary-color-code), 1);\n    border-radius: 12px;\n    color: var(--asimetric-bg-color);\n\n    &:after {\n      content: '';\n      position: absolute;\n      bottom: -6px;\n      left: calc(50% - 4px);\n      z-index: 4;\n\n      height: 7px;\n      width: 16px;\n\n      background: url('../../../../../../assets/images/triangle.png') center no-repeat;\n      background-size: cover;\n    }\n\n    &-item {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      width: 100%;\n      margin: 8px 0;\n    }\n\n    &-text {\n      display: flex;\n      align-items: center;\n      font-weight: 300;\n      font-size: 12px;\n    }\n\n    &-color {\n      display: block;\n      width: 6px;\n      height: 6px;\n      border-radius: 50%;\n      margin-right: 8px;\n    }\n\n    &-value {\n      font-weight: 600;\n      font-size: 16px;\n      line-height: 100%;\n    }\n  }\n}\n\n\n",
                    "styleUrl": "./column-chart.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"chart-column__container\"  [style.height]=\"chartHeight+70+'px'\">\n  <div id=\"chart-column\" class=\"chart-column\" #container>\n    <div class=\"chart-column__yaxis\">\n    <div \n      class=\"chart-column__yaxis-value\"\n      [style.height]=\"chartHeight/(rows)+'px'\"\n      *ngFor=\"let rowValue of rowValues\"\n    >\n      <span>{{ rowValue }}</span>\n    </div>\n  </div>\n    <div class=\"chart-column__list-wrapper\" #list [style.height]=\"chartHeight+60+'px'\">\n      <ul class=\"chart-column__list\" [style.width]=\" width+'px'\">\n        <div\n          class=\"chart-column__grid\"\n          [style.gridTemplateColumns]=\"'repeat(' + columns + ', ' + columnWidth+'px)'\"\n          [style.gridAutoRows]=\"chartHeight/rows+'px'\"\n          [style.height]=\"chartHeight+'px'\"\n        >\n          <div class=\"chart-column__grid-ceil\" *ngFor=\"let gridValue of gridValues\">\n          </div>\n        </div>\n        <li class=\"chart-column__item\" *ngFor=\"let value of data; let i = index;\">\n          <div \n            (mouseenter)=\"showTips($event, i)\"\n            class=\"chart-column__value\"\n            [style.backgroundColor]=\"colors[i]\"\n            [style.height]=\"chartHeight*value/maxValue+'px'\"\n            [style.width]=\"columnWidth-16+'px'\"\n          >\n          </div>\n          <div class=\"chart-column__xaxis-name\" [style.width]=\"columnWidth+'px'\">\n            {{ categories[i] }}\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <div \n    *ngIf=\"isTipVisible\" \n    class=\"chart-column__tips\" \n    #tips\n    [style.bottom]=\"tipsBottom+'px'\"\n    [style.left]=\"tipsLeft+'px'\"\n  >\n    <ul class=\"chart-column__tips-list\">\n      <li class=\"chart-column__tips-item\" *ngFor=\"let item of data; let i=index\">\n        <div class=\"chart-column__tips-text\">\n          <div class=\"chart-column__tips-color\" [style.backgroundColor]=\"colors[i]\"></div>\n          {{ categories[i] }}\n        </div>\n        <div class=\"chart-column__tips-value\">{{ data[i] }}</div>\n      </li>\n    </ul>\n  </div>\n</div>\n"
        },
        {
            "name": "CompositeMenuComponent",
            "id": "component-CompositeMenuComponent-27e04eb76b78c204052b75f62bcf7741",
            "file": "src/app/molecules/menu/composite-menu/composite-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-composite-menu",
            "styleUrls": [
                "./composite-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./composite-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 15,
                    "type": "Item[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\ninterface Item {\n  title: string;\n  sections: string[]\n}\n\n@Component({\n  selector: 'app-composite-menu',\n  templateUrl: './composite-menu.component.html',\n  styleUrls: ['./composite-menu.component.scss'],\n})\n\nexport class CompositeMenuComponent {\n  @Input() items: Item[];\n\n  active: string = '';\n\n  handlClick(event: any, i: string) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-composite-menu {\n  width: fit-content;\n  padding: 22px 72px 22px 32px;\n  min-width: 260px;\n  \n  border-radius: 12px 30px;\n  background-color: var(--text-color);\n  box-shadow: 0px 50px 70px rgba(44, 59, 82, 0.15);\n  \n  &__item {\n    width: fit-content;\n    margin-top: 10px;\n\n    ::ng-deep {\n      .nav-link-secondary {\n        text-transform: capitalize!important;\n      }\n    }\n  }\n\n  &__section {\n    padding-left: 16px;\n  }\n}",
                    "styleUrl": "./composite-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"app-composite-menu\">\n  <li \n    class=\"app-composite-menu__item\"\n    *ngFor=\"let item of items; let i = index\" \n  >   \n    <app-nav-link\n      [isActive]=\"active === i + item.title\"\n      [title]=\"item.title\" \n      classes=\"nav-link-secondary\"\n      (click)=\"handlClick($event, i + item.title)\"\n    >\n    </app-nav-link>\n    <ul class=\"app-composite-menu__section\">\n      <li \n        class=\"app-composite-menu__item\"\n        *ngFor=\"let section of item.sections; let i = index\" \n      >\n        <app-nav-link\n          [isActive]=\"active === i + section\"\n          [title]=\"section\" \n          classes=\"nav-link-secondary\"\n          (click)=\"handlClick($event, i + section)\"\n        >\n        </app-nav-link>\n      </li>\n    </ul>\n  </li>\n</ul>"
        },
        {
            "name": "CookieColorPickerComponent",
            "id": "component-CookieColorPickerComponent-0f982a6e4522fe9dd3c39625db8b8d3c",
            "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cookie-color-picker",
            "styleUrls": [
                "./cookie-color-picker.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cookie-color-picker.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "defaultHexColor",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "consoleColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "isColorPickerVisible",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "picker",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'picker'"
                        }
                    ]
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53
                },
                {
                    "name": "setColorPickerVisibility",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "setInitialValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44
                },
                {
                    "name": "setToDefaultColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 21
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, HostListener, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\n\nconst INITIAL_COLOR = 'red';\n\n@Component({\n  selector: 'app-cookie-color-picker',\n  templateUrl: './cookie-color-picker.component.html',\n  styleUrls: ['./cookie-color-picker.component.scss']\n})\n\nexport class CookieColorPickerComponent implements OnInit, OnChanges {\n  @Input() defaultHexColor: string;\n\n  color: string;\n  value: string;\n  isColorPickerVisible: boolean = false;\n\n  @ViewChild('picker') picker: ElementRef;\n\n  @HostListener('document:click', ['$event'])\n  onClick(event: Event) {\n    const clickedElement = event.target as HTMLElement;\n    if (this.picker.nativeElement && !this.picker.nativeElement.contains(event.target) \n      && !clickedElement.closest('.app-cookie-color-picker__box') && this.isColorPickerVisible) {\n      this.isColorPickerVisible = false;\n    }\n  }\n\n  setColorPickerVisibility() {\n    this.isColorPickerVisible = true;\n  }\n\n  consoleColor = (event) => {\n    const newColor = event.color.rgb;\n    this.color = `rgba(${newColor.r}, ${newColor.g}, ${newColor.b}, ${newColor.a})`;\n    this.value = event.color.hex;\n  }\n\n  setToDefaultColor() {\n    this.color = this.defaultHexColor ? this.defaultHexColor : 'red';\n    this.value = this.defaultHexColor ? this.defaultHexColor : 'red';\n  }\n\n  setInitialValues() {\n    this.color = this.defaultHexColor ? this.defaultHexColor : 'red';\n    this.value = this.defaultHexColor ? this.defaultHexColor : 'red';\n  }\n\n  ngOnChanges() {\n    this.setInitialValues();\n  }\n\n  ngOnInit() {\n    this.setInitialValues();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-cookie-color-picker {\n  &-container {\n    width: 240px;\n    position: relative;\n\n    display: flex;\n    justify-content: space-between;\n\n    padding: 8px; \n    background: var(--card-bg-color);\n    border-radius: 8px;\n  }\n\n  &__wrapper {\n    width: 100%;\n    position: absolute;\n    top: 50px;\n    left: 0;\n\n    ::ng-deep {\n      .sketch-swatches  {\n        display: none!important;\n      }\n      \n      .color-hue.color-hue-horizontal, .alpha-checkboard, .alpha-gradient  {\n        border-radius: 30px!important;\n      }\n      \n      .sketch-active, .grid {\n        border-radius: 50%!important;\n      }\n      \n      .saturation-black, .saturation-white, .color-saturation {\n        border-radius: 5px!important;\n      }\n      \n      .wrap > input {\n        border-radius: 5px!important;\n      }\n      \n      .color-saturation {\n        margin-bottom: 15px;\n      }\n      \n      .sketch-picker {\n        background-color: var(--card-bg-color)!important;\n        box-shadow: 0px 40px 48px -1px rgba(var(--secondary-color-code), 0.3)!important;\n      }\n    }\n  }\n\n  &__box {\n    width: 187px;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  &__color {\n    width: 29px;\n    height: 29px;\n    border: 1px solid rgba(var(--secondary-color-code), 0.2);\n    border-radius: 4px;\n  }\n\n  &__value {\n    width: 149px;\n    height: 29px;\n    border-radius: 4px;\n    padding: 5.5px 8px;\n    border: 1px solid rgba(var(--secondary-color-code), 0.2);\n    background-color: var(--text-color);\n    \n    text-transform: uppercase;\n    letter-spacing: 0.03em;\n    color: var(--secondary-color);\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 100%;\n  }\n}\n",
                    "styleUrl": "./cookie-color-picker.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"app-cookie-color-picker-container\">\n  <div class=\"app-cookie-color-picker__wrapper\" *ngIf=\"isColorPickerVisible\" #picker>\n    <color-sketch \n      [color]=\"color\" \n      (onChange)=\"consoleColor($event)\"\n    >\n    </color-sketch>\n  </div>\n  <div class=\"app-cookie-color-picker__box\" (click)=\"setColorPickerVisibility()\">\n    <div \n      class=\"app-cookie-color-picker__color\"\n      [ngStyle]=\"{ 'background-color': color }\"\n    >\n    </div>\n    <div class=\"app-cookie-color-picker__value\">{{ value }}</div>\n  </div>\n  <app-cookie-reload-button (click)=\"setToDefaultColor()\"></app-cookie-reload-button>\n</div>\n\n"
        },
        {
            "name": "CookieDesignCardComponent",
            "id": "component-CookieDesignCardComponent-e207a7475d7b3b09804c0a4874872759",
            "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cookie-design-card",
            "styleUrls": [
                "./cookie-design-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cookie-design-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "imgSrc",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "isSelected",
                    "line": 11,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cookie-design-card',\n  templateUrl: './cookie-design-card.component.html',\n  styleUrls: ['./cookie-design-card.component.scss']\n})\nexport class CookieDesignCardComponent implements OnInit {\n  @Input() imgSrc: string;\n  @Input() id: string;\n  @Input() isSelected: boolean;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-cookie-design-card {\n  width: 100%;\n  height: 100%;\n  background: rgba(209, 209, 209);\n  border-radius: 8px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  padding: 2px;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &__custom {\n    font-family: 'Gramatica Regular', 'open-sans';\n    font-size: 12px;\n    line-height: 150%;\n    color: var(--secondary-color);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    & > img {\n      width: 18px;\n      height: 18px;\n      margin-bottom: 24px;\n    }\n  }\n\n  &__image {\n    max-width: 100%;\n    min-height: 100%;\n  }\n\n  &__wrapper {\n    width: 147px;\n    height: 102px;\n    background: var(--success-grad-light);\n    border-radius: 8px;\n    position: relative;\n  }\n\n  &__content {\n    position: absolute;\n    background-color: var(--secondary-color);\n  }\n\n  &__selected {\n    position: absolute;\n    top: 8px;\n    right: 8px;\n    z-index: 3;\n\n    width: 19px;\n    height: 19px;\n    border-radius: 50%;\n    background: var(--success-grad-light);\n    box-shadow: 0px 5px 8px rgba(50, 60, 111, 0.25);\n\n    &:after {\n      content: '';\n      width: 9px;\n      height: 9px;\n\n      position: absolute;\n      top: 5px;\n      left: 5px;\n\n      background: url('../../../../../assets/images/checkbox.svg') center no-repeat;\n      background-size: contain;\n    }\n  }\n}",
                    "styleUrl": "./cookie-design-card.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-cookie-design-card__wrapper\" [style.padding]=\"isSelected ? '2px' : '0'\">\n  <div class=\"app-cookie-design-card__selected\" *ngIf=\"isSelected\"></div>\n  <div class=\"app-cookie-design-card\" [style.background]=\"imgSrc ? 'rgba(209, 209, 209);' : '#D0DAEB'\">\n      <div class=\"app-cookie-design-card__custom\" *ngIf=\"!imgSrc\">\n        <img src=\"assets/images/cookie-banner/plus.svg\">\n        <p>Add your own CSS</p>\n      </div>\n      <img *ngIf=\"imgSrc\" class=\"app-cookie-design-card__image\" [src]=\"imgSrc\" alt=\"\">\n  </div>\n</div>\n"
        },
        {
            "name": "CookieDesignCardRowComponent",
            "id": "component-CookieDesignCardRowComponent-dd923fe6ce8e541a633b5856708ba92f",
            "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cookie-design-card-row",
            "styleUrls": [
                "./cookie-design-card-row.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cookie-design-card-row.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialSelectedId",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "items",
                    "line": 18,
                    "type": "literal type[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "areArrowsVisible",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "leftArrowColor",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "rightArrowColor",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "scrollContainer",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'scrollContainer'"
                        }
                    ]
                },
                {
                    "name": "selectedId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72
                },
                {
                    "name": "onScroll",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollOnButtonClick",
                    "args": [
                        {
                            "name": "direction",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "jsdoctags": [
                        {
                            "name": "direction",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectCard",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 28
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\nimport { runInThisContext } from 'vm';\n\nconst STATIC_COLOR = 'rgba(1, 25, 73, 0.3)';\nconst ACTIVE_COLOR = 'rgba(1, 25, 73, 1)';\nconst CARD_WIDTH = 163;\nconst MARGIN_RIGHT = 16;\nconst SCROLL_STEP = 30;\n\n@Component({\n  selector: 'app-cookie-design-card-row',\n  templateUrl: './cookie-design-card-row.component.html',\n  styleUrls: ['./cookie-design-card-row.component.scss']\n})\n\nexport class CookieDesignCardRowComponent implements OnInit, AfterViewInit {\n  @Input() initialSelectedId: string;\n  @Input() items: { imgSrc: string, id: string }[];\n\n  @ViewChild('scrollContainer') scrollContainer: ElementRef;\n\n  leftArrowColor = '';\n  rightArrowColor = '';\n  areArrowsVisible: boolean;\n  selectedId: string;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.areArrowsVisible = this.scrollContainer.nativeElement.clientWidth < this.items.length * CARD_WIDTH;\n  }\n\n  onScroll(event) {\n    const scroll = event.currentTarget.scrollLeft;\n    if (scroll === 0) {\n      this.leftArrowColor = STATIC_COLOR;\n      this.rightArrowColor = ACTIVE_COLOR;\n      return;\n    }\n    const width = this.scrollContainer.nativeElement.clientWidth + scroll;\n    const fullWidth = this.items.length * CARD_WIDTH - MARGIN_RIGHT;\n    if (width === fullWidth) {\n      this.leftArrowColor = ACTIVE_COLOR;\n      this.rightArrowColor = STATIC_COLOR;\n    } else {\n      this.leftArrowColor = ACTIVE_COLOR;\n      this.rightArrowColor = ACTIVE_COLOR;\n    }\n  }\n\n  scrollOnButtonClick(direction: string) {\n    const scroll = this.scrollContainer.nativeElement.scrollLeft;\n    let updatedScroll;\n    const width = this.scrollContainer.nativeElement.clientWidth;\n    const fullWidth = this.items.length * CARD_WIDTH - MARGIN_RIGHT;\n    if (direction === 'forward') {\n      updatedScroll = scroll + SCROLL_STEP;\n    } else {\n      updatedScroll = scroll - SCROLL_STEP;\n    }\n    if (updatedScroll < 0) {\n      updatedScroll = 0;\n    } else if (updatedScroll > (fullWidth - width)) {\n      updatedScroll = fullWidth - width;\n    }\n    this.scrollContainer.nativeElement.scrollLeft = updatedScroll;\n  }\n\n  selectCard(id: string) {\n    this.selectedId = id;\n  }\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit() {\n    this.selectedId = this.initialSelectedId;\n    this.areArrowsVisible = this.scrollContainer.nativeElement.clientWidth < this.items.length * CARD_WIDTH - MARGIN_RIGHT;\n    this.leftArrowColor = STATIC_COLOR;\n    this.rightArrowColor = ACTIVE_COLOR;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-cookie-design-card-row {\n  display: flex;\n  align-items: flex-start;\n\n  ::ng-deep {\n    .app-cookie-design-card__wrapper {\n      margin-right: 12px;\n    }\n  }\n\n  &__wrapper {\n    display: flex;\n    width: calc(100% - 163px);\n    overflow-x: scroll;\n    padding-bottom: 30px;\n\n    &::-webkit-scrollbar-thumb {\n      background: var( --success-grad-light);\n      border-radius: 3px;\n    }\n\n    &::-webkit-scrollbar {\n      height: 3px;\n    }\n\n    &::-webkit-scrollbar-track {\n      border-bottom: 1px solid #E4EEF0;\n    }\n  }\n\n  &__buttons {\n    width: 147px;\n    padding-top: 24px;\n\n    display: flex;\n    justify-content: space-between;\n  }\n\n  &__button {\n    width: 55px;\n    outline: none;\n    background-color: transparent;\n    border: none;\n  }\n}",
                    "styleUrl": "./cookie-design-card-row.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"app-cookie-design-card-row\">\n  <div class=\"app-cookie-design-card-row__add\">\n    <app-cookie-design-card \n      [id]=\"'add'\"\n      [isSelected]=\"false\"\n    >\n    </app-cookie-design-card>\n    <div class=\"app-cookie-design-card-row__buttons\" *ngIf=\"areArrowsVisible\">\n      <button \n        type=\"button\" \n        class=\"app-cookie-design-card-row__button\"\n        (click)=\"scrollOnButtonClick('back')\"\n      >\n        <svg-icon \n          [src]=\"'assets/images/cookie-banner/scroll-arrow.svg'\"\n          [svgStyle]=\"{ 'fill': leftArrowColor }\"\n        >\n        </svg-icon>\n      </button>\n      <button  \n        type=\"button\" \n        class=\"app-cookie-design-card-row__button\"\n        (click)=\"scrollOnButtonClick('forward')\"\n      >\n        <svg-icon \n          [src]=\"'assets/images/cookie-banner/scroll-arrow.svg'\"\n          [svgStyle]=\"{ 'transform': 'rotate(180deg)','fill': rightArrowColor }\"\n        >\n        </svg-icon>\n      </button>\n    </div>\n  </div>\n  <div class=\"app-cookie-design-card-row__wrapper\" #scrollContainer (scroll)=\"onScroll($event)\">\n    <app-cookie-design-card \n      *ngFor=\"let item of items\"\n      [id]=\"item.id\"\n      [imgSrc]=\"item.imgSrc\"\n      [isSelected]=\"item.id === selectedId\"\n      (click)=\"selectCard(item.id)\"\n    >\n    </app-cookie-design-card>\n  </div>\n</div>\n"
        },
        {
            "name": "CookieEditorComponent",
            "id": "component-CookieEditorComponent-cd8f9399a0df7e9b4943c286091b0152",
            "file": "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cookie-editor",
            "styleUrls": [
                "./cookie-editor.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cookie-editor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "intialCSSContent",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "intialHTMLContent",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onCSSEdit",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onHTMLEdit",
                    "defaultValue": "new EventEmitter()",
                    "line": 16,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onSave",
                    "defaultValue": "new EventEmitter()",
                    "line": 18,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "container",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ]
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37
                },
                {
                    "name": "onCloseClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "onSaveClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 25
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from '@angular/core';\n\nconst MOBILE_VIEW = 680;\n\n@Component({\n  selector: 'app-cookie-editor',\n  templateUrl: './cookie-editor.component.html',\n  styleUrls: ['./cookie-editor.component.scss']\n})\n\nexport class CookieEditorComponent implements OnInit, AfterViewInit {\n  @Input() intialHTMLContent: string;\n  @Input() intialCSSContent: string;\n\n  @Output() onCSSEdit: EventEmitter<any> = new EventEmitter();\n  @Output() onHTMLEdit: EventEmitter<any> = new EventEmitter();\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\n  @Output() onSave: EventEmitter<any> = new EventEmitter();\n\n  isMobile: boolean;\n\n  @ViewChild('container') container: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n  }\n\n  onCloseClick() {\n    this.onClose.emit();\n  }\n\n  onSaveClick() {\n    this.onSave.emit();\n  }\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit() {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-cookie-editor {\n  width: 100%;\n  max-width: 1000px;\n  padding: 8px 8px 16px 8px;\n  color: var(--secondary-color);\n  background: #D0DAEB;\n  border-radius: 20px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  &__wrapper {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n  }\n\n  &__title {\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-size: 14px;\n    line-height: 150%;\n    text-transform: uppercase;\n  }\n\n  &__textarea {\n    font-family: 'Sofia pro', 'open-sans';\n    white-space: pre-wrap;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 10px;\n    line-height: 160%;\n    color: rgba(var(--secondary-color-code), 0.5);\n\n    width: 100%;\n    height: calc(100% - 21px);\n    min-height: 301px;\n    resize: none;\n\n    border: none;\n    outline: none;\n    background: transparent;\n\n    &::-webkit-scrollbar-thumb {\n      background: var(--secondary-color);\n      border-radius: 20px;\n      width: 4px;\n    }\n  \n    &::-webkit-scrollbar {\n      width: 4px;\n    }\n  \n    &::-webkit-scrollbar-track {\n      background: rgb(234, 237, 242);\n      border-radius: 20px;\n    }\n  }\n\n  &__block {\n    background: #F2F3F6;\n    border-radius: 14px;\n    padding: 16px;\n    width: 49%;\n  }\n\n  &__buttons {\n    margin-top: 24px;\n    width: 270px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n}\n",
                    "styleUrl": "./cookie-editor.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"app-cookie-editor\" #container>\n  <div \n    class=\"app-cookie-editor__wrapper\"\n    [style.flexDirection]=\"isMobile ? 'column' : 'row'\"\n  >\n    <div \n      class=\"app-cookie-editor__block\"\n      [style.width]=\"isMobile ? '100%' : '49%'\"\n      [style.marginBottom]=\"isMobile ? '20px' : '0'\"\n    >\n      <p class=\"app-cookie-editor__title\">HTML</p>\n      <textarea \n        class=\"app-cookie-editor__textarea\" \n        [value]=\"intialHTMLContent\"\n        spellcheck=\"false\"\n      >\n      </textarea>\n    </div>\n    <div \n      class=\"app-cookie-editor__block\"\n      [style.width]=\"isMobile ? '100%' : '49%'\"\n    >\n      <p class=\"app-cookie-editor__title\">CSS</p>\n      <textarea \n        class=\"app-cookie-editor__textarea\" \n        [value]=\"intialCSSContent\"\n        spellcheck=\"false\"\n      >\n      </textarea>\n    </div>\n  </div>\n  <div class=\"app-cookie-editor__buttons\">\n    <app-cookie-secondary-button (click)=\"onCloseClick()\"[title]=\"'close'\"></app-cookie-secondary-button>\n    <app-cookie-primary-button [title]=\"'save'\" (click)=\"onSaveClick()\"></app-cookie-primary-button>\n  </div>\n</div>\n"
        },
        {
            "name": "CookieLayoutCardComponent",
            "id": "component-CookieLayoutCardComponent-c3fe0d2ef7e398c7eeeca13390dd0b85",
            "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cookie-layout-card",
            "styleUrls": [
                "./cookie-layout-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cookie-layout-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "borderRadius",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "heigth",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "isSelected",
                    "line": 9,
                    "type": "boolean"
                },
                {
                    "name": "left",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "top",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "width",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cookie-layout-card',\n  templateUrl: './cookie-layout-card.component.html',\n  styleUrls: ['./cookie-layout-card.component.scss']\n})\nexport class CookieLayoutCardComponent implements OnInit {\n  @Input() isSelected: boolean;\n  @Input() width: string;\n  @Input() heigth: string;\n  @Input() top: string;\n  @Input() left: string;\n  @Input() borderRadius: string;\n\n  ngOnInit(): void {\n    console.log(this.width, this.heigth, this.borderRadius, this.top, this.left)\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-cookie-layout-card {\n  width: 100%;\n  height: 100%;\n  background: var(--asimetric-bg-color);\n  border-radius: 8px;\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &__wrapper {\n    width: 142px;\n    height: 81px;\n    background: var(--success-grad-light);\n    border-radius: 8px;\n    position: relative;\n  }\n\n  &__content {\n    position: absolute;\n    background-color: var(--secondary-color);\n  }\n\n  &__selected {\n    position: absolute;\n    top: 8px;\n    right: 8px;\n    z-index: 3;\n\n    width: 19px;\n    height: 19px;\n    border-radius: 50%;\n    background: var(--success-grad-light);\n    box-shadow: 0px 5px 8px rgba(50, 60, 111, 0.25);\n\n    &:after {\n      content: '';\n      width: 9px;\n      height: 9px;\n\n      position: absolute;\n      top: 5px;\n      left: 5px;\n\n      background: url('../../../../../assets/images/checkbox.svg') center no-repeat;\n      background-size: contain;\n    }\n  }\n}",
                    "styleUrl": "./cookie-layout-card.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-cookie-layout-card__wrapper\" [style.padding]=\"isSelected ? '2px' : '0'\">\n  <div class=\"app-cookie-layout-card__selected\" *ngIf=\"isSelected\"></div>\n  <div class=\"app-cookie-layout-card\">\n    <div \n      class=\"app-cookie-layout-card__content\"\n      [style.width]=\"width\"\n      [style.height]=\"heigth\"\n      [style.top]=\"top\"\n      [style.left]=\"left\"\n      [style.borderRadius]=\"borderRadius\"\n    ></div>\n  </div>\n</div>\n\n"
        },
        {
            "name": "CookieLayoutCardRowComponent",
            "id": "component-CookieLayoutCardRowComponent-d4b141d91ad724b49ca9b8eb592bcce5",
            "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-layout-card-row/cookie-layout-card-row.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cookie-layout-card-row",
            "styleUrls": [
                "./cookie-layout-card-row.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cookie-layout-card-row.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialSelectedId",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "items",
                    "line": 19,
                    "type": "Item[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selectedId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                },
                {
                    "name": "selectCard",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\ninterface Item {\n  width: string,\n  heigth: string,\n  top: string,\n  left: string,\n  borderRadius: string\n}\n\n@Component({\n  selector: 'app-cookie-layout-card-row',\n  templateUrl: './cookie-layout-card-row.component.html',\n  styleUrls: ['./cookie-layout-card-row.component.scss']\n})\n\nexport class CookieLayoutCardRowComponent implements OnInit {\n  @Input() initialSelectedId: string;\n  @Input() items: Item[];\n\n  selectedId : string;\n\n  selectCard(id: string) {\n    this.selectedId = id;\n  }\n\n  ngOnInit(): void {\n    this.selectedId = this.initialSelectedId;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-cookie-layout-card-row {\n  display: flex;\n  max-width: 100%;\n  padding-bottom: 30px;\n  overflow-x: scroll;\n\n  ::ng-deep {\n    .app-cookie-layout-card__wrapper {\n      margin-right: 14px;\n    }\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: var( --success-grad-light);\n    border-radius: 3px;\n  }\n\n  &::-webkit-scrollbar {\n    height: 3px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-bottom: 1px solid rgb(228, 238, 240);\n  }\n}",
                    "styleUrl": "./cookie-layout-card-row.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-cookie-layout-card-row\">\n  <app-cookie-layout-card\n    *ngFor=\"let item of items\"\n    [isSelected]=\"item.id === selectedId\"\n    [width]=\"item.width\"\n    [heigth]=\"item.heigth\"\n    [top]=\"item.top\"\n    [left]=\"item.left\"\n    [borderRadius]=\"item.borderRadius\"\n    (click)=\"selectCard(item.id)\"\n  >\n  </app-cookie-layout-card>\n</div>\n"
        },
        {
            "name": "CookiePrimaryButtonComponent",
            "id": "component-CookiePrimaryButtonComponent-93c7ea1f2149e5b9ab12008d20cb8372",
            "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-primary-button/cookie-primary-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cookie-primary-button",
            "styleUrls": [
                "./cookie-primary-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cookie-primary-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cookie-primary-button',\n  templateUrl: './cookie-primary-button.component.html',\n  styleUrls: ['./cookie-primary-button.component.scss']\n})\n\nexport class CookiePrimaryButtonComponent implements OnInit {\n  @Input() title: string;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-cookie-primary-button  {\n  border-radius: 8px;\n  height: 46px;\n  position: relative;\n  z-index: 2;\n  width: 127px;\n\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  text-transform: capitalize;\n\n  align-items: center;\n  justify-content: center;\n  padding-bottom: 2px;\n  \n  font-family: 'Gramatica Medium', 'open-sans';\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 100%;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 8px;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 8px;\n    opacity: 0;\n  }\n  \n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n  \n  &:active {\n    &::before {\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 0;\n    }\n  }\n}\n\n",
                    "styleUrl": "./cookie-primary-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button type=\"button\" class=\"app-cookie-primary-button\">{{ title }}</button>\n"
        },
        {
            "name": "CookieReloadButtonComponent",
            "id": "component-CookieReloadButtonComponent-a5e0e098f42cf6200480d8f831eef1cc",
            "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-reload-button/cookie-reload-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cookie-reload-button",
            "styleUrls": [
                "./cookie-reload-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cookie-reload-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cookie-reload-button',\n  templateUrl: './cookie-reload-button.component.html',\n  styleUrls: ['./cookie-reload-button.component.scss']\n})\n\nexport class CookieReloadButtonComponent implements OnInit {\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-cookie-reload-button {\n  width: 29px;\n  height: 29px;\n  padding: 7px;\n\n  border: none;\n  outline: none;\n  background: var(--asimetric-bg-color);\n  border-radius: 4px;\n  transition: var(--transition);\n\n  &:hover {\n    background: rgba(var(--secondary-color-code), 0.4);\n  }\n\n  &:active {\n    background: var(--asimetric-bg-color);\n  }\n\n  &__image {\n    width: 15px;\n    height: 14px;\n  }\n}",
                    "styleUrl": "./cookie-reload-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button type=\"button\" class=\"app-cookie-reload-button\">\n  <img \n    class=\"app-cookie-reload-button__image\"\n    src=\"assets/images/cookie-banner/reload.svg\" \n    alt=\"reload\"\n  >\n</button>\n"
        },
        {
            "name": "CookieSecondaryButtonComponent",
            "id": "component-CookieSecondaryButtonComponent-6ed94146e091b477be99552ee9c7e4e9",
            "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-secondary-button/cookie-secondary-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cookie-secondary-button",
            "styleUrls": [
                "./cookie-secondary-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cookie-secondary-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cookie-secondary-button',\n  templateUrl: './cookie-secondary-button.component.html',\n  styleUrls: ['./cookie-secondary-button.component.scss']\n})\n\nexport class CookieSecondaryButtonComponent implements OnInit {\n  @Input() title: string;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-cookie-secondary-button {\n\n  width: 127px;\n  height: 46px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-bottom: 2px;\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n  border-radius: 8px;\n  background: transparent;\n  transition: 0.3s;\n\n  font-family: 'Gramatica Medium', 'open-sans';\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 100%;\n  text-transform: capitalize;\n  color: var(--secondary-color);\n\n  &:hover {\n    border: 1px solid rgba(var(--secondary-color-code), 0.7);\n  }\n\n  &:active {\n    border: 1px solid rgba(var(--secondary-color-code), 1);\n  }\n}",
                    "styleUrl": "./cookie-secondary-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button type=\"button\" class=\"app-cookie-secondary-button\" #container>{{ title }}</button>\n"
        },
        {
            "name": "CookieSelectInputComponent",
            "id": "component-CookieSelectInputComponent-0cc38c6c05a1af82bed96c8458611b2c",
            "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-select-input/cookie-select-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cookie-select-input",
            "styleUrls": [
                "./cookie-select-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cookie-select-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "imagesPaths",
                    "line": 10,
                    "type": "string[]"
                },
                {
                    "name": "items",
                    "line": 9,
                    "type": "string[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "onItemSelect",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "handleValueChange",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-cookie-select-input',\n  templateUrl: './cookie-select-input.component.html',\n  styleUrls: ['./cookie-select-input.component.scss']\n})\nexport class CookieSelectInputComponent implements OnInit {\n  @Input() items: string[];\n  @Input() imagesPaths?: string[]\n  @Output() onItemSelect: EventEmitter<any> = new EventEmitter();\n\n  selectedItem: string;\n\n  handleValueChange(value) {\n    this.onItemSelect.emit(value)\n  }\n\n  ngOnInit(): void {\n    this.selectedItem = this.items[0];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-cookie-select-input {\n  &__wrapper {\n    display: flex;\n    align-items: center;\n  \n    & > img {\n      margin-right: 15px;\n    }\n  }\n\n  &__input {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 12px;\n  }\n\n  &__text {\n    text-transform: capitalize;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 100%;\n  }\n\n  ::ng-deep {\n    .ng-dropdown-panel-items.scroll-host {\n      width: 100%;\n    }\n\n    .ng-select {\n      position: relative;\n      box-sizing: border-box;\n      height: 48px; \n      width: 242px;\n    \n      background: transparent;\n      border: 1px solid rgba(var(--secondary-color-code), 0.3);\n      border-radius: 8px;\n      color: rgba(var(--secondary-color-code), 1);\n    \n      &:hover {\n        cursor: pointer;\n      }\n    \n      &:after {\n        content: url('../../../../../assets/images/roll-up.png');\n        position: absolute;\n        top: 17px;\n        right: 21px;\n        transform: rotate(180deg);\n      }\n    \n      &.ng-select-opened{\n        &:after {\n          content: url('../../../../../assets/images/roll-up.png');\n          position: absolute;\n          top: 17px;\n          right: 21px;\n          transform: rotate(0deg);\n        }\n      }\n    \n      &-container {\n        width: 100%;\n        height: 46px;\n        padding: 0 21px 0 16px;  \n        margin-bottom: 4px;\n        display: flex;\n        align-items: center;\n      }\n    }\n    \n    .ng-option {\n      background-color: var(--text-color);\n      padding: 0 21px 0 16px;  \n      height: 46px;\n      display: flex!important;\n      align-items: center;\n    \n      &:hover {\n        background-color: var(--card-bg-color);\n      }\n    }\n    \n    .ng-dropdown-panel {\n      position: absolute;\n    }\n    \n    .scroll-host {\n      color: rgba(var(--dark-color-code), 1);\n      position: absolute;\n      box-shadow: 0px 30px 70px rgba(44, 59, 82, 0.2);\n      border: 1px solid #B1B9C8;\n      border-radius: 8px;\n    }\n    \n    .ng-clear-wrapper {\n      display: none;\n    }\n  }\n}\n",
                    "styleUrl": "./cookie-select-input.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-cookie-select-input\">\n  <ng-select \n    [(ngModel)]=\"selectedItem\"\n    class=\"app-cookie-select-input__input\" \n    [hideSelected]=\"true\"\n    [searchable]=\"false\"\n    (change)=\"handleValueChange($event)\"\n  >\n    <ng-option class=\"app-cookie-select-input__option\" *ngFor=\"let item of items; let i = index\" [value]=\"item\">\n      <div class=\"app-cookie-select-input__wrapper\">\n        <img *ngIf=\"imagesPaths\" [src]=\"imagesPaths[i]\" [alt]=\"item\">\n        <p class=\"app-cookie-select-input__text\">\n          {{ item }}\n        </p>\n      </div>\n    </ng-option>\n  </ng-select>\n</div>\n"
        },
        {
            "name": "CookieTitleComponent",
            "id": "component-CookieTitleComponent-ea5fca9b20ff077121b2ea52a1947e55",
            "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-title/cookie-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cookie-title",
            "styleUrls": [
                "./cookie-title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cookie-title.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cookie-title',\n  templateUrl: './cookie-title.component.html',\n  styleUrls: ['./cookie-title.component.scss']\n})\n\nexport class CookieTitleComponent implements OnInit {\n  @Input() title: string;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-cookie-title {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 32px;\n\n  &__text {\n    flex: 0 0 150px;  \n    font-family: 'Gramatica Bold', 'open-sans';\n    font-size: 14px;\n    line-height: 150%;\n    text-transform: uppercase;\n    background: var(--success-grad-light);\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n\n  &__line {\n    height: 1px;\n    width: 85%;\n    background: var(--success-grad-light);\n    opacity: 0.1;\n  }\n}",
                    "styleUrl": "./cookie-title.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-cookie-title\">\n  <h4 class=\"app-cookie-title__text\">{{ title }}</h4> \n  <div class=\"app-cookie-title__line\"></div>\n</div>\n"
        },
        {
            "name": "CookieUploadComponent",
            "id": "component-CookieUploadComponent-3a0c9843298a86bb302bd512c36b550a",
            "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-upload/cookie-upload.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cookie-upload",
            "styleUrls": [
                "./cookie-upload.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cookie-upload.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "defaultSrc",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "id",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "container",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ]
                },
                {
                    "name": "img",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ]
                },
                {
                    "name": "imgSrc",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "onUpload",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-cookie-upload',\n  templateUrl: './cookie-upload.component.html',\n  styleUrls: ['./cookie-upload.component.scss']\n})\nexport class CookieUploadComponent implements OnInit {\n  @Input() id: string;\n  @Input() defaultSrc: string;\n\n  imgSrc: string;\n\n  @ViewChild('container') container: ElementRef;\n  @ViewChild('container') img: ElementRef;\n  \n  onUpload(event) {\n    var blob = new Blob([event.target.value]);\n    const input =this.container.nativeElement.files[0]\n    var fReader = new FileReader();\n    fReader.readAsDataURL(input);\n    const x = (val) => {\n      this.imgSrc = val\n    }\n    fReader.onloadend = function(ev) {\n      x(ev.target.result)\n    }\n  }\n\n  ngOnInit(): void {\n    this.imgSrc = this.defaultSrc\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-cookie-upload {\n  display: flex;\n  align-items: center;\n\n  &__input {\n    display: none;\n  }\n\n  &__label {\n    height: 34px;\n    width: 160px;\n\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-size: 14px;\n    line-height: 34px;\n    color: var(--secondary-color);\n    text-transform: uppercase;\n    text-align: center;\n\n    border-radius: 4px;\n    background: rgba(var(--secondary-color-code), 0.1);\n    transition: var(transition);\n\n    &:hover {\n      background: rgba(var(--secondary-color-code), 0.3);\n    }\n\n    &:active {\n      background: rgba(var(--secondary-color-code), 0.5);\n    }\n  }\n\n  &__image-container {\n    width: 44px;\n    height: 44px;\n    margin-right: 16px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background: rgba(var(--secondary-color-code), 0.05);\n    border-radius: 4px;\n\n    & > img {\n      max-width: 100%;\n      max-height: 100%;\n    }\n  }\n}",
                    "styleUrl": "./cookie-upload.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-cookie-upload\">\n  <div class=\"app-cookie-upload__image-container\">\n    <img [src]=\"imgSrc\" alt=\"\" >\n  </div>\n  <input \n    class=\"app-cookie-upload__input\"\n    [id]=\"id\"\n    (change)=\"onUpload($event)\" \n    type=\"file\" \n    accept=\".jpg, .jpeg, .png\" \n    #container\n  >\n  <label [for]=\"id\" class=\"app-cookie-upload__label\">\n    upload image\n  </label>\n</div>\n"
        },
        {
            "name": "DateMenuComponent",
            "id": "component-DateMenuComponent-a05d540f234a6c93bca5154b3dc73947",
            "file": "src/app/molecules/menu/date-menu/date-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-date-menu",
            "styleUrls": [
                "./date-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-date-menu',\n  templateUrl: './date-menu.component.html',\n  styleUrls: ['./date-menu.component.scss']\n})\n\nexport class DateMenuComponent {\n  @Input() items: string[];\n\n  active: number = 0;\n\n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-date-menu {\n  display: flex;\n  align-items: center;\n\n  &__list {\n    display: flex;\n    align-items: center;\n  }\n\n  &__item {\n    padding: 0 10px 5px;\n  }\n\n  &__container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    height: 46px;\n    padding: 0 13px;\n    margin-left: 20px;\n\n    border: 1px solid rgba(var(--secondary-color-code), 0.3);\n    border-radius: 12px;\n\n    & > img {\n      height: 18px;\n      width: 18px;\n    }\n  }\n}",
                    "styleUrl": "./date-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-date-menu\">\n  <ul class=\"app-date-menu__list\">\n    <li \n      class=\"app-date-menu__item\"\n      *ngFor=\"let item of items; let i = index\" \n    >\n      <app-nav-link\n        [isActive]=\"active === i\"\n        [title]=\"item\" \n        classes=\"nav-link-secondary nav-link-highlited\"\n        (click)=\"handlClick($event, i)\"\n      >\n      </app-nav-link>\n    </li>\n  </ul>\n  <div class=\"app-date-menu__container\">\n    <img src='assets/images/calendar.png' alt=\"calendar\" />\n  </div>\n</div>\n"
        },
        {
            "name": "DomainsApproveModalComponent",
            "id": "component-DomainsApproveModalComponent-bc1755b217150a88b73039598756e18d",
            "file": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-approve-modal",
            "styleUrls": [
                "./approve-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./approve-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dangerButtonTitle",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "primaryButtonTitle",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "closeModal",
                    "defaultValue": "new EventEmitter()",
                    "line": 16,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "dangerButtonFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "primaryButtonFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-approve-modal',\n  templateUrl: './approve-modal.component.html',\n  styleUrls: ['./approve-modal.component.scss']\n})\n\nexport class DomainsApproveModalComponent {\n  @Input() title: string;\n  @Input() primaryButtonTitle: string;\n  @Input() dangerButtonTitle: string;\n\n  @Output() primaryButtonFunction: EventEmitter<any> = new EventEmitter();\n  @Output() dangerButtonFunction: EventEmitter<any> = new EventEmitter();\n  @Output() closeModal: EventEmitter<any> = new EventEmitter();\n\n  handleClick(event) {\n    if (!event.target.closest('.approve-modal__form')) {\n      this.handleClose();\n    }\n  }\n\n  handleClose() {\n    this.closeModal.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".approve-modal {\n  width: 100vw;\n  height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 3;\n\n  background-color: rgba(var(--secondary-color-code), 0.5);\n  text-align: center;\n\n  &__title {\n    margin-bottom: 32px;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    color: var(--secondary-color);\n  }\n\n  &__form {\n    min-width: 588px;\n    max-width: 800px;\n    padding: 32px 64px;\n    margin: auto;\n\n    position: relative;\n    background: var(--card-bg-color);\n    border-radius: 12px 30px;\n  }\n\n  &__buttons {\n    display: flex;\n    justify-content: center;\n    margin-top: 24px;\n\n    & * {\n      margin-right: 30px;;\n    }\n  \n    & :last-child {\n      margin-right: 0;\n    }\n  }\n\n  &__close {\n    position: absolute;\n    right: 28px;\n    top: 24px;\n    \n    background-color: transparent;\n    border: none;\n    outline: none;\n  }\n}\n\n@media screen and (max-width: 600px) {\n  .approve-modal {\n    &__form {\n      min-width: 90%;\n      max-width: 90%;\n      padding: 20px;\n    }\n  }\n}",
                    "styleUrl": "./approve-modal.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"approve-modal\" (click)=\"handleClick($event)\">\n  <div class=\"approve-modal__form\">\n    <button \n      type=\"button\" \n      class=\"approve-modal__close\" \n      (click)=\"handleClose()\"\n    >\n      <img src=\"assets/images/deleteX.png\" alt=\"delete\">\n    </button>\n    <p class=\"approve-modal__title\">{{ title }}</p>\n    <ng-content></ng-content>\n    <div class=\"approve-modal__buttons\">\n      <app-simple-button \n        *ngIf=\"primaryButtonTitle!==''\" \n        [classes]=\"'btn-success-big'\"\n        [title]=\"primaryButtonTitle\"\n        (click)=\"primaryButtonFunction.emit()\"\n      >\n      </app-simple-button>\n      <app-simple-button\n        *ngIf=\"dangerButtonTitle!==''\" \n        [classes]=\"'btn-danger-big'\"\n        [title]=\"dangerButtonTitle\"\n        (click)=\"dangerButtonFunction.emit()\"\n      >\n      </app-simple-button>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "DomainsCheckboxMutableGradientComponent",
            "id": "component-DomainsCheckboxMutableGradientComponent-e6f97b4bc828849cb1ce183d2d28a396",
            "file": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-mutable-gradient",
            "styleUrls": [
                "./checkbox-mutable-gradient.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-mutable-gradient.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "isChecked",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "onActive",
                    "line": 13,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "handleChange",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "onToggle",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, Output, EventEmitter } from '@angular/core';\n\nconst ACTIVE_CLASS = 'app-checkbox-input-gradient__container active';\nconst INACTIVE_CLASS = 'app-checkbox-input-gradient__container';\n\n@Component({\n  selector: 'app-checkbox-mutable-gradient',\n  templateUrl: './checkbox-mutable-gradient.component.html',\n  styleUrls: ['./checkbox-mutable-gradient.component.scss']\n})\n\nexport class DomainsCheckboxMutableGradientComponent implements OnChanges {\n  @Input() onActive: boolean;\n  @Input() isChecked: boolean;\n  @Input() id: string;\n\n  @Output() handleChange: EventEmitter<any> = new EventEmitter();\n  \n  classes = '';\n\n  onToggle = () => {\n    this.handleChange.emit(this.id)\n  }\n\n  ngOnChanges(): void {\n    this.classes = this.onActive ? ACTIVE_CLASS : INACTIVE_CLASS;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-input-gradient__container {\n  width: 24px;\n  height: 24px;\n\n  & > .app-checkbox-input-gradient {\n    display: none;\n  \n    &__label {\n      display: block;\n      position: relative;\n  \n      &:after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n  \n        box-sizing: border-box;\n        width: 24px;\n        height: 24px;\n        border-radius: 4px;\n        border: 1px solid rgba(var(--secondary-color-code), 0.3);\n      }\n    }\n  }\n  \n  & > .app-checkbox-input-gradient:checked + .app-checkbox-input-gradient__label {\n    &:after {\n      background: var(--success-grad-light);\n      border: none;\n    }\n  \n    &:before {\n      content: \"\";\n      position: absolute;\n      top: 4px;\n      left: 4px;\n      z-index: 2;\n  \n      box-sizing: border-box;\n      width: 16px;\n      height: 16px;\n      background: center no-repeat url('../../../../../assets/images/checkbox.svg');\n      background-size: contain;\n    }\n  }\n}\n\n.app-checkbox-input-gradient__container.active {\n  & > .app-checkbox-input-gradient {\n\n    &__label {\n      &:after {\n        border: 1px solid rgba(var(--text-color-code), 0.5);\n      }\n  \n      &:hover {\n        &:after {\n          border: 1px solid rgba(var(--text-color-code), 1);\n        }\n      }\n    }\n  }\n\n  & > .app-checkbox-input-gradient:checked + .app-checkbox-input-gradient__label {\n    &:after {\n      background: var(--text-color);\n    }\n\n    &:before {\n      background: center no-repeat url('../../../../../assets/images/checkboxGradient.svg');\n    }\n  }\n}\n",
                    "styleUrl": "./checkbox-mutable-gradient.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div [ngClass]=\"classes\">\n  <input\n    type=\"checkbox\" \n    [id]=\"id\"\n    name=\"app-checkbox-input-gradient\" \n    class=\"app-checkbox-input-gradient\"\n    [checked]=\"isChecked\"\n    (change)=\"onToggle()\"\n  >\n  <label [for]=\"id\" class=\"app-checkbox-input-gradient__label\"></label>\n</div>\n\n"
        },
        {
            "name": "DomainsFormInputComponent",
            "id": "component-DomainsFormInputComponent-eba6802c4b7cc10989644d5add5f5dc2",
            "file": "src/app/pages-components/Domains/Atoms/formInput/formInput.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-input",
            "styleUrls": [
                "formInput.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./formInput.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Math.random()",
                    "line": 14,
                    "type": "number"
                },
                {
                    "name": "initialValue",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "isBold",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "placeholderText",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "changeValueParentFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 16,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChangeValue",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-form-input',\n  templateUrl: './formInput.component.html',\n  styleUrls: ['formInput.component.scss'],\n})\n\nexport class DomainsFormInputComponent implements OnInit {\n  @Input() placeholderText: string;\n  @Input() name?: string = '';\n  @Input() initialValue?: string;\n  @Input() isBold?: string;\n  @Input() id?: number = Math.random();\n\n  @Output() changeValueParentFunction?: EventEmitter<any> = new EventEmitter();\n\n  classes='';\n  value='';\n\n  handleChangeValue(event) {\n   this.changeValueParentFunction.emit(event.target.value)\n  }\n\n  ngOnInit() {\n    if (this.initialValue) {\n      this.value = this.initialValue;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-input-field {\n  width: 100%;\n  padding: 15px 16px 15px 16px;\n  height: 48px;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 100%;\n\n  border: none;\n  border-radius: 8px;\n  background: rgba(var(--secondary-color-code), 0.05);\n  color: var(--secondary-color);\n\n  &.bold {\n    font-weight: 600;\n  }\n\n  &::placeholder {\n    color: rgba(var(--secondary-color-code), 0.5);\n  }\n\n  &:hover {\n    background: rgba(var(--secondary-color-code), 0.2);\n  }\n\n  &::placeholder {\n    font-weight: 300;\n  }\n}",
                    "styleUrl": "formInput.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<input \n  [ngClass]=\"{ 'app-form-input-field': true, 'bold': isBold }\"\n  [placeholder]=\"placeholderText\"\n  type=\"text\"\n  [name]=\"name\"\n  [value]=\"value\"\n  (input)=\"handleChangeValue($event)\"\n  [id]=\"id\"\n/>\n"
        },
        {
            "name": "DomainsMutableDangerButtonComponent",
            "id": "component-DomainsMutableDangerButtonComponent-afe9d93f749f364b3bd3700b38833301",
            "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mutable-danger-button",
            "styleUrls": [
                "./mutable-danger-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mutable-danger-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "svgPath",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "changeToActiveColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "changeToStaticColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "color",
                    "defaultValue": "STATIC_COLOR",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\nconst HOVER_COLOR = 'red';\nconst STATIC_COLOR = 'white';\n\n@Component({\n  selector: 'app-mutable-danger-button',\n  templateUrl: './mutable-danger-button.component.html',\n  styleUrls: ['./mutable-danger-button.component.scss']\n})\n\nexport class DomainsMutableDangerButtonComponent implements OnChanges {\n  @Input() svgPath: string;\n\n  color = STATIC_COLOR;\n\n  changeToActiveColor = () => {\n    this.color = HOVER_COLOR;\n  }\n\n  changeToStaticColor = () => {\n    this.color = STATIC_COLOR;\n  }\n\n  ngOnChanges(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-mutable-danger-button {\n  height: 44px;\n  padding: 11px 14px;\n  border-radius: 8px;\n  border: none;\n  background-color: rgba(var(--text-color-code), 0.1);\n\n  &:hover {\n    background-color: rgba(var(--text-color-code), 1);\n  }\n\n  &:active {\n    background-color: rgba(var(--text-color-code), 0.1);\n  }\n}\n\n",
                    "styleUrl": "./mutable-danger-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<button \n  class=\"app-mutable-danger-button\"\n  (mousedown)=\"changeToStaticColor()\"\n  (mouseup)=\"changeToActiveColor()\"\n  (mouseenter)=\"changeToActiveColor()\"\n  (mouseleave)=\"changeToStaticColor()\"\n>\n  <svg-icon \n    [src]=\"svgPath\"\n    [svgStyle]=\"{ 'stroke': color }\"\n  >\n  </svg-icon>\n</button>\n"
        },
        {
            "name": "DomainsMutableGradientIconButtonComponent",
            "id": "component-DomainsMutableGradientIconButtonComponent-4032eb69e3152a23d411917b1977fe42",
            "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mutable-gradient-icon-button",
            "styleUrls": [
                "./mutable-gradient-icon-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mutable-gradient-icon-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "svgPath",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "changeToActiveColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "changeToStaticColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "color",
                    "defaultValue": "STATIC_COLOR",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnChanges, Input } from '@angular/core';\n\nconst STATIC_COLOR = 'rgb(255, 255, 255)';\nconst HOVER_COLOR = 'url(#paint0_linear)';\n\n@Component({\n  selector: 'app-mutable-gradient-icon-button',\n  templateUrl: './mutable-gradient-icon-button.component.html',\n  styleUrls: ['./mutable-gradient-icon-button.component.scss']\n})\n\nexport class DomainsMutableGradientIconButtonComponent implements OnChanges {\n  @Input() svgPath: string;\n  \n  color = STATIC_COLOR;\n\n  changeToActiveColor = () => {\n    this.color = HOVER_COLOR;\n  }\n\n  changeToStaticColor = () => {\n    this.color = STATIC_COLOR;\n  }\n\n  ngOnChanges(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-mutable-gradient-icon-button {\n  height: 44px;\n  padding: 11px 14px;\n  border-radius: 8px;\n  border: none;\n  background-color: rgba(var(--text-color-code), 0.1);\n\n  &:hover {\n    background-color: rgba(var(--text-color-code), 1);\n  }\n\n  &:active {\n    background-color: rgba(var(--text-color-code), 0.1);\n  }\n\n  &__tip {\n    display: none;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 100%;\n  }\n\n  &__container {\n    position: relative;\n    height: 44px;\n    width: fit-content;\n\n    &:hover > .app-mutable-gradient-icon-button__tip {\n      display: block;\n      width: 212px;\n      height: 48px;\n      box-sizing: border-box;\n\n      position: absolute;\n      right: 0;\n      top: -48px;\n\n      background: var(--text-color);\n      border: 1px solid var(--info-color-code);\n      color: var(--secondary-color);\n      box-shadow: 0px 8px 12px rgba(28, 28, 28, 0.2);\n      border-radius: 8px;\n\n      line-height: 48px;\n      text-align: center;\n\n      &:hover {\n        display: none;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./mutable-gradient-icon-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"app-mutable-gradient-icon-button__container\">\n  <div class=\"app-mutable-gradient-icon-button__tip\">Dupliate this domains</div>\n  <button \n    class=\"app-mutable-gradient-icon-button active\"\n    (mousedown)=\"changeToStaticColor()\"\n    (mouseup)=\"changeToActiveColor()\"\n    (mouseenter)=\"changeToActiveColor()\"\n    (mouseleave)=\"changeToStaticColor()\"\n  >\n    <svg-icon \n      [src]=\"svgPath\"\n      [svgStyle]=\"{ 'stroke': color }\"\n    >\n    </svg-icon>\n  </button>\n</div>\n"
        },
        {
            "name": "DomainsMutableLightButtonComponent",
            "id": "component-DomainsMutableLightButtonComponent-690f59341f455d4ac23732395149b564",
            "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-light-button/mutable-light-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mutable-light-button",
            "styleUrls": [
                "./mutable-light-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mutable-light-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-mutable-light-button',\n  templateUrl: './mutable-light-button.component.html',\n  styleUrls: ['./mutable-light-button.component.scss']\n})\n\nexport class DomainsMutableLightButtonComponent {\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-button-mutable-light {\n  width: fit-content;\n  padding: 17px 29px;\n  box-sizing: border-box;\n\n  text-transform: uppercase;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 12px;\n\n  border: 1px solid var(--asimetric-bg-color);\n  border-radius: 8px;\n  background-color: transparent;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  color: var(--secondary-color);\n\n  &:hover {\n    background-color: rgba(var(--text-color-code), 0.15);\n  }\n\n  &:active {\n    background-color: transparent;\n  }\n}",
                    "styleUrl": "./mutable-light-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class=\"app-button-mutable-light\">{{ title }}</button>\n\n"
        },
        {
            "name": "DomainsMutablePrimaryButtonComponent",
            "id": "component-DomainsMutablePrimaryButtonComponent-86c9a6fc77e087ac90120074445623b1",
            "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-primary-button/mutable-primary-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mutable-primary-button",
            "styleUrls": [
                "./mutable-primary-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mutable-primary-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-mutable-primary-button',\n  templateUrl: './mutable-primary-button.component.html',\n  styleUrls: ['./mutable-primary-button.component.scss']\n})\n\nexport class DomainsMutablePrimaryButtonComponent implements OnChanges {\n  @Input() title: string;\n\n  ngOnChanges() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-mutable-primary-button {\n  padding: 16px 29px;\n  border-radius: 8px;\n  border: none;\n  background: rgba(var(--text-color-code), 0.15);\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  &:hover {\n    background-color: var(--text-color);\n\n    & > p {\n      background: var(--success-grad-light);\n      background-clip: text;\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n\n  &:active {\n    background: rgba(var(--secondary-color-code), 0.15);\n\n    & > p {\n      background: var(--text-color);\n      background-clip: text;\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n\n  &__title {\n    text-transform: uppercase;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 800;\n    font-size: 12px;\n  }\n}\n",
                    "styleUrl": "./mutable-primary-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<button type=\"button\" class=\"app-mutable-primary-button\">\n  <p class=\"app-mutable-primary-button__title\">{{ title }}</p>\n</button>\n\n"
        },
        {
            "name": "DomainsOnboardingCardComponent",
            "id": "component-DomainsOnboardingCardComponent-6525af252cc2d360a254ebaf04a8ae48",
            "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-onboarding-card",
            "styleUrls": [
                "./onboarding-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./onboarding-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "isSelected",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "text",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 17,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "delete",
                    "defaultValue": "new EventEmitter()",
                    "line": 21,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "duplicate",
                    "defaultValue": "new EventEmitter()",
                    "line": 24,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "edit",
                    "defaultValue": "new EventEmitter()",
                    "line": 22,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter()",
                    "line": 23,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "block",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 88,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'block'"
                        }
                    ]
                },
                {
                    "name": "cardColor",
                    "defaultValue": "this.onActive ? HIGHLITED_COLOR : STATIC_COLOR",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "handleDelete",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "handleEdit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "handleShowReports",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "isSmallMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "isVisibleOptions",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "onActive",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "setIsVisibleOptions",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "setOnActive",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "textColor",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "textDirection",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "checkCheckboxStyle",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 34
                },
                {
                    "name": "handleDuplicate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132
                },
                {
                    "name": "setColors",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 107
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 90
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild, ElementRef, OnChanges, HostListener, EventEmitter, Output, AfterViewInit } from '@angular/core';\n\nconst HIGHLITED_COLOR = 'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)';\nconst STATIC_COLOR = 'rgb(255, 255, 255)';\nconst TEXT_STATIC_COLOR = '#011949';\nconst SMALL_MOBILE_VIEW = 509;\nconst BIG_MOBILE_VIEW = 760;\n\n@Component({\n  selector: 'app-onboarding-card',\n  templateUrl: './onboarding-card.component.html',\n  styleUrls: ['./onboarding-card.component.scss']\n})\n\nexport class DomainsOnboardingCardComponent implements OnChanges, AfterViewInit {\n  @Input() isSelected: boolean;\n  @Input() title: string;\n  @Input() text: string;\n  @Input() id: string;\n  \n  @Output() delete: EventEmitter<any> = new EventEmitter();\n  @Output() edit: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() duplicate: EventEmitter<any> = new EventEmitter();\n\n  onActive = false;\n  isMobile: boolean;\n  isSmallMobile: boolean;\n  isVisibleOptions = false;\n  cardColor = this.onActive ? HIGHLITED_COLOR : STATIC_COLOR;\n  textColor = '';\n  textDirection = '';\n\n  checkCheckboxStyle() {\n    if (this.isMobile) {\n      return false;\n    } else {\n      return this.onActive ? this.onActive : this.isSelected;\n    }\n  }\n\n  handleDelete = () => {\n    if (this.isMobile) {\n      this.isVisibleOptions = false;\n    }\n    this.delete.emit(this.id);\n  }\n\n  handleEdit = () => {\n    if (this.isMobile) {\n      this.isVisibleOptions = false;\n    }\n    this.edit.emit(this.id);\n  }\n\n  handleShowReports = () => {\n    if (this.isMobile) {\n      this.isVisibleOptions = false;\n    }\n    // your logic on press this button\n  }\n\n  handleDuplicate() {\n    if (this.isMobile) {\n      this.isVisibleOptions = false;\n    }\n    this.duplicate.emit(this.id);\n  }\n  \n  setIsVisibleOptions = () => {\n    this.isVisibleOptions = !this.isVisibleOptions;\n  }\n\n  setOnActive = (value: boolean) => {\n    if (!this.isMobile) {\n      if (this.isSelected && !this.isMobile) {\n        this.onActive = true;\n        this.cardColor = HIGHLITED_COLOR;\n        this.textColor = STATIC_COLOR;\n      } else {\n        this.onActive = value;\n        this.cardColor = value ? HIGHLITED_COLOR : STATIC_COLOR;\n        this.textColor = value ? STATIC_COLOR : TEXT_STATIC_COLOR;\n      }\n    }\n  }\n\n  @ViewChild('block') block: ElementRef;\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    const width = this.block.nativeElement.clientWidth;\n    this.isMobile = width < BIG_MOBILE_VIEW;\n    this.isSmallMobile = width < SMALL_MOBILE_VIEW;\n\n    if (this.isSelected && !this.isMobile && !this.isSmallMobile) {\n      this.onActive = true;\n      this.cardColor = HIGHLITED_COLOR;\n      this.textColor = STATIC_COLOR;\n    } else {\n      this.cardColor = STATIC_COLOR;\n      this.textColor = TEXT_STATIC_COLOR;\n      this.onActive = false;\n    }\n  }\n\n  @HostListener('document:click', ['$event'])\n\tonClick(event: Event) {\n    if (!this.block.nativeElement.contains(event.target)) {\n      this.isVisibleOptions = false;\n    }\n  }\n\n  setColors() {\n    const width = document.querySelector('.app-onboarding-card').clientWidth;\n    this.isMobile = width < BIG_MOBILE_VIEW;\n    this.isSmallMobile = width < SMALL_MOBILE_VIEW;\n    if (this.isSelected && !this.isMobile) {\n      this.onActive = true;\n      this.cardColor = HIGHLITED_COLOR;\n      this.textColor = STATIC_COLOR;\n    } else {\n      this.cardColor = STATIC_COLOR;\n      this.textColor = TEXT_STATIC_COLOR;\n      this.onActive = false;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.setColors();\n  }\n  \n  ngOnChanges() {\n    this.setColors();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-onboarding-card {\n  display: grid;\n  grid-template-columns: 1fr 334px;\n  grid-column-gap: 10px;\n  align-items: center;\n  justify-content: start;\n  position: relative;\n  width: 100%;\n  min-height: 72px;\n\n  background: transparent;\n  border: 1px solid rgba(var(--secondary-color-code), 0.15);\n  border-radius: 12px;\n  color: var(--secondary-color);\n\n  &.mobile {\n    grid-template-columns: 1fr 18px;\n  }\n\n  &__wrapper {\n    display: flex;\n    align-items: center;\n\n    ::ng-deep {\n      app-mutable-primary-button {\n        margin-right: 16px;\n      }\n      \n      app-mutable-gradient-icon-button {\n        margin-right: 14px;\n      }\n    }\n  }\n\n  &__text-box {\n    display: flex;\n    margin-left: 26px;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background: var(--success-grad-light);\n    color: var(--text-color);\n  }\n\n  &__title {\n    margin-right: 16px;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 18px;\n    line-height: 100%;\n  }\n\n  &__text {\n    opacity: 0.6;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 100;\n    font-size: 18px;\n    line-height: 100%;\n  }\n\n  &__mobile-box {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 10px 20px;\n\n    position: absolute;\n    right: 0;\n    top: calc(100% + 2px);\n    z-index: 2;\n\n    background-color: rgba(var(--text-color-code), 1);\n    border: 1px solid rgba(var(--secondary-color-code), 0.15);\n    border-radius: 12px;\n  }\n\n  &__mobile-button {\n    padding: 5px;\n    border: none;\n    background-color: transparent;\n    color: rgba(var(--secondary-color-code), 0.7);\n\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    text-transform: uppercase;\n    font-size: 12px;\n    line-height: 100%;\n\n    &:active {\n      background: var(--success-grad-light);\n      background-clip: text;\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n\n  &__toggler {\n    display: flex;\n    align-items: center;\n    border: none;\n    background-color: transparent;\n  }\n}",
                    "styleUrl": "./onboarding-card.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges",
                "AfterViewInit"
            ],
            "templateData": "<div\n  [ngClass]=\"{ 'app-onboarding-card': true, 'mobile': isMobile }\"\n  (mouseenter)=\"setOnActive(true)\"\n  (mouseleave)=\"setOnActive(false)\"\n  [style.background]=\"cardColor\"\n  [style.padding]=\"isSmallMobile ? '5px' : '15px 24px 13px'\"\n  #block\n>\n  <div class=\"app-onboarding-card__wrapper\">\n    <app-checkbox-mutable-gradient\n      [onActive]=\"checkCheckboxStyle()\"\n      [isChecked]=\"isSelected\"\n      [id]=\"id\"\n      (handleChange)=\"select.emit($event)\"\n    >\n    </app-checkbox-mutable-gradient>\n    <div class=\"app-onboarding-card__text-box\"\n      [style.flexDirection] = \"isMobile ? 'column' : 'row'\"\n      [style.marginLeft] = \"isSmallMobile ? '10px' : '26px'\"\n      [style.alignItems] = \"isMobile ? 'flex-start' : 'center'\"\n    >\n      <p \n        [style.color] = \"textColor\"\n        [style.fontSize] = \"isSmallMobile ? '12px' : '16px'\"\n        class=\"app-onboarding-card__title\"\n      >\n        {{ title }}\n      </p>\n      <p \n        [style.color] = \"textColor\"\n        [style.fontSize] = \"isSmallMobile ? '12px' : '16px'\"\n        class=\"app-onboarding-card__text\"\n      >\n        {{ text }}\n      </p>\n    </div>\n  </div>\n  <div class=\"app-ondoarding-card__wrapper\" *ngIf=\"isMobile\">\n    <button \n      type=\"button\"\n      class=\"app-onboarding-card__toggler\"\n      (click)=\"setIsVisibleOptions()\"\n    >\n      <svg-icon \n        [src]=\"'assets/images/menu/Options.svg'\"\n        [svgStyle]=\"{ 'fill': '#011949' }\"\n      >\n      </svg-icon>\n    </button>\n    <div class=\"app-onboarding-card__mobile-box\" *ngIf=\"isVisibleOptions\">\n      <button \n        class=\"app-onboarding-card__mobile-button\" \n        type=\"button\"\n        (click)=\"handleEdit()\"\n      >\n        Edit\n      </button>\n      <button \n        class=\"app-onboarding-card__mobile-button\" \n        type=\"button\"\n        (click)=\"handleShowReports()\"\n      > \n        Reports\n      </button>\n      <button \n        class=\"app-onboarding-card__mobile-button\" \n        type=\"button\"\n        (click)=\"handleDuplicate()\"\n      > \n        Copy\n      </button>\n      <button \n        class=\"app-onboarding-card__mobile-button\" \n        type=\"button\"\n        (click)=\"handleDelete()\"\n      >\n        Delete\n      </button>\n    </div>\n  </div>\n  <div \n    class=\"app-onboarding-card__wrapper\" \n    *ngIf=\"!isMobile\" \n    [style.opacity]=\"(!isMobile && (onActive || isSelected)) ? '1' : '0'\"\n  >\n    <app-mutable-primary-button [title]=\"'edit'\" (click)=\"handleEdit()\"></app-mutable-primary-button>\n    <app-mutable-primary-button [title]=\"'reports'\" (click)=\"handleShowReports()\"></app-mutable-primary-button>\n    <app-mutable-gradient-icon-button [svgPath]=\"'assets/images/copy.svg'\" (click)=\"handleDuplicate()\"></app-mutable-gradient-icon-button>\n    <app-mutable-danger-button [svgPath]=\"'assets/images/basket.svg'\" (click)=\"handleDelete()\"></app-mutable-danger-button>\n  </div>\n</div>"
        },
        {
            "name": "DomainsOnboardingListComponent",
            "id": "component-DomainsOnboardingListComponent-5798bae91bd95f6bcdce4398577ff279",
            "file": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-onboarding-list",
            "styleUrls": [
                "./onboarding-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./onboarding-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialDomainsList",
                    "line": 21,
                    "type": "Domain[]"
                },
                {
                    "name": "selected",
                    "line": 22,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeId",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "activeTitle",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "addModalContent",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'addModalContent'"
                        }
                    ]
                },
                {
                    "name": "changeSelectedList",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "container",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ]
                },
                {
                    "name": "ctx",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "deleteModalContent",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'deleteModalContent'"
                        }
                    ]
                },
                {
                    "name": "domains",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "editModalContent",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'editModalContent'"
                        }
                    ]
                },
                {
                    "name": "handleFilter",
                    "defaultValue": "debounce(function(...args) {\n    this.query = args[0].toLowerCase();\n  }, 500, false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 170
                },
                {
                    "name": "isMobile",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "isModalVisible",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "isSmallMobile",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "modalComponent",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "modalDangerButtonFunction",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "modalDangerButtonTitle",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "modalPrimaryButtonFunction",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "modalPrimaryButtonTitle",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "modalTitle",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "newDomainText",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "newDomainTitle",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "query",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methodsClass": [
                {
                    "name": "addDomain",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120
                },
                {
                    "name": "checkIsSelected",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 65,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143
                },
                {
                    "name": "deleteDomain",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78
                },
                {
                    "name": "deleteSelectedDomains",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92
                },
                {
                    "name": "detectMobileView",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174
                },
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "duplicateDomain",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editDomain",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109
                },
                {
                    "name": "handleAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115
                },
                {
                    "name": "handleDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleDeleteSeveral",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84
                },
                {
                    "name": "handleEdit",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 179
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 183
                },
                {
                    "name": "selectAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                },
                {
                    "name": "setModalVariables",
                    "args": [
                        {
                            "name": "modalTitle",
                            "type": ""
                        },
                        {
                            "name": "modalPrimaryButtonTitle",
                            "type": ""
                        },
                        {
                            "name": "modalDangerButtonTitle",
                            "type": ""
                        },
                        {
                            "name": "modalPrimaryButtonFunction",
                            "type": ""
                        },
                        {
                            "name": "modalDangerButtonFunction",
                            "type": ""
                        },
                        {
                            "name": "modalComponent",
                            "type": ""
                        },
                        {
                            "name": "modalVisibility",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "jsdoctags": [
                        {
                            "name": "modalTitle",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modalPrimaryButtonTitle",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modalDangerButtonTitle",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modalPrimaryButtonFunction",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modalDangerButtonFunction",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modalComponent",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modalVisibility",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string"
                        },
                        {
                            "name": "type",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 51
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { debounce } from './helpers';\n\ninterface Domain {\n  title: string,\n  text: string,\n  id: string\n}\n\nconst MOBILE_VIEW = 574;\nconst SMALL_MOBILE_VIEW = 400;\n\n@Component({\n  selector: 'app-onboarding-list',\n  templateUrl: './onboarding-list.component.html',\n  styleUrls: ['./onboarding-list.component.scss'],\n})\n\nexport class DomainsOnboardingListComponent implements OnInit {\n  @Input() initialDomainsList: Domain[];\n  @Input() selected: string[];\n\n  @ViewChild('deleteModalContent')deleteModalContent: ElementRef;\n  @ViewChild('editModalContent')editModalContent: ElementRef;\n  @ViewChild('addModalContent')addModalContent: ElementRef;\n  @ViewChild('container') container: ElementRef;\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.domains, event.previousIndex, event.currentIndex);\n  }\n  \n  domains = [];\n  isModalVisible=false;\n  query = '';\n  newDomainTitle = '';\n  newDomainText = '';\n  activeTitle = '';\n  activeId='';\n  modalTitle='';\n  modalPrimaryButtonTitle='';\n  modalDangerButtonTitle='';\n  modalPrimaryButtonFunction=(args: any) => {};\n  modalDangerButtonFunction=(args: any) => {};\n  modalComponent;\n  ctx;\n  isMobile;\n  isSmallMobile;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.detectMobileView();\n  }\n\n  selectAll() {\n    this.selected = this.selected.length === this.domains.length\n      ? []\n      : this.domains.map(domain => domain.id)\n  }\n\n  changeSelectedList = (id: string) => {\n    this.selected = (this.selected.includes(id)) ? this.selected.filter(domain => domain !== id) : [...this.selected, id];\n  }\n\n  checkIsSelected(id: string) {\n    return this.selected.includes(id);\n  }\n\n  /// show modal with props\n\n  handleDelete(id: string) {\n    this.activeTitle = this.domains.find(domain => domain.id === id).title;\n    this.ctx = { titleActiveDomain: this.activeTitle };\n    this.activeId = id;\n    this.setModalVariables('Delete domain', '', 'delete', this.closeModal, this.deleteDomain, this.deleteModalContent, true);\n  }\n\n  deleteDomain() {\n    this.domains = this.domains.filter(domain => domain.id !== this.activeId);\n    this.isModalVisible = false;\n    this.selected = this.selected.filter(domain => domain !== this.activeId);\n  }\n\n  handleDeleteSeveral() {\n    this.activeTitle = this.domains\n      .filter(domain => this.selected.includes(domain.id))\n      .map(domain => domain.title).join(', ');\n    this.ctx = { titleActiveDomain: this.activeTitle };\n    this.setModalVariables( 'Delete domains', '', 'delete', this.closeModal, this.deleteSelectedDomains, this.deleteModalContent, true);\n  }\n\n  deleteSelectedDomains() {\n    this.domains = this.domains.filter(domain => {\n      if(!this.selected.includes(domain.id)) {\n        return domain\n      }\n    })\n    this.selected = [];\n    this.isModalVisible = false;\n  }\n\n  handleEdit(id: string) {\n    this.activeTitle =this.domains.find(domain => domain.id === id).title;\n    this.activeId = id;\n    this.ctx = { initialValue: this.activeTitle };\n    this.setModalVariables('Rename domain', 'rename', '', this.editDomain, null, this.editModalContent, true);\n  }\n\n  editDomain() {\n    const activeIndex = this.domains.findIndex(domain => domain.id === this.activeId);\n    this.domains[activeIndex].title = this.activeTitle;\n    this.isModalVisible = false;\n  }\n\n  handleAdd() {\n    this.ctx = { initialValue: '' };\n    this.setModalVariables('Add domain', 'add', '', this.addDomain, null, this.addModalContent, true);\n  }\n\n  addDomain() {\n    const newDomain = {\n      id: `${Date.now()}`, \n      title: this.newDomainTitle, \n      text: this.newDomainText\n    }\n    this.domains = [...this.domains, newDomain];\n    this.isModalVisible = false;\n  }\n\n  setModalVariables(\n    modalTitle, modalPrimaryButtonTitle, modalDangerButtonTitle, modalPrimaryButtonFunction,\n    modalDangerButtonFunction, modalComponent, modalVisibility\n  ) {\n    this.modalTitle = modalTitle;\n    this.modalPrimaryButtonTitle = modalPrimaryButtonTitle;\n    this.modalDangerButtonTitle = modalDangerButtonTitle;\n    this.modalPrimaryButtonFunction = modalPrimaryButtonFunction;\n    this.modalDangerButtonFunction = modalDangerButtonFunction;\n    this.modalComponent = modalComponent;\n    this.isModalVisible = modalVisibility;\n  }\n\n  closeModal() {\n    this.isModalVisible = false;\n  }\n\n  setValue(value: string, type: string) {\n    switch(type) {\n      case 'editTitle':\n        this.activeTitle = value;\n      case 'addTitle':\n        this.newDomainTitle = value;\n      case 'addText':\n        this.newDomainText = value;\n    }\n  }\n\n  duplicateDomain(id: string) {\n    const index = this.domains.findIndex(domain => domain.id === id);\n    const domainToDuplicate = this.domains[index];\n    const newDomain = {\n      id: `${Date.now()}`, \n      title: domainToDuplicate.title, \n      text: domainToDuplicate.text\n    }\n\n    this.domains.splice(index, 0, newDomain);\n  }\n\n  handleFilter = debounce(function(...args) {\n    this.query = args[0].toLowerCase();\n  }, 500, false)\n\n  detectMobileView() {\n    this.isMobile = this.container.nativeElement.clientWidth <= MOBILE_VIEW;\n    this.isSmallMobile = this.container.nativeElement.clientWidth <= SMALL_MOBILE_VIEW;\n  }\n\n  ngAfterViewInit() {\n    this.detectMobileView();\n  }\n\n  ngOnInit() {\n    this.domains = this.initialDomainsList;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-onboarding-component {\n  padding: 32px;\n  position: relative;\n  color: var(--secondary-color);\n  background: var(--text-color);\n  box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n  border-radius: 20px;\n\n  &__content-text {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 100%;\n  }\n\n  &__main-title {\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-size: 42px;\n    line-height: 130%;\n  }\n\n  &__top {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 28px;\n  }\n\n  &__middle {\n    margin-bottom: 24px;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  &__selected {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 18px;\n    line-height: 100%;\n  }\n\n  &__filter-wrapper {\n    width: calc(100% - 108px - 24px);\n  }\n\n  &__input-title {\n    text-align: left;\n    color: rgba(var(--secondary-color-code), 0.5);\n    margin: 16px 0 8px;\n    line-height: 150%;\n  }\n\n  &__list {\n    display: flex;\n    flex-direction: column;\n    \n    & * {\n      margin-bottom: 23px;\n    }\n  \n    & :last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  &__buttons {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    height: 72px;\n    padding: 0 24px 14px 24px;\n    margin-bottom: 24px;\n    border-bottom: 1px solid var(--asimetric-bg-color);\n\n    &.mobile {\n      padding: 0 5px 14px 5px;\n\n      & > .app-onboarding-component__buttons--left > p {\n        margin-left: 10px;\n        font-size: 14px;\n      }\n    }\n\n    &--left {\n      display: flex;\n      align-items: center;\n\n      & > p {\n        margin-left: 26px;\n      }\n    }\n\n    &--right {\n      width: 100px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n  }\n}\n",
                    "styleUrl": "./onboarding-list.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div \n  #container \n  class=\"app-onboarding-component\" \n  [ngStyle]=\"isSmallMobile && { 'padding': '10px 3px' }\"\n>\n<!-- template for delete modal -->\n  <ng-template #deleteModalContent let-titleActiveDomain=\"titleActiveDomain\">\n    <p class=\"app-onboarding-component__content-text\">Do you really want to delete the <strong>{{titleActiveDomain}}</strong> ?</p>\n  </ng-template>\n<!-- template for edit modal -->\n  <ng-template #editModalContent let-initialValue=\"initialValue\">\n    <app-form-input\n      [placeholderText]=\"''\"\n      [isBold]=\"true\"\n      [initialValue]=\"initialValue\"\n      [name]=\"initialValue\"\n      (changeValuexzParentFunction)=\"setValue($event, 'editTitle')\"\n    >\n    </app-form-input>\n  </ng-template>\n<!-- template for add modal -->\n  <ng-template #addModalContent let-initialValue=\"initialValue\">\n    <p class=\"app-onboarding-component__input-title app-onboarding-component__content-text\">Domain name</p>\n    <app-form-input\n      [placeholderText]=\"'example.com'\"\n      [isBold]=\"true\"\n      [initialValue]=\"initialValue\"\n      [name]=\"initialValue\"\n      (changeValueParentFunction)=\"setValue($event, 'addTitle')\"\n    >\n    </app-form-input>\n    <p class=\"app-onboarding-component__input-title app-onboarding-component__content-text\">Domain</p>\n    <app-form-input\n      [placeholderText]=\"'optiona'\"\n      [isBold]=\"true\"\n      [initialValue]=\"initialValue\"\n      [name]=\"initialValue\"\n      (changeValueParentFunction)=\"setValue($event, 'addText')\"\n    >\n    </app-form-input>\n  </ng-template>\n\n  <div class=\"app-onboarding-component__top\">\n    <p class=\"app-onboarding-component__main-title\" [ngStyle]=\"isMobile && { 'font-size': '32px', 'line-height': '100%' }\">Domains</p>\n    <app-simple-button \n      [classes]=\"'btn-success-asimetric'\"\n      [title]=\"isMobile ? '+' :' Add domain'\"\n      (click)=\"handleAdd()\"\n    >\n    </app-simple-button>\n  </div>\n  <div class=\"app-onboarding-component__middle\">\n    <div class=\"app-onboarding-component__filter-wrapper\">\n      <app-domains-search-input\n        [placeholderText]=\"'example.com'\"\n        [initialValue]=\"''\"\n        (changeValueParentFunction)=\"handleFilter($event)\"\n      >\n      </app-domains-search-input>\n    </div>\n    <app-mutable-light-button [title]=\"'options'\"></app-mutable-light-button>\n  </div>\n  <div \n    [ngClass]=\"{ 'app-onboarding-component__buttons': true, 'mobile': isMobile }\"\n    *ngIf=\"selected.length > 1\"\n  >\n    <div class=\"app-onboarding-component__buttons--left\">\n      <app-checkbox-mutable-gradient\n      [onActive]=\"false\"\n      [isChecked]=\"domains.length === selected.length\"\n      [id]=\"selectAll\"\n      (handleChange)=\"selectAll()\"\n      >\n      </app-checkbox-mutable-gradient>\n      <p *ngIf=\"selected.length\" class=\"app-onboarding-component__selected\">\n        Seletcted {{ selected.length }} domain{{ selected.length > 1 ? 's' : '' }}\n      </p>\n    </div>\n    <div class=\"app-onboarding-component__buttons--right\">\n      <app-domains-svg-button\n        [svgPath]=\"'assets/images/download.svg'\"\n        [borderColor]=\"'#D0DAEB'\"\n        [bgColor]=\"'transparent'\"\n        [bgColorHover]=\"'#D0DAEB'\"\n        [svgColor]=\"'url(#paint0_linear)'\"\n        [isStroke]=\"false\"\n      >\n      </app-domains-svg-button>\n      <app-domains-svg-button\n        [svgPath]=\"'assets/images/basket.svg'\"\n        [borderColor]=\"''\"\n        [bgColor]=\"'rgb(234, 45, 45, 0.1)'\"\n        [bgColorHover]=\"'rgb(234, 45, 45, 0.3)'\"\n        [svgColor]=\"'rgb(234, 45, 45, 1)'\"\n        [isStroke]=\"true\"\n        (click)=\"handleDeleteSeveral()\"\n      >\n      </app-domains-svg-button>\n    </div>\n  </div>\n  <ul class=\"app-onboarding-component__list\">\n    <div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\n      <div class=\"example-box\" *ngFor=\"let domain of domains\" cdkDrag>\n        <li \n          class=\"app-onboarding-component__item\" \n          *ngIf=\"domain.title.toLowerCase().includes(query) || domain.text.toLowerCase().includes(query)\"\n        >\n          <app-onboarding-card\n            [title]=\"domain.title\"\n            [text]=\"domain.text\"\n            [isSelected]=\"checkIsSelected(domain.id)\"\n            (delete)=\"handleDelete($event)\"\n            (edit)=\"handleEdit($event)\"\n            (select)=\"changeSelectedList($event)\"\n            (duplicate)=\"duplicateDomain($event)\"\n            [id]=\"domain.id\"\n          >\n          </app-onboarding-card>\n        </li>\n      </div>\n    </div>\n  </ul>\n  <div *ngIf=\"isModalVisible\">\n    <app-approve-modal\n      [title]=\"modalTitle\"\n      [dangerButtonTitle]=\"modalDangerButtonTitle\"\n      [primaryButtonTitle]=\"modalPrimaryButtonTitle\"\n      (closeModal)=\"closeModal()\"\n      (primaryButtonFunction)=\"modalPrimaryButtonFunction()\"\n      (dangerButtonFunction)=\"modalDangerButtonFunction()\"\n    >\n    <ng-container \n        *ngTemplateOutlet=\"modalComponent;context:ctx\">\n    </ng-container>\n    </app-approve-modal>\n  </div>\n</div>"
        },
        {
            "name": "DomainsSearchInputComponent",
            "id": "component-DomainsSearchInputComponent-cbc2ca56114e3cf48d6a0a7e7dbd4ea8",
            "file": "src/app/pages-components/Domains/Atoms/domains-search-input/domains-search-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-domains-search-input",
            "styleUrls": [
                "./domains-search-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./domains-search-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Math.random()",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "initialValue",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "placeholderText",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "changeValueParentFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChangeValue",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-domains-search-input',\n  templateUrl: './domains-search-input.component.html',\n  styleUrls: ['./domains-search-input.component.scss']\n})\nexport class DomainsSearchInputComponent implements OnInit {\n  @Input() placeholderText: string;\n  @Input() name?: string = '';\n  @Input() initialValue?: string;\n  @Input() id?: number = Math.random();\n\n  @Output() changeValueParentFunction?: EventEmitter<any> = new EventEmitter();\n\n  classes='';\n  value='';\n\n  handleChangeValue(event) {\n   this.changeValueParentFunction.emit(event.target.value);\n  }\n\n  ngOnInit() {\n    if (this.initialValue) {\n      this.value = this.initialValue;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-domains-search {\n  position: relative;\n  width: 100%;\n  \n  &::after {\n    content: '';\n    height: 20px;\n    width: 20px;\n\n    position: absolute;\n    top: 14px;\n    left: 16px;\n    \n    background: url('../../../../../assets/images/Search.png') no-repeat center;\n    background-size: contain;\n    opacity: 0.5;\n  }\n\n  &__input {\n    width: 100%;\n    padding: 15px 16px 16px 53px;\n    height: 48px;\n\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 100%;\n  \n    border: none;\n    border-radius: 8px;\n    background: rgba(var(--secondary-color-code), 0.05);\n    color: var(--secondary-color);\n  \n    &::placeholder {\n      color: rgba(var(--secondary-color-code), 0.5);\n    }\n  \n    &:hover {\n      background: rgba(var(--secondary-color-code), 0.2);\n    }\n  \n    &::placeholder {\n      font-weight: 300;\n    }\n  }\n}",
                    "styleUrl": "./domains-search-input.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-domains-search\">\n  <input \n    class=\"app-domains-search__input\"\n    [placeholder]=\"placeholderText\"\n    type=\"text\"\n    [name]=\"name+''\"\n    [value]=\"value\"\n    (input)=\"handleChangeValue($event)\"\n    [id]=\"id+''\"\n    spellcheck=\"false\"\n  />\n</div>\n"
        },
        {
            "name": "DomainsSimpleButtonComponent",
            "id": "component-DomainsSimpleButtonComponent-9326cc9d4cf1d191ebb875ae0f920d1d",
            "file": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-simple-button",
            "styleUrls": [
                "simpleButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./simpleButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "classes",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "srcPath",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-simple-button',\n  templateUrl: './simpleButton.component.html',\n  styleUrls: ['simpleButton.component.scss'],\n})\n\nexport class DomainsSimpleButtonComponent {\n  @Input() title: string;\n  @Input() classes: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n  @Input() srcPath?: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-danger-big {\n  color: var(--danger-color);\n  background: inherit;\n  outline: none;\n  border: 1px solid rgba(var(--danger-color-code), 0.2);\n\n  text-transform: uppercase;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 12px;\n\n  display: flex;\n  align-items: center;\n  height: 46px;\n  padding: 17px 37px;\n\n  transition: var(--transition);\n  border-radius: 8px;\n\n  &:hover {\n    cursor: pointer;\n    background: rgba(var(--danger-color-code), 0.3);\n  }\n\n  &:active {\n    background: rgba(var(--danger-color-code), 0.5);\n  }\n}\n\n.btn-success-big {\n  position: relative;\n  z-index: 2;\n\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  text-transform: uppercase;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 12px;\n\n  display: flex;\n  align-items: center;\n  height: 46px;\n  padding: 17px 37px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 8px;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 8px;\n    opacity: 0;\n  }\n\n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n\n  &:active {\n    &::before {\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 0;\n    }\n  }\n}\n\n.btn-success-asimetric {\n  position: relative;\n  z-index: 2;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  border-radius: 20px 5px;\n  height: 52px;\n  padding: 18px 41px 18px 44px;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 16px;\n  text-transform: uppercase;\n  line-height: 100%;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 20px 5px;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 20px 5px;\n    opacity: 0;\n  }\n  \n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n  \n  &:active {\n    &::before {\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 0;\n    }\n  }\n}",
                    "styleUrl": "simpleButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor, 'color': color }\"\n>\n  {{ title }}\n  <img class=\"app-button-success__image\" *ngIf=\"srcPath\" [src]=\"srcPath\" [alt]=\"'title'\">\n</button>\n"
        },
        {
            "name": "DomainsSvgButtonComponent",
            "id": "component-DomainsSvgButtonComponent-71546928e65acc3caea4439f0bad5a8c",
            "file": "src/app/pages-components/Domains/Atoms/buttons/domains-svg-button/domains-svg-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-domains-svg-button",
            "styleUrls": [
                "./domains-svg-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./domains-svg-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "bgColorHover",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "borderColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "isStroke",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "svgColor",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "svgPath",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "background",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "border",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "changeToActiveColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "changeToStaticColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-domains-svg-button',\n  templateUrl: './domains-svg-button.component.html',\n  styleUrls: ['./domains-svg-button.component.scss']\n})\n\nexport class DomainsSvgButtonComponent implements OnInit {\n  @Input() svgPath: string;\n  @Input() borderColor: string;\n  @Input() bgColor: string;\n  @Input() bgColorHover: string;\n  @Input() svgColor: string;\n  @Input() isStroke: boolean;\n\n  background = '';\n  border = '';\n\n  changeToActiveColor = () => {\n    this.border = this.borderColor !== '' ? this.borderColor : 'transparent';\n    this.background = this.bgColorHover;\n  }\n\n  changeToStaticColor = () => {\n    this.border = this.borderColor !== '' ? this.borderColor : 'transparent';\n    this.background = this.bgColor;\n  }\n\n  ngOnInit(): void {\n    this.background = this.bgColor;\n    this.border = this.borderColor !== '' ? this.borderColor : 'transparent';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".domains-svg-button {\n  width: 44px;\n  height: 44px;\n  border-radius: 8px;\n  transition: 0.3s;\n}",
                    "styleUrl": "./domains-svg-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button \n  class=\"domains-svg-button\"\n  [ngStyle]=\"{ 'background-color': background, 'border': '1px solid '+border }\"\n  (mousedown)=\"changeToStaticColor()\"\n  (mouseup)=\"changeToActiveColor()\"\n  (mouseenter)=\"changeToActiveColor()\"\n  (mouseleave)=\"changeToStaticColor()\"\n>\n  <svg-icon \n    [src]=\"svgPath\"\n    [svgStyle]=\"isStroke ? { 'stroke': svgColor } : { 'fill': svgColor }\"\n  >\n  </svg-icon>\n</button>\n\n"
        },
        {
            "name": "formInputComponent",
            "id": "component-formInputComponent-aea4cbe541adae8d0efcb2689a7a0784",
            "file": "src/app/atoms/inputs/formInput/formInput.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-input",
            "styleUrls": [
                "formInput.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./formInput.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Math.random()",
                    "line": 14,
                    "type": "number"
                },
                {
                    "name": "initialValue",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "isBold",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "placeholderText",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "changeValueParentFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 16,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "value",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChangeValue",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-form-input',\n  templateUrl: './formInput.component.html',\n  styleUrls: ['formInput.component.scss'],\n})\n\nexport class formInputComponent implements OnInit {\n  @Input() placeholderText: string;\n  @Input() name?: string = '';\n  @Input() initialValue?: string;\n  @Input() isBold?: string;\n  @Input() id?: number = Math.random();\n\n  @Output() changeValueParentFunction?: EventEmitter<any> = new EventEmitter();\n  value='';\n\n  handleChangeValue(event) {\n   this.changeValueParentFunction.emit(event.target.value)\n  }\n\n  ngOnInit() {\n    if (this.initialValue) {\n      this.value = this.initialValue;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-input-field {\n  width: 100%;\n  padding: 15px 16px 11px 16px;\n  height: 48px;\n\n  border: none;\n  border-radius: 8px;\n  background: rgba(var(--secondary-color-code), 0.05);\n  color: var(--secondary-color);\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 100%;\n\n  &.bold {\n    font-weight: 600;\n  }\n\n  &::placeholder {\n    color: rgba(var(--secondary-color-code), 0.5);\n  }\n\n  &:hover {\n    background: rgba(var(--secondary-color-code), 0.2);\n  }\n}",
                    "styleUrl": "formInput.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<input \n  [ngClass]=\"{ 'app-form-input-field': true, 'bold': isBold }\"\n  [placeholder]=\"placeholderText\"\n  type=\"text\"\n  [name]=\"name\"\n  [value]=\"value\"\n  (input)=\"handleChangeValue($event)\"\n  [id]=\"id\"\n>\n"
        },
        {
            "name": "FormScreenFifthComponent",
            "id": "component-FormScreenFifthComponent-b986dea163c7700978cb484a339248e7",
            "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-fifth",
            "styleUrls": [
                "./form-screen-fifth.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-fifth.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modules",
                    "defaultValue": "[\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n    {\n      title: \"GDPR, eprivacy2\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand2\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia2\",\n      text: \"Europe \",\n    },\n  ]",
                    "type": "Module[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "selectedModules",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "selectModule",
                    "args": [
                        {
                            "name": "title",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string\n}\n\n@Component({\n  selector: 'app-form-screen-fifth',\n  templateUrl: './form-screen-fifth.component.html',\n  styleUrls: ['./form-screen-fifth.component.scss']\n})\n\nexport class FormScreenFifthComponent {\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n    {\n      title: \"GDPR, eprivacy2\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand2\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia2\",\n      text: \"Europe \",\n    },\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-screen-fifth {\n  display: flex;\n  justify-content: space-between;\n  align-items: center; \n  width: 100%;\n\n  &__main-title {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    color: var(--secondary-color);\n    margin-bottom: 43px;\n  }\n\n  &__list {\n    width: 32%;\n  }\n\n  &__item {\n    width: 100%;\n    margin-bottom: 12px;\n  }\n}\n\n\n@media screen and (max-width: 600px) {\n  .app-form-screen-fifth {\n    flex-direction: column;\n  \n    &__list {\n      width: 100%;\n    }\n  \n    &__item {\n      width: 100%;\n      margin-bottom: 8px;;\n    }\n  }\n}",
                    "styleUrl": "./form-screen-fifth.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"app-form-screen-fifth__main-title\">Select your compliance modules</h3>\n<div class=\"app-form-screen-fifth\">\n  <ul class=\"app-form-screen-fifth__list\">\n    <li \n      class=\"app-form-screen-fifth__item\"\n      *ngFor=\"let module of modules.slice(0, 3); let i = index\" \n    >\n      <app-large-button\n        (click)=\"selectModule(module.title)\"\n        [title]=\"module.title\"\n        [text]=\"module.text\"\n        [isActive]=\"selectedModules.includes(module.title)\"\n      >\n      </app-large-button>\n    </li>\n  </ul>\n  <ul class=\"app-form-screen-fifth__list\">\n    <li \n      class=\"app-form-screen-fifth__item\"\n      *ngFor=\"let module of modules.slice(3, 6); let i = index\" \n    >\n      <app-large-button\n        (click)=\"selectModule(module.title)\"\n        [title]=\"module.title\"\n        [text]=\"module.text\"\n        [isActive]=\"selectedModules.includes(module.title)\"\n      >\n      </app-large-button>\n    </li>\n  </ul>\n  <ul class=\"app-form-screen-fifth__list\">\n    <li \n      class=\"app-form-screen-fifth__item\"\n      *ngFor=\"let module of modules.slice(6); let i = index\" \n    >\n      <app-large-button\n        (click)=\"selectModule(module.title)\"\n        [title]=\"module.title\"\n        [text]=\"module.text\"\n        [isActive]=\"selectedModules.includes(module.title)\"\n      >\n      </app-large-button>\n    </li>\n  </ul>\n</div>\n\n\n"
        },
        {
            "name": "FormScreenFirstComponent",
            "id": "component-FormScreenFirstComponent-838dc7e659ea49bf6199eea10aab0b20",
            "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-first",
            "styleUrls": [
                "./form-screen-first.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-first.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "handleInputChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-form-screen-first',\n  templateUrl: './form-screen-first.component.html',\n  styleUrls: ['./form-screen-first.component.scss'],\n})\n\nexport class FormScreenFirstComponent {\n  handleInputChange = (value) => console.log('changeValueParentFunction works', value)\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-screen-first {\n  &__container {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    margin-top: 32px;\n  }\n\n  &__main-title {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    color: var(--secondary-color);\n    margin-bottom: 43px;\n  }\n\n  &__column {\n    width: 48%;\n\n    ::ng-deep {\n      .app-form-input-field, .ng-select {\n        margin-bottom: 32px;\n      }\n    }\n  }\n}\n\n@media screen and (max-width: 600px) {\n  .app-form-screen-first {\n    &__container {\n      flex-direction: column;\n    }\n\n    &__column {\n      width: 99%;\n\n      ::ng-deep {\n        .app-form-input-field, .ng-select {\n          margin-bottom: 5px;\n        }\n      }\n    }\n  } \n}\n",
                    "styleUrl": "./form-screen-first.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"app-form-screen-first__main-title\">Create your account</h3>\n<div class=\"app-form-screen-first__container\"> \n  <div class=\"app-form-screen-first__column\">   \n    <app-form-input\n      [placeholderText]=\"'First Name'\"\n      (changeValueParentFunction)=\"handleInputChange($event)\"\n    > \n    </app-form-input> \n    <app-form-input\n      [placeholderText]=\"'Email'\"\n      (changeValueParentFunction)=\"handleInputChange($event)\"\n    > \n    </app-form-input>    \n    <app-form-input\n      [placeholderText]=\"'Password'\"\n      (changeValueParentFunction)=\"handleInputChange($event)\"\n    > \n    </app-form-input>        \n  </div>\n  <div class=\"app-form-screen-first__column\">   \n    <app-form-input\n      [placeholderText]=\"'Last Name'\"\n      (changeValueParentFunction)=\"handleInputChange($event)\"\n    > \n    </app-form-input> \n    <app-select-input-simple\n      [initialValue]=\"'This account is for:'\"\n      [items]=\"['My current company', 'My clients company']\"\n    >\n    </app-select-input-simple>   \n    <app-form-input\n      [placeholderText]=\"'Confirm Password'\"\n      (changeValueParentFunction)=\"handleInputChange($event)\"\n    > \n    </app-form-input> \n  </div>\n</div>\n"
        },
        {
            "name": "FormScreenFourthComponent",
            "id": "component-FormScreenFourthComponent-aca7099c3a068b1af5bdf9dc534fb0c5",
            "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-fourth",
            "styleUrls": [
                "./form-screen-fourth.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-fourth.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modules",
                    "defaultValue": "[\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n  ]",
                    "type": "Module[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "selectedModules",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "selectModule",
                    "args": [
                        {
                            "name": "title",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string\n}\n\n@Component({\n  selector: 'app-form-screen-fourth',\n  templateUrl: './form-screen-fourth.component.html',\n  styleUrls: ['./form-screen-fourth.component.scss']\n})\nexport class FormScreenFourthComponent {\n\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-screen-fourth {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n\n  &__list {\n    width: 48%;\n  }\n\n  &__main-title {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    color: var(--secondary-color);\n    margin-bottom: 43px;\n  }\n\n  &__item {\n    width: 100%;\n    margin-bottom: 16px;\n  }\n}\n\n@media screen and (max-width: 600px) {\n  .app-form-screen-fourth {\n    flex-direction: column;\n  \n    &__list {\n      width: 100%;\n    }\n  \n    &__item {\n      width: 100%;\n      margin-bottom: 8px;;\n    }\n  }\n}",
                    "styleUrl": "./form-screen-fourth.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"app-form-screen-fourth__main-title\">Select your compliance modules</h3>\n<div class=\"app-form-screen-fourth\">\n  <ul class=\"app-form-screen-fourth__list\">\n    <li \n      class=\"app-form-screen-fourth__item\"\n      *ngFor=\"let module of modules.slice(0, modules.length/2); let i = index\" \n    >\n      <app-large-button\n        (click)=\"selectModule(module.title)\"\n        [title]=\"module.title\"\n        [text]=\"module.text\"\n        [isActive]=\"selectedModules.includes(module.title)\"\n      >\n      </app-large-button>\n    </li>\n  </ul>\n  <ul class=\"app-form-screen-fourth__list\">\n    <li \n      class=\"app-form-screen-fourth__item\"\n      *ngFor=\"let module of modules.slice(modules.length/2); let i = index\" \n    >\n      <app-large-button\n        (click)=\"selectModule(module.title)\"\n        [title]=\"module.title\"\n        [text]=\"module.text\"\n        [isActive]=\"selectedModules.includes(module.title)\"\n      >\n      </app-large-button>\n    </li>\n  </ul>\n</div>\n\n"
        },
        {
            "name": "FormScreenSecondComponent",
            "id": "component-FormScreenSecondComponent-fa52214a28818abb3be0bdc0695f94b7",
            "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-second",
            "styleUrls": [
                "./form-screen-second.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-second.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "handleInputChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-form-screen-second',\n  templateUrl: './form-screen-second.component.html',\n  styleUrls: ['./form-screen-second.component.scss']\n})\n\nexport class FormScreenSecondComponent {\n  handleInputChange = (value) => console.log('changeValueParentFunction works', value)\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-screen-second {\n  &__main-title {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    color: var(--secondary-color);\n    margin-bottom: 22px;\n  }\n\n  &__text {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 18px;\n    color: rgba(var(--secondary-color-code), 0.75);\n    line-height: 100%;\n    margin-bottom: 40px;\n  }\n}\n",
                    "styleUrl": "./form-screen-second.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"app-form-screen-second__main-title\">Add your first domain</h3>\n<p class=\"app-form-screen-second__text\">You can add more domains inside the app</p>\n<app-form-input\n  [placeholderText]=\"'yourwebsite.com'\"\n  (changeValueParentFunction)=\"handleInputChange($event)\"\n> \n</app-form-input>"
        },
        {
            "name": "FormScreenThirdComponent",
            "id": "component-FormScreenThirdComponent-ef6a13b4bda2e504ba067fb46b37471b",
            "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-third",
            "styleUrls": [
                "./form-screen-third.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-third.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modules",
                    "defaultValue": "[\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n      src: \"assets/images/flags/euro.png\"\n    },\n    {\n      title: \"CCPA\",\n      text: \"California\",\n      src: \"assets/images/flags/ccpa.png\"\n    },\n    {\n      title: \"LGPD\",\n      text: \"Brasil \",\n      src: \"assets/images/flags/lgpd.png\"\n    }\n  ]",
                    "type": "Module[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedModules",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "selectModule",
                    "args": [
                        {
                            "name": "title",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string,\n  src: string\n}\n\n@Component({\n  selector: 'app-form-screen-third',\n  templateUrl: './form-screen-third.component.html',\n  styleUrls: ['./form-screen-third.component.scss'],\n})\n\nexport class FormScreenThirdComponent {\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n      src: \"assets/images/flags/euro.png\"\n    },\n    {\n      title: \"CCPA\",\n      text: \"California\",\n      src: \"assets/images/flags/ccpa.png\"\n    },\n    {\n      title: \"LGPD\",\n      text: \"Brasil \",\n      src: \"assets/images/flags/lgpd.png\"\n    }\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-screen-third {\n  &__container {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    margin-top: 56px;\n  }\n\n  &__main-title {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    color: var(--secondary-color);\n    margin-bottom: 22px;\n  }\n}\n\n@media screen and (max-width: 600px) {\n  .app-form-screen-third {\n    &__container {\n      flex-direction: column;\n    }\n\n    &__item {\n      ::ng-deep {\n        .app-card {\n          margin-bottom: 8px;\n        }\n      }\n    }\n  }\n}",
                    "styleUrl": "./form-screen-third.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"app-form-screen-third__main-title\">Select your compliance modules</h3>\n<ul class=\"app-form-screen-third__container\">\n  <li \n    class=\"app-form-screen-third__item\"\n    *ngFor=\"let module of modules; let i = index\" \n  >\n    <app-card\n      (click)=\"selectModule(module.title)\"\n      [title]=\"module.title\"\n      [text]=\"module.text\"\n      [src]=\"module.src\"\n      [isActive]=\"selectedModules.includes(module.title)\"\n    >\n    </app-card>\n  </li>\n</ul>\n"
        },
        {
            "name": "GradientBorderContainerComponent",
            "id": "component-GradientBorderContainerComponent-670feab9458b23432899c6985c3c99dc",
            "file": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gradient-border-container",
            "styleUrls": [
                "./gradient-border-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gradient-border-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "contentBgColor",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "height",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "isSelected",
                    "line": 9,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "color",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "DEFAULT_BG_COLOR",
                    "defaultValue": "'#EAEDF2'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "setInitialValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gradient-border-container',\n  templateUrl: './gradient-border-container.component.html',\n  styleUrls: ['./gradient-border-container.component.scss']\n})\nexport class GradientBorderContainerComponent implements OnInit, OnChanges {\n  @Input() isSelected: boolean;\n  @Input() contentBgColor?: string;\n  @Input() height: number;\n\n  DEFAULT_BG_COLOR = '#EAEDF2';\n  classes = '';\n  color = '';\n\n  setInitialValues() {\n    this.classes = this.isSelected ? 'app-container-gradient active' : 'app-container-gradient';\n    this.color = this.contentBgColor ? this.contentBgColor : this.DEFAULT_BG_COLOR;\n  }\n\n  ngOnInit(): void {\n    this.setInitialValues()\n  }\n\n  ngOnChanges() {\n    this.setInitialValues()\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-container-gradient {\n  position: relative;\n  padding: 2px;\n  width: 147px;\n  height: 70px;\n  border-radius: 8px;\n  transition: 0.3s;\n\n  &:hover {\n    cursor: pointer;\n    background: var(--success-grad-light)!important;\n  }\n\n  &.active {\n    background: var(--success-grad-light)!important;\n\n          \n    &::after {\n      content: \"\";\n      position: absolute;\n      top: 8px;\n      right: 8px;\n\n      width: 19px;\n      height: 19px;\n\n      background: var(--success-grad-light);\n      border-radius: 50%;\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      z-index: 2;\n\n      box-sizing: border-box;\n      width: 19px;\n      height: 19px;\n      border-radius: 50%;\n\n      background: no-repeat center url('../../../../assets/images/checkbox.svg');\n    }\n  }\n\n  &__content {\n    width: 100%;\n    height: 100%;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n}",
                    "styleUrl": "./gradient-border-container.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div [ngClass]=\"classes\" [ngStyle]=\"{ 'background': contentBgColor, 'height': height+'px' }\">\n  <div class=\"app-container-gradient__content\" [ngStyle]=\"{ 'background-color': contentBgColor }\">\n    <ng-content></ng-content>\n  </div>\n</div>\n"
        },
        {
            "name": "gradientButtonComponent",
            "id": "component-gradientButtonComponent-0ecee0a648eec49e6ac82b8c9fb88dcf",
            "file": "src/app/atoms/buttons/gradientButton/gradientButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gradient-button",
            "styleUrls": [
                "gradientButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gradientButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-gradient-button',\n  templateUrl: './gradientButton.component.html',\n  styleUrls: ['gradientButton.component.scss'],\n})\n\nexport class gradientButtonComponent  {\n  @Input() title: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-grad {\n  background: var(--higlited-grad-light);\n  border: none;\n  color: var(--text-color);\n  \n  display: flex;\n  align-items: center;\n\n  border-radius: 20px 5px;\n  height: 52px;\n  padding: 18px 41px 18px 44px;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 16px;\n  text-transform: uppercase;\n  line-height: 100%;\n\n  &__img {\n    margin-left: 27px;\n  }\n\n  &:hover {\n    background: var(--highlited-grad-dark);\n  }\n\n  &:active {\n    background: var(--higlited-grad-light);\n  }\n}\n",
                    "styleUrl": "gradientButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button\n  class=\"btn-grad\"\n>\n  <p>\n    {{ title }}\n    <img src='assets/images/next.svg' alt=\"arrow\"  class=\"btn-grad__img\"/>\n  </p>\n</button>"
        },
        {
            "name": "GradientTextComponent",
            "id": "component-GradientTextComponent-fbc5aaa71bd1ac7562b0200f5b154fba",
            "file": "src/app/atoms/text/gradient-text/gradient-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gradient-text",
            "styleUrls": [
                "./gradient-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gradient-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-gradient-text',\n  templateUrl: './gradient-text.component.html',\n  styleUrls: ['./gradient-text.component.scss']\n})\n\nexport class GradientTextComponent {\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-gradient-text {\n  background: var(--success-grad-light);\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  font-family: 'Gramatica Bold', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  text-transform: uppercase;\n  font-size: 16px;\n  line-height: 100%;\n}",
                    "styleUrl": "./gradient-text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p class='app-gradient-text'>\n  {{ title }}\n</p>\n"
        },
        {
            "name": "IconContainerComponent",
            "id": "component-IconContainerComponent-a4975d8d2274a6b68c4a0bd0919df590",
            "file": "src/app/atoms/iconContainer/iconContainer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-container",
            "styleUrls": [
                "iconContainer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./iconContainer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-icon-container',\n  templateUrl: './iconContainer.component.html',\n  styleUrls: ['iconContainer.component.scss'],\n})\n\nexport class IconContainerComponent {\n  @Input() backgroundColor: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".icons-container {\n  width: 100%;\n\n  &-box {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    align-items: center;\n    opacity: 0.3;\n\n    & > img {\n      max-width: 80%;\n    }\n  }\n}",
                    "styleUrl": "iconContainer.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div \n  [style.backgroundColor]=\"backgroundColor\"\n  class=\"icons-container\"\n>\n  <div class=\"icons-container-box\">\n    <img src=\"assets/images/companies/logo1.png\" alt=\"company logo\">\n    <img src=\"assets/images/companies/logo2.png\" alt=\"company logo\">\n    <img src=\"assets/images/companies/logo3.png\" alt=\"company logo\">\n  </div>\n  <div class=\"icons-container-box\">\n    <img src=\"assets/images/companies/logo4.png\" alt=\"company logo\">\n    <img src=\"assets/images/companies/logo5.png\" alt=\"company logo\">\n    <img src=\"assets/images/companies/logo6.png\" alt=\"company logo\">\n  </div>\n</div>\n"
        },
        {
            "name": "IconLinksComponent",
            "id": "component-IconLinksComponent-4311d2f7f0d021354fa2531e0614f363",
            "file": "src/app/atoms/navLink/icon-links/icon-links.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-links",
            "styleUrls": [
                "./icon-links.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon-links.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isActive",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "svgPath",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fillColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "onHover",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                },
                {
                    "name": "onLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-icon-links',\n  templateUrl: './icon-links.component.html',\n  styleUrls: ['./icon-links.component.scss']\n})\n\nexport class IconLinksComponent implements OnChanges {\n  @Input() isActive: boolean;\n  @Input() title: string;\n  @Input() svgPath: string;\n  \n  fillColor: string;\n\n  onHover() {\n    if (!this.isActive) {\n      this.fillColor = 'rgba(1, 25, 73, 1)';\n    }\n  }\n\n  onLeave() {\n    if (!this.isActive) {\n      this.fillColor = 'rgba(1, 25, 73, 0.5)';\n    }\n  }\n\n  ngOnChanges(): void {\n    this.fillColor = this.isActive ? '#24B04B' : 'rgba(1, 25, 73, 0.5)'\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-icon-link {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2px;\n\n  text-transform: capitalize;\n  border: none;\n  background: transparent;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 10px;\n  line-height: 100%;\n\n  &__title {\n    margin-top: 6px;\n  }\n}",
                    "styleUrl": "./icon-links.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<a class=\"app-icon-link\"\n  href=\"#\"\n  (mouseenter)=\"onHover()\"\n  (mouseleave)=\"onLeave()\"\n>\n  <svg-icon \n    [src]=\"svgPath\"\n    [svgStyle]=\"{'fill':fillColor }\"\n  >\n  </svg-icon>\n  <p class=\"app-icon-link__title\" [ngStyle]=\"{ 'color': fillColor }\">\n    {{ title }}\n  </p>     \n</a>\n"
        },
        {
            "name": "infoButtonComponent",
            "id": "component-infoButtonComponent-f3fbf7f078d9b6d48f423c6ceeb2ec0b",
            "file": "src/app/atoms/buttons/infoButton/infoButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-info-button",
            "styleUrls": [
                "infoButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./infoButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-button',\n  templateUrl: './infoButton.component.html',\n  styleUrls: ['infoButton.component.scss'],\n})\n\nexport class infoButtonComponent {\n  @Input() title: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-info {\n  padding: 9px 15px 9px 15px;\n  height: 40px;\n  border: none;\n  color: var(--info-color);\n  background-color: rgba(var(--info-color-code), 0.05);  \n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: var(--transition);\n  border-radius: 8px;\n  \n  text-transform: capitalize;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 100%;\n\n  & > img {\n    margin-right: 15px;\n  }\n\n  &:hover {\n    background-color: rgba(var(--info-color-code), 0.3);  \n  }\n\n  &:active {\n    background-color: transparent; \n  }\n}\n",
                    "styleUrl": "infoButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button \n  class=\"btn-info\"\n  [ngStyle]=\"{ 'background': backgroundColor, 'color': color }\"\n>\n  <img src=\"assets/images/support.png\" alt=\"support button logo\">\n  {{ title }}\n</button>\n"
        },
        {
            "name": "largeButtonComponent",
            "id": "component-largeButtonComponent-dc6ba3efdb7d10c63c317d3f7a6cafb0",
            "file": "src/app/atoms/buttons/largeButton/largeButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-large-button",
            "styleUrls": [
                "largeButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./largeButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "isActive",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "text",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-large-button',\n  templateUrl: './largeButton.component.html',\n  styleUrls: ['largeButton.component.scss'],\n})\n\nexport class largeButtonComponent implements OnChanges {\n  @Input() title: string;\n  @Input() text: string;\n  @Input() isActive: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n\n  ngOnChanges() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-large {\n  position: relative;\n  width: 100%;\n  z-index: 2;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: var(--transition);\n  border-radius: 8px;\n  \n  color: var(--secondary-color);\n  background: transparent;\n  border: none;\n\n  display: flex;\n  justify-content: center;\n\n  height: 53px;\n  padding: 9px 10px;\n\n  &.active {\n    background: var(--success-grad-light);\n    color: var(--text-color);\n  }\n\n  &__text {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 14px;\n    line-height: 100%;\n    margin-top: 2px;\n  }\n\n  &__title {\n    text-transform: uppercase;\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-style: normal;\n    font-weight: 900;\n    font-size: 14px;\n    line-height: 100%;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: rgba(var(--secondary-color-code), 0.05);\n    border-radius: 8px;\n    transition: 0.3s;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-light);\n    border-radius: 8px;\n    transition: 0.3s;\n    opacity: 0;\n  }\n\n  &:hover {\n    &::before {\n      background: rgba(var(--secondary-color-code), 0.1);\n    }\n  }\n\n  &:active {\n    color: var(--text-color);\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n}",
                    "styleUrl": "largeButton.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<button \n  [ngClass]=\"{'btn-large': true, 'active': isActive }\"\n  [ngStyle]=\"{ 'background': backgroundColor, 'color': color }\"\n>\n  <span>\n    <p class=\"btn-large__title\">{{ title }}</p>\n    <p class=\"btn-large__text\">{{ text }}</p>\n  </span>\n</button>"
        },
        {
            "name": "LightAssimetricButtonComponent",
            "id": "component-LightAssimetricButtonComponent-da7446dec63842a4c62951a5bc5018d2",
            "file": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-light-assimetric-button",
            "styleUrls": [
                "./light-assimetric-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./light-assimetric-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "srcPath",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-light-assimetric-button',\n  templateUrl: './light-assimetric-button.component.html',\n  styleUrls: ['./light-assimetric-button.component.scss']\n})\n\nexport class LightAssimetricButtonComponent {\n  @Input() srcPath: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-button-light-assimetric {\n  padding: 14px 20px;\n  background: var(--asimetric-bg-color);\n  border-radius: 20px 5px;\n  border: none;\n  transition: 0.3s;\n\n  &:hover {\n    background-color: var(--asimetric-bg-color-dark);\n  }\n\n  &:active {\n    background-color: var(--secondary-color-dark);\n  }\n}",
                    "styleUrl": "./light-assimetric-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class=\"app-button-light-assimetric\">\n  <img [src]=\"srcPath\">\n</button>"
        },
        {
            "name": "lightButtonComponent",
            "id": "component-lightButtonComponent-76ce0b45e3b5ce26cf1eedce54f0ed45",
            "file": "src/app/atoms/buttons/lightButton/lightButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-light-button",
            "styleUrls": [
                "lightButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lightButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "srcPath",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-light-button',\n  templateUrl: './lightButton.component.html',\n  styleUrls: ['lightButton.component.scss'],\n})\n\nexport class lightButtonComponent {\n  @Input() backgroundColor: string;\n  @Input() srcPath: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-light {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 48px;\n  height: 48px;\n  padding: 16px;\n  border: none;\n  background: var(--input-bg-color);\n  transition: var(--transition);\n  border-radius: 8px;\n\n  &:hover {\n    background: var(--light-btn-hover);\n  }\n\n  &:active {\n    background: var(--light-btn-hover);\n  }\n}",
                    "styleUrl": "lightButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button \n  class=\"btn-light\"\n  [ngStyle]=\"{ 'background': backgroundColor }\"\n>\n  <img [src]=\"srcPath\">\n</button>\n\n"
        },
        {
            "name": "LinearChartComponent",
            "id": "component-LinearChartComponent-507b7474f00ee50142e12cd3b8f0c1ee",
            "file": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-linear-chart",
            "styleUrls": [
                "./linear-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./linear-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "categories",
                    "line": 16,
                    "type": "string[]"
                },
                {
                    "name": "colors",
                    "line": 17,
                    "type": "string[]"
                },
                {
                    "name": "date",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "maxValue",
                    "line": 18,
                    "type": "number"
                },
                {
                    "name": "series",
                    "line": 15,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOptions",
                    "defaultValue": "{\n    title: {\n      text: '',\n      style: { fontSize:  '0px' },\n    },\n    tooltip: {\n      shared: false,\n      custom: function({ series, dataPointIndex, seriesIndex, w }) {\n        const total = w.globals.seriesTotals[seriesIndex];\n        const texts = [\n          { text: 'totlal', value: `${Math.round(series[0][dataPointIndex] * 100 / total)} %`},\n          { text: 'consent', value: series[0][dataPointIndex] + series[1][dataPointIndex] },\n          { text: 'opt-in', value: series[0][dataPointIndex] },\n          { text: 'opt-out', value: series[1][dataPointIndex] },\n        ]\n        const liClass = 'card-report-status__item';\n        const spanClass = 'card-report-status__value';\n        return (\n          `<div class=\"card-report-status\">\n            <p class=\"card-report-status__title\">${w.config.title.text}</p>\n            <ul class=\"card-report-status__list\">\n              <li class=${liClass}><span class=${spanClass}>${texts[0].value}</span> ${texts[0].text}</li>\n              <li class=${liClass}><span class=${spanClass}>${texts[1].value}</span> ${texts[1].text}</li>\n              <li class=${liClass}><span class=${spanClass}>${texts[2].value}</span> ${texts[2].text}</li>\n              <li class=${liClass}><span class=${spanClass}>${texts[3].value}</span> ${texts[3].text}</li>\n            </ul>\n          </div>`\n        );\n      }\n    },\n    chart: {\n      height: 350,\n      type: \"line\",\n      toolbar: { show: false },\n    },\n    dataLabels: { enabled: false },\n    stroke: {\n      curve: \"smooth\",\n      width: 1.45,\n    },\n    grid: {\n      borderColor: BORDER_COLOR,\n      position: 'back',\n      xaxis: { lines: { show: true }},\n      yaxis: { lines: { show: true }},\n    },\n    markers: {\n      size: 0,\n      colors: MARKER_COLOR,\n      shape: \"circle\",\n      hover: {\n        size: 8,\n      }\n    },\n    xaxis: {\n      categories: [],\n      crosshairs: { show: false },\n      tooltip: { enabled: false },\n      labels: {\n        style: {\n          colors: AXIS_LABEL_COLOR,\n          fontSize: \"14px\",\n          fontFamily: \"'Gramatica Bold', 'open-sans'\"\n        }\n      }\n    },\n    yaxis: {\n      min: 0,\n      max: 0,\n      tickAmount: 4,\n      labels: {\n        style: {\n          colors: [AXIS_LABEL_COLOR],\n          fontSize: \"14px\",\n          fontFamily: \"'Gramatica Bold', 'open-sans'\"\n        }\n      }\n    },\n    legend: {\n      show: true,\n      position: 'top',\n      horizontalAlign: 'left', \n      fontSize: '12px',\n      fontFamily: \"'Gramatica Bold', 'open-sans'\",\n      labels: { colors: LEGEND_LABEL_COLOR },\n      onItemClick: { toggleDataSeries: false },\n      onItemHover: { highlightDataSeries: true },\n    }\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "updateChartOption",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 111
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit } from '@angular/core';\n\nconst BORDER_COLOR = 'rgba(1, 25, 73, 0.1)';\nconst MARKER_COLOR = 'rgb(1, 25, 73)';\nconst AXIS_LABEL_COLOR = 'rgba(1, 25, 73, 0.3)';\nconst LEGEND_LABEL_COLOR = 'rgba(1, 25, 73, 0.75)';\n\n@Component({\n  selector: 'app-linear-chart',\n  templateUrl: './linear-chart.component.html',\n  styleUrls: ['./linear-chart.component.scss'],\n})\n\nexport class LinearChartComponent  implements OnChanges, OnInit{\n  @Input() series: string[];\n  @Input() categories: string[];\n  @Input() colors: string[];\n  @Input() maxValue: number;\n  @Input() date: string;\n\n  chartOptions = {\n    title: {\n      text: '',\n      style: { fontSize:  '0px' },\n    },\n    tooltip: {\n      shared: false,\n      custom: function({ series, dataPointIndex, seriesIndex, w }) {\n        const total = w.globals.seriesTotals[seriesIndex];\n        const texts = [\n          { text: 'totlal', value: `${Math.round(series[0][dataPointIndex] * 100 / total)} %`},\n          { text: 'consent', value: series[0][dataPointIndex] + series[1][dataPointIndex] },\n          { text: 'opt-in', value: series[0][dataPointIndex] },\n          { text: 'opt-out', value: series[1][dataPointIndex] },\n        ]\n        const liClass = 'card-report-status__item';\n        const spanClass = 'card-report-status__value';\n        return (\n          `<div class=\"card-report-status\">\n            <p class=\"card-report-status__title\">${w.config.title.text}</p>\n            <ul class=\"card-report-status__list\">\n              <li class=${liClass}><span class=${spanClass}>${texts[0].value}</span> ${texts[0].text}</li>\n              <li class=${liClass}><span class=${spanClass}>${texts[1].value}</span> ${texts[1].text}</li>\n              <li class=${liClass}><span class=${spanClass}>${texts[2].value}</span> ${texts[2].text}</li>\n              <li class=${liClass}><span class=${spanClass}>${texts[3].value}</span> ${texts[3].text}</li>\n            </ul>\n          </div>`\n        );\n      }\n    },\n    chart: {\n      height: 350,\n      type: \"line\",\n      toolbar: { show: false },\n    },\n    dataLabels: { enabled: false },\n    stroke: {\n      curve: \"smooth\",\n      width: 1.45,\n    },\n    grid: {\n      borderColor: BORDER_COLOR,\n      position: 'back',\n      xaxis: { lines: { show: true }},\n      yaxis: { lines: { show: true }},\n    },\n    markers: {\n      size: 0,\n      colors: MARKER_COLOR,\n      shape: \"circle\",\n      hover: {\n        size: 8,\n      }\n    },\n    xaxis: {\n      categories: [],\n      crosshairs: { show: false },\n      tooltip: { enabled: false },\n      labels: {\n        style: {\n          colors: AXIS_LABEL_COLOR,\n          fontSize: \"14px\",\n          fontFamily: \"'Gramatica Bold', 'open-sans'\"\n        }\n      }\n    },\n    yaxis: {\n      min: 0,\n      max: 0,\n      tickAmount: 4,\n      labels: {\n        style: {\n          colors: [AXIS_LABEL_COLOR],\n          fontSize: \"14px\",\n          fontFamily: \"'Gramatica Bold', 'open-sans'\"\n        }\n      }\n    },\n    legend: {\n      show: true,\n      position: 'top',\n      horizontalAlign: 'left', \n      fontSize: '12px',\n      fontFamily: \"'Gramatica Bold', 'open-sans'\",\n      labels: { colors: LEGEND_LABEL_COLOR },\n      onItemClick: { toggleDataSeries: false },\n      onItemHover: { highlightDataSeries: true },\n    }\n  };\n\n  updateChartOption = () => {\n    this.chartOptions.xaxis.categories = this.categories;\n    this.chartOptions.yaxis.max = this.maxValue;\n    this.chartOptions.title.text = this.date;\n  }\n\n  ngOnChanges() {\n   this.updateChartOption();\n  }\n\n  ngOnInit() {\n    this.updateChartOption();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// overriding the apexcharts styles\n\n#chart-linear {\n  ::ng-deep {\n    \n    .apexcharts-legend-marker {\n      margin-right: 12px!important;\n      width: 24px!important;\n      height: 24px!important;\n      border-radius: 4px!important;\n    }\n    \n    .apexcharts-legend-series {\n      margin-right: 31px!important;\n      margin-bottom: 30px!important;\n      display: flex!important;\n      align-items: center!important;\n    }\n    \n    .apexcharts-legend-text {\n      line-height: 24px!important;\n      height: 24px;\n    }\n    \n    #SvgjsSvg1128 {\n      cursor: pointer!important;\n    }\n    \n    .apexcharts-tooltip.apexcharts-theme-light {\n      border-radius: 12px 12px 12px 0px!important;\n    }\n    \n    /// tips block styling\n    .card-report-status {\n      width: 214px;\n      padding: 16px 16px 6px;\n      border-radius: 12px 12px 12px 0px;\n      background-color: rgba(var(--secondary-color-code), 0.8);\n      color: var(--text-color);\n      box-shadow: 0px 40px 70px rgba(var(--secondary-color-code), 0.3);\n    \n      &__title {\n        margin-bottom: 14px;\n        text-transform: uppercase;\n        color: rgba(var(--text-color-code), 0.5);\n        font-family: 'Gramatica Light', 'open-sans';\n        font-size: 18px;\n        line-height: 100%;\n      }\n    \n      &__list {\n        width: 100%;\n        display: flex;\n        justify-content: space-between;\n        flex-wrap: wrap;\n      }\n\n      &__value {\n        font-family: 'Sofia pro', 'open-sans';\n        font-weight: 800;\n        font-size: 14px;\n        line-height: 100%;\n      }\n    \n      &__item {\n        width: 49%;\n        text-align: start;\n        margin-bottom: 13px;\n\n        font-family: 'Sofia pro', 'open-sans';\n        font-style: normal;\n        font-weight: normal;\n        font-size: 14px;\n        line-height: 100%;\n    \n        &:nth-child(even) {\n          text-align: end;\n        }\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./linear-chart.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges",
                "OnInit"
            ],
            "templateData": "<div id=\"chart-linear\">\n  <apx-chart\n    [series]=\"series\"\n    [chart]=\"chartOptions.chart\"\n    [xaxis]=\"chartOptions.xaxis\"\n    [stroke]=\"chartOptions.stroke\"\n    [colors]=\"colors\"\n    [dataLabels]=\"chartOptions.dataLabels\"\n    [legend]=\"chartOptions.legend\"\n    [markers]=\"chartOptions.markers\"\n    [grid]=\"chartOptions.grid\"\n    [yaxis]=\"chartOptions.yaxis\"\n    [tooltip]=\"chartOptions.tooltip\"\n    [title]=\"chartOptions.title\"\n  ></apx-chart>\n</div>\n"
        },
        {
            "name": "MainNavigationMenuComponent",
            "id": "component-MainNavigationMenuComponent-9bb9ae231dd7998d5e05765f0e9b8014",
            "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-main-navigation-menu",
            "styleUrls": [
                "./main-navigation-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./main-navigation-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-main-navigation-menu',\n  templateUrl: './main-navigation-menu.component.html',\n  styleUrls: ['./main-navigation-menu.component.scss']\n})\n\nexport class MainNavigationMenuComponent  {\n  @Input() items: string[];\n\n  active: number = 0;\n\n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-main-navigation-menu {\n  display: flex;\n  align-items: center;\n\n  &__item {\n    margin-right: 20px;\n\n    ::ng-deep {\n      .nav-link-secondary {\n        text-transform: capitalize!important;\n      }\n    }\n  }\n}",
                    "styleUrl": "./main-navigation-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"app-main-navigation-menu\">\n  <li \n    class=\"app-main-navigation-menu__item\"\n    *ngFor=\"let item of items; let i = index\" \n  >\n    <app-nav-link\n      [isActive]=\"active === i\"\n      [title]=\"item\" \n      classes=\"nav-link-secondary\"\n      (click)=\"handlClick($event, i)\"\n    >\n    </app-nav-link>\n  </li>\n</ul>\n\n"
        },
        {
            "name": "MapChartComponent",
            "id": "component-MapChartComponent-ba0df527d6a463a52b37700b719ec862",
            "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-map-chart",
            "styleUrls": [
                "./map-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./map-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "countriesData",
                    "line": 35,
                    "type": "Countries"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeCountry",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "allCountriesData",
                    "defaultValue": "[]",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "chart",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "isTipVisible",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "map",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'mapChart'"
                        }
                    ]
                },
                {
                    "name": "mapHeight",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "polygonSeries",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "polygonTemplate",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "tipsData",
                    "defaultValue": "[]",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "tipsLeft",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "tipsTop",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [
                {
                    "name": "createChart",
                    "args": [
                        {
                            "name": "region",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "jsdoctags": [
                        {
                            "name": "region",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 51
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nimport { \n  AfricaCodes, AustraliaCodes, NorthAmericaCodes, SouthAmericaCodes, EuropeCodes, AsiaCodes \n} from './countriesCodes';\n\ninterface Country {\n  id: string, \n  value: number, \n  name: string \n}\n\ninterface Countries {\n  europe: Country[],\n  northAmerica: Country[],\n  southAmerica: Country[],\n  asia: Country[],\n  australia: Country[],\n  africa: Country[]\n}\n\nconst MAP_COLOR = \"rgba(1, 25, 73, 0.2)\";\nconst COUNTRY_HOVER_COLOR = \"rgb(22, 97, 60)\";\nconst SELECTED_COUNTRY_COLOR = \"rgba(1, 25, 73, 0.75)\";\n\n@Component({\n  selector: 'app-map-chart',\n  templateUrl: './map-chart.component.html',\n  styleUrls: ['./map-chart.component.scss']\n})\n\nexport class MapChartComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() countriesData: Countries;\n\n  chart;\n  polygonSeries;\n  polygonTemplate;\n  activeCountry: string = '';\n  allCountriesData: Country[] = [];\n  isTipVisible: boolean = false;\n  tipsTop: number = 0;\n  tipsLeft: number = 0;\n  tipsData: Country[] = [];\n  mapHeight: number;\n\n  @ViewChild('mapChart') map: ElementRef;\n  \n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    const height = this.map.nativeElement.clientWidth * 0.7;\n    this.mapHeight = height > 500 ? 500 : height;\n  }\n\n  createChart(region: string) {  \n    this.chart = null\n    this.chart = am4core.create(\"chartdiv\", am4maps.MapChart)\n    this.chart.geodata = am4geodata_worldLow;\n    this.chart.projection = new am4maps.projections.Miller();\n    this.polygonSeries = this.chart.series.push(new am4maps.MapPolygonSeries());\n    this.polygonSeries.useGeodata = true;\n    this.polygonTemplate = this.polygonSeries.mapPolygons.template;\n    this.polygonTemplate.tooltipText = \"\";\n    this.polygonTemplate.fill = am4core.color(MAP_COLOR)\n    const hs = this.polygonTemplate.states.create(\"hover\");\n    hs.properties.fill = am4core.color(COUNTRY_HOVER_COLOR);\n\n    switch(region) {\n      case 'World': \n        this.polygonSeries.exclude = [\"AQ\"]\n        this.polygonSeries.data = [...this.allCountriesData];\n        this.tipsData = [...this.allCountriesData];\n      break;\n      case 'Europe': \n        this.polygonSeries.include = [...EuropeCodes];\n        this.polygonSeries.data = [...this.countriesData.europe];\n        this.tipsData = [...this.countriesData.europe];\n        this.chart.deltaLongitude = -120;\n        this.chart.homeZoomLevel = 1.3;\n      break;\n      case 'Asia': \n        this.polygonSeries.include = [...AsiaCodes];\n        this.polygonSeries.data = [...this.countriesData.asia];\n        this.tipsData = [...this.countriesData.asia];\n        this.chart.deltaLongitude = -130;\n      break;\n      case 'North America': \n        this.polygonSeries.include = [...NorthAmericaCodes];\n        this.polygonSeries.data = [...this.countriesData.northAmerica];\n        this.tipsData = [...this.countriesData.northAmerica];\n      break;\n      case 'South America': \n        this.polygonSeries.include = [...SouthAmericaCodes];\n        this.polygonSeries.data = [...this.countriesData.southAmerica];\n        this.tipsData = [...this.countriesData.southAmerica];\n      break;\n      case 'Australia': \n        this.polygonSeries.include = [...AustraliaCodes];\n        this.polygonSeries.data = [...this.countriesData.australia];\n        this.tipsData = [...this.countriesData.australia];\n        this.chart.deltaLongitude = -160;\n        this.chart.homeZoomLevel = 2;\n      break;\n      case 'Africa': \n        this.polygonSeries.include = [...AfricaCodes];\n        this.polygonSeries.data = [...this.countriesData.africa];\n        this.tipsData = [...this.countriesData.africa];\n      break;\n    }\n\n    this.polygonSeries.data.forEach(element => element.fill = am4core.color(SELECTED_COUNTRY_COLOR));\n    this.polygonTemplate.propertyFields.fill = \"fill\";\n \n    const setActive = (value, top, left) => {\n      const isCountryIncludedToTheList = this.allCountriesData.findIndex(country => country.id === value);\n      if (isCountryIncludedToTheList !== -1) {\n        this.activeCountry = value;\n        this.isTipVisible = true;\n        this.tipsTop = top - 24 - (16 * this.tipsData.length + 8 * (this.tipsData.length + 1)) - 20;\n        if (left - 110 > 0) {\n          if (left + 110 > this.map.nativeElement.clientWidth) {\n            this.tipsLeft = this.map.nativeElement.clientWidth - 220;\n          } else {\n            this.tipsLeft = left - 110;\n          }\n        } else {\n          this.tipsLeft = 0;\n        }\n      }\n    }\n\n    const setIsTipsVisible = (value) => {\n      this.isTipVisible = value;\n    }\n\n    this.polygonTemplate.events.on(\"over\", function(ev) {\n      const active = ev.target.dataItem.dataContext;\n      setActive(active.id, ev.event.pageY,ev.event.pageX);\n    })\n\n    this.polygonTemplate.events.on(\"out\", function(ev) {\n      setIsTipsVisible(false);\n    })\n  }\n\n  ngAfterViewInit() {\n    const height = this.map.nativeElement.clientWidth * 0.7;\n    this.mapHeight = height > 500 ? 500 : height;\n  }\n\n  ngOnChanges() {\n    this.createChart('World');\n  }\n\n  ngOnInit() {\n    let formattedCountriesData = [];\n    Object.values(this.countriesData).forEach(region => { \n      formattedCountriesData = [...formattedCountriesData,...region]\n    })\n    this.allCountriesData = formattedCountriesData;\n    this.createChart('World');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#chartdiv {\n  width: 100%;\n  height: 100%;\n}\n\n.map-chart {\n  margin-top: 67px;\n  width: 100%;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n\n  &__container {\n    width: 100%;\n    height: 452px;\n    position: relative;\n  }\n  \n  &__input-container {\n    width: 280px;\n    margin-bottom: 24px;\n  }\n\n  &__tips {\n    width: 228px;\n    position: fixed;\n    z-index: 3;\n    padding: 12px;\n\n    background-color: rgba(var(--secondary-color-code), 1);\n    border-radius: 12px;\n    color: var(--asimetric-bg-color);\n\n    &:after {\n      content: '';\n      position: absolute;\n      bottom: -6px;\n      left: calc(50% - 4px);\n      z-index: 4;\n\n      width: 16px;\n      height: 7px;\n\n      background: url('../../../../../../assets/images/triangle.png') center no-repeat;\n      background-size: cover;\n    }\n\n    &-item {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      width: 100%;\n      margin: 8px 0;\n    }\n\n    &-text {\n      display: flex;\n      align-items: center;\n      font-weight: 300;\n      font-size: 12px;\n    }\n    \n    &-color {\n      display: block;\n      width: 6px;\n      height: 6px;\n      margin-right: 8px;\n      border-radius: 50%;\n      border: 1px solid rgb(26, 49, 95);\n    }\n\n    &-value {\n      font-weight: 600;\n      font-size: 16px;\n      line-height: 100%;\n    }\n  }\n}\n\n/// overriding styles for am4charts module\n\n.map-chart {\n  ::ng-deep {\n    #chartdiv > div > svg > g > g:nth-child(2) > g:nth-child(2) > g > g:nth-child(3) > g:nth-child(2) > g:nth-child(1) > path,\n    #chartdiv > div > svg > g > g:nth-child(2) > g:nth-child(2) > g > g:nth-child(3) > g:nth-child(2) > g:nth-child(2) > path,\n    #chartdiv > div > svg > g > g:nth-child(2) > g:nth-child(2) > g > g:nth-child(3) > g:nth-child(1) {\n      display: none;\n    }\n    \n    #chartdiv > div > svg > g > g:nth-child(2) > g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > g > g:nth-child(1),\n    #chartdiv > div > svg > g > g:nth-child(2) > g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > g > g:nth-child(3) {\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n}\n\n",
                    "styleUrl": "./map-chart.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"map-chart\" #mapChart>\n  <div class=\"map-chart__input-container\">\n    <reports-select-with-initial-value\n      (onItemSelect)=\"createChart($event)\"\n      [items]=\"['World', 'Europe', 'Asia', 'South America', 'North America', 'Africa', 'Australia']\"\n    ></reports-select-with-initial-value>\n  </div>\n  <div class=\"map-chart__container\" [style.height]=\"mapHeight+'px'\">\n    <div id=\"chartdiv\"></div>\n    <div \n      *ngIf=\"isTipVisible\" \n      class=\"map-chart__tips\" \n      #tips\n      [style.top]=\"tipsTop+'px'\"\n      [style.left]=\"tipsLeft+'px'\"\n    >\n      <ul class=\"map-chart__tips-list\">\n        <li class=\"map-chart__tips-item\" *ngFor=\"let item of tipsData; let i=index\">\n          <div class=\"map-chart__tips-text\">\n            <div class=\"map-chart__tips-color\" [style.backgroundColor]=\"item.id ===  activeCountry ? 'green' : 'transparent'\"></div>\n            {{ item.name }}\n          </div>\n          <div class=\"map-chart__tips-value\">{{ item.value }}</div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "MobileButtonComponent",
            "id": "component-MobileButtonComponent-4cf34c90cbd97cafe0d1d86820b3d447",
            "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mobile-button",
            "styleUrls": [
                "./mobile-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mobile-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "svgPathActive",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "svgPathNonActive",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-mobile-button',\n  templateUrl: './mobile-button.component.html',\n  styleUrls: ['./mobile-button.component.scss',]\n})\n\nexport class MobileButtonComponent {\n  @Input() isOpen: boolean;\n  @Input() svgPathNonActive: string;\n  @Input() svgPathActive: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".module-border-wrap {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  box-sizing: border-box;\n  height: 46px;\n  width: fit-content;\n  padding: 1px;\n  \n  background: var(--success-grad-light);\n  border-radius: 6px;\n}\n\n.btn-mobile {\n  height: 44px;\n  border-radius: 5px;  \n  padding: 13px 15px 12px 15px;\n  border: none;\n  background-color: var(--text-color);\n}\n\n.module-opacity-wrap {\n  background: var(--text-color);\n  border-radius: 5px;\n}\n",
                    "styleUrl": "./mobile-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"module-border-wrap\">\n  <div class=\"module-opacity-wrap \">\n    <button type=\"button\" class=\"btn-mobile\">\n      <svg-icon \n        [src]=\"isOpen ? svgPathActive : svgPathNonActive\"\n      >\n      </svg-icon>\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "MobileMainNavigationMenuComponent",
            "id": "component-MobileMainNavigationMenuComponent-d79a7481b08c3d7a806ac840ce46a1df",
            "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mobile-main-navigation-menu",
            "styleUrls": [
                "./mobile-main-navigation-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mobile-main-navigation-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-mobile-main-navigation-menu',\n  templateUrl: './mobile-main-navigation-menu.component.html',\n  styleUrls: ['./mobile-main-navigation-menu.component.scss']\n})\n\nexport class MobileMainNavigationMenuComponent {\n  @Input() items: string[];\n\n  active: number = 0;\n\n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-mobile-main-navigation-menu {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 20px;\n  background: #EAEDF2;\n}",
                    "styleUrl": "./mobile-main-navigation-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"app-mobile-main-navigation-menu\">\n  <li \n  class=\"app-mobile-main-navigation-menu__item\"\n  *ngFor=\"let item of items; let i = index\" \n  >\n    <app-icon-links\n      [isActive]=\"active === i\"\n      [title]=\"item.title\" \n      [svgPath]=\"item.svgPath\"\n      (click)=\"handlClick($event, i)\"\n    >\n    </app-icon-links>\n  </li>\n</ul>\n\n"
        },
        {
            "name": "navLinkComponent",
            "id": "component-navLinkComponent-8d90507f4162362e8faa501fbb3414f6",
            "file": "src/app/atoms/navLink/textLinks/navLink.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav-link",
            "styleUrls": [
                "navLink.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navLink.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "isActive",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appointedClasses",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-link',\n  templateUrl: './navLink.component.html',\n  styleUrls: ['navLink.component.scss'],\n})\n\nexport class navLinkComponent implements OnChanges {\n  @Input() title: string;\n  @Input() classes: string;\n  @Input() isActive: boolean;\n\n  appointedClasses: string = '';\n\n  ngOnChanges() {\n    this.appointedClasses = this.isActive ? `${this.classes} active` : this.classes;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nav-link-secondary {\n  position: relative;\n  text-transform: uppercase;\n  background: rgba(var(--secondary-color-code), 0.5);\n  -webkit-text-fill-color: transparent;\n  -webkit-background-clip: text;\n  background-clip: text;\n  transition: 0.3;\n\n  font-family: 'Gramatica Bold', 'open-sans';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 100%;\n\n  &:hover {\n    background: var(--secondary-color); \n    -webkit-background-clip: text;\n    background-clip: text;\n  }\n\n  &:active {\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n    background-clip: text;\n  }\n\n  &.active {\n    text-decoration: none;\n    -webkit-text-fill-color: transparent;\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n    background-clip: text;\n    transition: 0.3;\n  }\n}\n\n.nav-link-highlited {\n  &.active {\n    &::after {\n      width: 100%;\n    }\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -3px;\n    left: 0;\n\n    width: 0;\n    height: 2px;\n\n    background: var(--success-grad-light);\n    transition: 0.3s;\n  }\n\n  &:active {\n    &::after {\n      width: 100%;\n    }\n  }\n}\n\n.nav-link-main {\n  position: relative;\n  background: rgba(var(--secondary-color-code), 0.75);\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-transform: capitalize;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 100%;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n\n    width: 0;\n    height: 1px;\n\n    background-color: rgba(var(--secondary-color-code), 0.75);\n    transition: 0.3s;\n  }\n\n  &:hover {\n    &::after {\n      width: 100%;\n    }\n  }\n\n  &:active {\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n    background-clip: text;\n\n    &::after {\n      width: 0;\n    }\n  }\n\n  &.active {\n    text-decoration: none;\n    background: var(--success-grad-light); \n    -webkit-text-fill-color: transparent;\n    -webkit-background-clip: text;\n    background-clip: text;\n    transition: 0.3;\n  }\n}\n",
                    "styleUrl": "navLink.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<a \n  href=\"#\" \n  [ngClass]=\"appointedClasses\"\n>\n  {{ title }}\n</a>\n"
        },
        {
            "name": "PlanBuilderCardComponent",
            "id": "component-PlanBuilderCardComponent-22bfef7db12c725a9042656d245819c5",
            "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-plan-builder-card",
            "styleUrls": [
                "./plan-builder-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./plan-builder-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currency",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "id",
                    "line": 15,
                    "type": "string | number"
                },
                {
                    "name": "imagePath",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "isMobile",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "isSelected",
                    "line": 19,
                    "type": "boolean"
                },
                {
                    "name": "period",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "policyText",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "policyTitle",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "price",
                    "line": 21,
                    "type": "number"
                },
                {
                    "name": "text",
                    "line": 18,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onSelect",
                    "defaultValue": "new EventEmitter()",
                    "line": 26,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "borderColor",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "cardWidth",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                },
                {
                    "name": "selectCard",
                    "args": [
                        {
                            "name": "props",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "props",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nconst ACTIVE_COLOR = 'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)';\nconst STATIC_COLOR = 'rgba(1, 25, 73, 0.15)';\nconst DESKTOP_WIDTH = 376;\nconst MOBILE_WIDTH = 270;\n\n@Component({\n  selector: 'app-plan-builder-card',\n  templateUrl: './plan-builder-card.component.html',\n  styleUrls: ['./plan-builder-card.component.scss']\n})\n\nexport class PlanBuilderCardComponent implements OnInit, OnChanges {\n  @Input() id: string | number;\n  @Input() policyTitle: string;\n  @Input() policyText: string;\n  @Input() text: string;\n  @Input() isSelected: boolean;\n  @Input() isMobile: boolean;\n  @Input() price: number;\n  @Input() period: string;\n  @Input() imagePath: string;\n  @Input() currency: string;\n\n  @Output() onSelect?: EventEmitter<any> = new EventEmitter();\n\n  borderColor;\n  cardWidth;\n\n  selectCard(props) {\n    // logic without parent element emitter\n    // this.borderColor = props.selected ? ACTIVE_COLOR : STATIC_COLOR;\n\n    this.onSelect.emit(this.id);\n\n    /// or pass another logic from parent element\n  }\n\n  ngOnChanges() {\n    this.borderColor = this.isSelected ? ACTIVE_COLOR : STATIC_COLOR;\n    this.cardWidth = this.isMobile ? MOBILE_WIDTH : DESKTOP_WIDTH;\n  }\n\n  ngOnInit() {\n    this.borderColor = this.isSelected ? ACTIVE_COLOR : STATIC_COLOR;\n    this.cardWidth = this.isMobile ? MOBILE_WIDTH : DESKTOP_WIDTH;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-plan-builder-card {\n  height: 100%;\n  border-radius: 12px;\n  padding: 1px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &__wrapper {\n    width: 100%;\n    height: 100%;\n    padding: 16px;\n\n    border-radius: 12px;\n    background-color: var(--text-color);\n  }\n\n  &__top {\n    width: 100%;\n    margin-bottom: 16px;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &--left {\n      display: flex;\n      align-items: center;\n    }\n\n    &--right {\n      min-width: 70px;\n      padding: 11px;\n      \n      background: var(--status-bar-bg-color);\n      border-radius: 8px;\n      color: rgba(var(--secondary-color-code), 0.75);\n\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n  }\n\n  &__image {\n    margin-right: 15px;\n  }\n\n  &__name {\n    font-size: 18px;\n    line-height: 150%;\n    font-family: 'Gramatica Bold', 'open-sans';\n    text-transform: uppercase;\n    color: var(--secondary-color);\n  }\n\n  &__location {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 160%;\n    color: rgba(var(--secondary-color-code), 0.75);\n  }\n\n  &__price {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 800;\n    font-size: 16px;\n    text-transform: uppercase;\n    line-height: 100%;\n    text-align: left;\n\n    margin-top: 11px;\n  }\n\n  &__period {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 10px;\n    line-height: 100%;\n  }\n\n  &__text {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 12px;\n    line-height: 18px;\n    color: rgba(var(--secondary-color-code), 0.75);\n  }\n}",
                    "styleUrl": "./plan-builder-card.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div \n  class=\"app-plan-builder-card\"\n  [style.background]=\"borderColor\"\n  [style.width]=\"cardWidth+'px'\"\n>\n  <div class=\"app-plan-builder-card__wrapper\">\n    <div class=\"app-plan-builder-card__top\">\n      <div class=\"app-plan-builder-card__top--left\">\n        <img \n          [src]=\"imagePath\" \n          [alt]=\"policyTitle\"\n          class=\"app-plan-builder-card__image\"\n        >\n        <div class=\"app-plan-builder-card__title\">\n          <p class=\"app-plan-builder-card__name\">{{ policyTitle }}</p>\n          <p class=\"app-plan-builder-card__location\">{{ policyText }}</p>\n        </div>\n      </div>\n      <div class=\"app-plan-builder-card__top--right\">\n        <app-plan-builder-checkbox\n          [initialValue]=\"isSelected\"\n          [id]=\"id\"\n          (onToggle)=\"selectCard($event)\"\n        ></app-plan-builder-checkbox>\n        <p class=\"app-plan-builder-card__price\">\n          {{ currency==='usd' ? '&#36;' : '\t&#8364;'}} \n          {{ price }}\n        </p>\n        <p class=\"app-plan-builder-card__period\">{{ period }}</p>\n      </div>\n    </div>\n    <p class=\"app-plan-builder-card__text\">{{ text }}</p>\n  </div>\n</div>\n"
        },
        {
            "name": "PlanBuilderCardsListComponent",
            "id": "component-PlanBuilderCardsListComponent-a63d5aae730dcefb5dabbd28aff08ead",
            "file": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-plan-builder-cards-list",
            "styleUrls": [
                "./plan-builder-cards-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./plan-builder-cards-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cards",
                    "line": 25,
                    "type": "Card[]"
                },
                {
                    "name": "currency",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "period",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "selectedCards",
                    "line": 23,
                    "type": "number[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "container",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ]
                },
                {
                    "name": "isMobileForCard",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "isMobileForContainer",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "addToSelected",
                    "args": [
                        {
                            "name": "id",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "detectIfSelected",
                    "args": [
                        {
                            "name": "id",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 51,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59
                },
                {
                    "name": "setIsMobile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 47
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, HostListener, Input, OnInit, ViewChild } from '@angular/core';\n\nconst MOBILE_VIEW = 798;\nconst CARD_MOBILE_VIEW = 415;\n\ninterface Card {\n  id: number,\n  policyTitle: string,\n  policyText: string,\n  text: string,\n  price: number,\n  imagePath: string\n}\n\n@Component({\n  selector: 'app-plan-builder-cards-list',\n  templateUrl: './plan-builder-cards-list.component.html',\n  styleUrls: ['./plan-builder-cards-list.component.scss']\n})\n\nexport class PlanBuilderCardsListComponent implements OnInit, AfterViewInit {\n  @Input() currency: string;\n  @Input() selectedCards: number[];\n  @Input() period: string;\n  @Input() cards: Card[];\n\n  isMobileForContainer: boolean;\n  isMobileForCard: boolean;\n\n  @ViewChild('container') container;\n\n  addToSelected(id: number) {\n    const isSelected = this.selectedCards.includes(id);\n    if (isSelected) {\n      this.selectedCards = this.selectedCards.filter(card => card !== id);\n    } else {\n      this.selectedCards = [...this.selectedCards, id];\n    }\n  }\n\n  setIsMobile() {\n    this.isMobileForContainer = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n    this.isMobileForCard = this.container.nativeElement.clientWidth < CARD_MOBILE_VIEW;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.setIsMobile();\n  }\n\n  detectIfSelected(id: number) {\n    return this.selectedCards.includes(id);\n  }\n\n  ngAfterViewInit() {\n    this.setIsMobile();\n  }\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-plan-builder-cards-list {\n  width: fit-content;\n  padding: 20px 0;\n\n  &__container {\n    width: fit-content;\n    max-height: 600px;\n    overflow-y: scroll;\n    max-width: 810px;\n    padding-right: 20px;\n\n    &::-webkit-scrollbar {\n      width: 5px;\n    }\n     \n    &::-webkit-scrollbar-track {\n      background: var(--asimetric-bg-color);\n      border-radius: 20px;\n    }\n     \n    &::-webkit-scrollbar-thumb {\n      background: var(--secondary-color);\n      border-radius: 20px;\n    }\n  }\n\n  &__wrapper {\n    width: fit-content;\n    max-width: 778px;\n\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n\n  &__item {\n    margin-bottom: 16px;\n    padding: 0 5px;\n  }\n}\n",
                    "styleUrl": "./plan-builder-cards-list.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"app-plan-builder-cards-list\">\n  <div \n    class=\"app-plan-builder-cards-list__container\" \n    [style.paddingRight]=\"isMobileForCard ? '5px' : '20px'\"\n    #container\n  >\n    <ul \n      class=\"app-plan-builder-cards-list__wrapper\"\n      [style.justifyContent]=\"isMobileForContainer ? 'center' : 'space-between'\"\n    >\n      <li \n        class=\"app-plan-builder-cards-list__item\" \n        *ngFor=\"let card of cards\"\n        [style.width]=\"isMobileForCard ? '280px' : '386px'\"\n      >\n        <app-plan-builder-card\n          [isMobile]=\"isMobileForCard\"\n          [currency]=\"currency\"\n          [period]=\"period\"\n          [isSelected]=\"detectIfSelected(card.id)\"\n          [id]=\"card.id\"\n          [policyTitle]=\"card.policyTitle\"\n          [policyText]=\"card.policyText\"\n          [text]=\"card.text\"\n          [price]=\"card.price\"\n          [imagePath]=\"card.imagePath\"\n          (onSelect)=\"addToSelected($event)\"\n        >\n        </app-plan-builder-card>\n      </li>\n    </ul>\n  </div>\n</div>\n\n"
        },
        {
            "name": "PlanBuilderCheckboxComponent",
            "id": "component-PlanBuilderCheckboxComponent-529f8e938962bbcbd6db4a6e93562bd8",
            "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-checkbox/plan-builder-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-plan-builder-checkbox",
            "styleUrls": [
                "./plan-builder-checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./plan-builder-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "line": 11,
                    "type": "number | string"
                },
                {
                    "name": "initialValue",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isChecked",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-plan-builder-checkbox',\n  templateUrl: './plan-builder-checkbox.component.html',\n  styleUrls: ['./plan-builder-checkbox.component.scss']\n})\n\nexport class PlanBuilderCheckboxComponent implements OnInit, OnChanges {\n  @Input() initialValue: boolean;\n  @Input() id: number | string;\n  @Output() onToggle?: EventEmitter<any> = new EventEmitter();\n\n  isChecked;\n\n  onChange(event) {\n    this.isChecked = event.target.checked;\n    this.onToggle.emit({\n      id: this.id,\n      selected: this.isChecked,\n    })\n  }\n\n  ngOnInit(): void {\n    this.isChecked = this.initialValue;\n  }\n\n  ngOnChanges(): void {\n    this.isChecked = this.initialValue;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-input-switch {\n  display: none;\n\n  &__label {\n    position: relative;\n    display: block;\n    width: 35px;\n    height: 12px;\n\n    border-radius: 18px;\n    transition: 0.3s;\n    background: rgba(var(--secondary-color-code), 0.2);\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      top: -3px;\n      left: 0;\n\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      box-sizing: border-box;\n      width: 19px;\n      height: 19px;\n      border-radius: 50%;\n      \n      background: var(--input-bg-color);\n      box-shadow: 0px 5px 8px rgba(50, 60, 111, 0.25);\n    }\n  }\n}\n\n.app-checkbox-input-switch:checked + .app-checkbox-input-switch__label {\n  background: linear-gradient(89.52deg, hsla(137, 66%, 42%, 0.2) -46.17%, rgba(2, 99, 188, 0.2) 186.99%);\n\n  &:after {\n    transform: translateX(17px);\n    background: var(--success-grad-light);\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: -3px;\n    left: 17px;\n    z-index: 2;\n\n    box-sizing: border-box;\n    width: 19px;\n    height: 19px;\n    border-radius: 50%;\n\n    background: no-repeat center url('../../../../../assets/images/checkbox.svg');\n  }\n}",
                    "styleUrl": "./plan-builder-checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<input\n  type=\"checkbox\" \n  [id]=\"id\"\n  name=\"checkbox-input-switch\" \n  class=\"app-checkbox-input-switch\"\n  [checked]=\"isChecked\"\n  (change)=\"onChange($event)\"\n>\n<label [for]=\"id\" class=\"app-checkbox-input-switch__label\"></label>\n"
        },
        {
            "name": "PlanBuilderContactUsComponent",
            "id": "component-PlanBuilderContactUsComponent-8278e6a358e576f6c590e2e0164c1874",
            "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-contact-us/plan-builder-contact-us.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-plan-builder-contact-us",
            "styleUrls": [
                "./plan-builder-contact-us.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./plan-builder-contact-us.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "text",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-plan-builder-contact-us',\n  templateUrl: './plan-builder-contact-us.component.html',\n  styleUrls: ['./plan-builder-contact-us.component.scss']\n})\n\nexport class PlanBuilderContactUsComponent implements OnInit {\n  @Input() title: string;\n  @Input() text: string;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-plan-builder-contact-us {\n  max-width: 352px;\n  min-width: 280px;;\n  padding: 32px 16px;\n\n  background: var(--success-grad-light);\n  box-shadow: 0px 40px 100px rgba(var(--secondary-color-code), 0.3);\n  border-radius: 12px;\n\n  text-align: center;\n\n  &__title {\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-style: normal;\n    font-size: 24px;\n    line-height: 120%;\n    color: var(--text-color);\n\n    margin-bottom: 12px;\n  }\n\n  &__text {\n    font-family: 'Gramatica Regular', 'open-sans';\n    font-size: 16px;\n    line-height: 140%;\n    color: rgba(var(--text-color-code), 0.75);\n\n    margin-bottom: 32px;\n  }\n}",
                    "styleUrl": "./plan-builder-contact-us.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-plan-builder-contact-us\">\n  <p class=\"app-plan-builder-contact-us__title\">{{ title }}</p>\n  <p class=\"app-plan-builder-contact-us__text\">{{ text }}</p>\n  <app-plan-builder-secondary-button [title]=\"'contact sales'\"></app-plan-builder-secondary-button>\n</div>\n"
        },
        {
            "name": "PlanBuilderDomainsSelectComponent",
            "id": "component-PlanBuilderDomainsSelectComponent-0598a63f9a6e663ca97e58f18d40090f",
            "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-domains-select/plan-builder-domains-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-plan-builder-domains-select",
            "styleUrls": [
                "./plan-builder-domains-select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./plan-builder-domains-select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currency",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "discount",
                    "line": 13,
                    "type": "number"
                },
                {
                    "name": "initialValue",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "period",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "values",
                    "line": 9,
                    "type": "literal type[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeValue",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "rangeValues",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "detectActiveIndex",
                    "args": [
                        {
                            "name": "value",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "index",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-plan-builder-domains-select',\n  templateUrl: './plan-builder-domains-select.component.html',\n  styleUrls: ['./plan-builder-domains-select.component.scss']\n})\nexport class PlanBuilderDomainsSelectComponent implements OnInit {\n  @Input() values: { value: number, price: number }[];\n  @Input() currency: string;\n  @Input() initialValue: number;\n  @Input() period: string;\n  @Input() discount: number;\n\n  rangeValues;\n  activeValue;\n\n  onChange(index) {\n    this.activeValue = this.values[index];\n  }\n\n  detectActiveIndex(value: number) {\n    const activeIndex = this.values.findIndex(item => item.value === value);\n    this.activeValue = this.values[activeIndex];\n  }\n\n  ngOnInit(): void {\n    this.rangeValues = this.values.map(item => item.value);\n    this.detectActiveIndex(this.initialValue);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-plan-builder-domains-select {\n  padding: 32px;\n  background-color: var(--text-color);\n  box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n  border-radius: 20px;\n\n  &__top {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n\n  &__text {\n    max-width: 416px;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 20px;\n    line-height: 140%;\n    color: var(--secondary-color);\n  }\n\n  &__price {\n    background: var(--status-bar-bg-color);\n    border-radius: 8px;\n    padding: 10px 35px;\n\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 18px;\n    line-height: 140%;\n    color: var(--secondary-color);\n\n    & > span {\n      font-weight: 800;\n    }\n  }\n\n  &__discount {\n    width: 100%;\n    font-size: 14px;\n    opacity: 0.75;\n  }\n}",
                    "styleUrl": "./plan-builder-domains-select.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-plan-builder-domains-select\">\n  <div class=\"app-plan-builder-domains-select__top\">\n    <div class=\"app-plan-builder-domains-select__text\">\n      Choose how many domains you need using the slider below:\n    </div>\n    <div class=\"app-plan-builder-domains-select__price\">\n      <span>\n        {{ currency==='usd' ? '&#36;' : '\t&#8364;'}} \n        {{ activeValue.price }}\n      </span> \n      {{ period }}\n      <div class=\"app-plan-builder-domains-select__discount\">Discount {{ discount }}%</div>\n    </div>\n  </div>\n  <app-plan-builder-range\n    (onChange)=\"onChange($event)\"\n    [points]=\"rangeValues\"\n    [value]=\"activeValue.value\"\n  ></app-plan-builder-range>\n</div>\n"
        },
        {
            "name": "PlanBuilderPlanComponent",
            "id": "component-PlanBuilderPlanComponent-4ee064eeb482f40c4693fe07b91fb0fa",
            "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-plan/plan-builder-plan.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-plan-builder-plan",
            "styleUrls": [
                "./plan-builder-plan.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./plan-builder-plan.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currency",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "domainsNumber",
                    "line": 10,
                    "type": "number"
                },
                {
                    "name": "domainsPrice",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "initialPeriod",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "modules",
                    "line": 13,
                    "type": "literal type[]"
                },
                {
                    "name": "salePercent",
                    "line": 16,
                    "type": "number"
                },
                {
                    "name": "title",
                    "line": 15,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "totalCost",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "totalCostWithDicount",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "changePeriod",
                    "args": [
                        {
                            "name": "props",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "jsdoctags": [
                        {
                            "name": "props",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCost",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-plan-builder-plan',\n  templateUrl: './plan-builder-plan.component.html',\n  styleUrls: ['./plan-builder-plan.component.scss']\n})\n\nexport class PlanBuilderPlanComponent implements OnInit {\n  @Input() domainsNumber: number;\n  @Input() domainsPrice: number;\n  @Input() currency: string;\n  @Input() modules: { title: string, price: number }[];\n  @Input() initialPeriod: string;\n  @Input() title: string;\n  @Input() salePercent: number;\n\n  totalCost: number;\n  totalCostWithDicount: number;\n\n  getCost() {\n    const cost = this.modules.reduce(\n      (accumulator, currentValue) => accumulator + currentValue.price,\n      this.domainsPrice\n    );\n    this.totalCost = cost;\n    this.totalCostWithDicount = cost * (1 - this.salePercent / 100);\n  }\n\n  changePeriod(props) {\n    this.initialPeriod = props;\n    /// or your parent logic angd price logic\n  }\n\n\n  ngOnInit(): void {\n    this.getCost()\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-plan-builder-plan {\n  max-width: 352px;\n  min-width: 280px;\n  padding: 16px;\n\n  background: var(--success-grad-light);\n  box-shadow: 0px 40px 100px rgba(28, 86, 76, 0.3);\n\n  border-radius: 12px;\n  color: var(--text-color);\n\n  &__period {\n    width: 100%;\n    padding: 17px 5px 11px;\n    margin-bottom: 32px;\n    border-radius: 16px;\n    background-color: var(--text-color);\n\n    display: flex;\n    justify-content: center;\n  }\n\n  &__box {\n    padding: 0 16px;\n  }\n\n  &__title {\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-style: normal;\n    font-size: 24px;\n    line-height: 120%;\n  }\n\n  &__separator {\n    width: 100%;\n    height: 1px;\n    background-color: rgba(var(--text-color-code), 0.2);\n    margin: 10px 0 27px;\n  }\n\n  &__module {\n    padding: 0 16px;\n    grid-column-gap: 5px;\n    display: grid;\n    grid-template-columns: 1fr 72px;\n\n    &-title {\n      font-family: 'Gramatica Regular', 'open-sans';\n      font-size: 20px;\n      line-height: 120%;\n    }\n\n    &-price {\n      font-family: 'Gramatica Bold', 'open-sans';\n      font-size: 24px;\n      line-height: 120%;\n    }\n  }\n\n  &__modules {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-row-gap: 21px;\n    margin-bottom: 16px;\n  }\n\n  &__final-price {\n    padding: 15px 0;\n    margin-bottom: 24px;\n    \n    background: rgba(var(--text-color-code), 0.2);\n    border-radius: 16px;\n  }\n}",
                    "styleUrl": "./plan-builder-plan.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-plan-builder-plan\">\n  <div class=\"app-plan-builder-plan__period\">\n    <app-plan-builder-toggler\n      [initialValue]=\"initialPeriod === 'annual'\"\n      [leftValue]=\"'monthly'\"\n      [rightValue]=\"'annual'\"\n      [text]=\"'Save approx 30%'\"\n      (onToggle)=\"changePeriod($event)\"\n    ></app-plan-builder-toggler>\n  </div>\n  <div class=\"app-plan-builder-plan__box\">\n    <p class=\"app-plan-builder-plan__title\">{{ title }}</p>\n  </div>\n  <div class=\"app-plan-builder-plan__separator\"></div>\n  <div class=\"app-plan-builder-plan__modules\">\n    <div class=\"app-plan-builder-plan__module\">\n      <p class=\"app-plan-builder-plan__module-title\">{{ domainsNumber }} Domain</p>\n      <p class=\"app-plan-builder-plan__module-price\">\n        {{ currency==='usd' ? '&#36;' : '\t&#8364;'}} \n        {{ domainsPrice }}\n      </p>\n    </div>\n    <div class=\"app-plan-builder-plan__module\" *ngFor=\"let module of modules\">\n      <p class=\"app-plan-builder-plan__module-title\">{{ module.title }} module</p>\n      <p class=\"app-plan-builder-plan__module-price\">\n        {{ currency==='usd' ? '&#36;' : '\t&#8364;'}} \n        {{ module.price }}\n      </p>\n    </div>\n  </div>\n  <div class=\"app-plan-builder-plan__separator\"></div>\n  <div class=\"app-plan-builder-plan__modules\">\n    <div class=\"app-plan-builder-plan__module\">\n      <p class=\"app-plan-builder-plan__module-title\">Total {{ initialPeriod }} cost</p>\n      <p class=\"app-plan-builder-plan__module-price\">\n        {{ currency==='usd' ? '&#36;' : '\t&#8364;'}} \n        {{ totalCost }}\n      </p>\n    </div>\n    <div class=\"app-plan-builder-plan__module\">\n      <p class=\"app-plan-builder-plan__module-title\">Discount {{ salePercent }}%</p>\n      <p class=\"app-plan-builder-plan__module-price\">\n        {{ currency==='usd' ? '&#36;' : '\t&#8364;'}} \n        {{ totalCost - totalCostWithDicount }}\n      </p>\n    </div>\n  </div>\n  <div class=\"app-plan-builder-plan__final-price\">\n    <div class=\"app-plan-builder-plan__module\">\n      <p class=\"app-plan-builder-plan__module-title\">Discounted  {{ initialPeriod }} cost</p>\n      <p class=\"app-plan-builder-plan__module-price\">\n        {{ currency==='usd' ? '&#36;' : '\t&#8364;'}} \n        {{ totalCostWithDicount }}\n      </p>\n    </div>\n  </div>\n  <app-plan-builder-primary-button [title]=\"'buy now'\"></app-plan-builder-primary-button>\n</div>\n"
        },
        {
            "name": "PlanBuilderPrimaryButtonComponent",
            "id": "component-PlanBuilderPrimaryButtonComponent-5e9bcc7761bb55cf30965b88a2d6e35b",
            "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-primary-button/plan-builder-primary-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-plan-builder-primary-button",
            "styleUrls": [
                "./plan-builder-primary-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./plan-builder-primary-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-plan-builder-primary-button',\n  templateUrl: './plan-builder-primary-button.component.html',\n  styleUrls: ['./plan-builder-primary-button.component.scss']\n})\n\nexport class PlanBuilderPrimaryButtonComponent implements OnInit {\n  @Input() title :string;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-plan-builder-primary-button {\n  width: 100%;\n  height: 48px;\n  \n  background: linear-gradient(269.4deg, #FB5F47 38.27%, #F9BE5A 113.07%);\n  border-radius: 5px 20px;\n  border: none;\n  outline: none;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 16px;\n  line-height: 48px;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  &:hover {\n    background: linear-gradient(269.4deg, #D54832 38.27%, #EBB252 113.07%);\n  }\n}",
                    "styleUrl": "./plan-builder-primary-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button type=\"button\" class=\"app-plan-builder-primary-button\">\n  {{ title }}\n</button>\n"
        },
        {
            "name": "PlanBuilderRangeComponent",
            "id": "component-PlanBuilderRangeComponent-c33b3baec4b7715e8f4646b934a2eaff",
            "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-plan-builder-range",
            "styleUrls": [
                "./plan-builder-range.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./plan-builder-range.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "points",
                    "line": 14,
                    "type": "number[]"
                },
                {
                    "name": "value",
                    "line": 15,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "line": 16,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activePoint",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "container",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ]
                },
                {
                    "name": "containerWidth",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "filledTrackWidth",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isMobile",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "isMoving",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "left",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "leftDocumentPosition",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "sectionWidth",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "detectActivePoint",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60
                },
                {
                    "name": "detectPosition",
                    "args": [
                        {
                            "name": "index",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "moveThumb",
                    "args": [
                        {
                            "name": "ev",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91
                },
                {
                    "name": "setIsMoving",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        },
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "stopMoving",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:mouseup",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 45
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 52
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from '@angular/core';\n\nconst THUMB_WIDTH = 20;\nconst VALUE_WIDTH = 80;\nconst MOBILE_WIDTH = 850;\n\n@Component({\n  selector: 'app-plan-builder-range',\n  templateUrl: './plan-builder-range.component.html',\n  styleUrls: ['./plan-builder-range.component.scss']\n})\n\nexport class PlanBuilderRangeComponent implements OnInit, AfterViewInit {\n  @Input() points: number[];\n  @Input() value: number;\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n  leftDocumentPosition;\n  isMoving = false;\n  left;\n  containerWidth;\n  sectionWidth;\n  filledTrackWidth = 0;\n  isMobile;\n  activePoint;\n\n  @ViewChild('container') container: ElementRef;\n\n  setIsMoving(event, value) {\n    this.isMoving = value;\n  }\n\n  detectPosition(index) {\n    switch (index) {\n      case 0: \n        return 0;\n      case this.points.length - 1:\n        return this.isMobile ? - 15 : - VALUE_WIDTH;\n      default:\n        return this.isMobile ? - 5 : - VALUE_WIDTH / 2;\n    }\n  }\n\n  @HostListener('document:mouseup', ['$event']) \n  onMouseUp() {\n    if (this.isMoving) {\n      this.stopMoving();\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.containerWidth = document.querySelector('.app-plan-builder-range').clientWidth;\n    this.leftDocumentPosition = document.querySelector('.app-plan-builder-range').getBoundingClientRect().x;\n    this.sectionWidth = this.containerWidth / (this.points.length - 1);\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_WIDTH;\n    this.stopMoving();\n  }\n\n  detectActivePoint() {\n    const index = Math.round(this.left / this.sectionWidth) > this.points.length - 1 \n                            ? this.points.length - 1 \n                            : Math.round(this.left / this.sectionWidth);\n                            \n    this.activePoint = index;\n    this.onChange.emit(index);\n  }\n\n  stopMoving() {\n    let coordinatesX = this.activePoint * this.sectionWidth - THUMB_WIDTH / 2;\n    this.isMoving = false;\n    this.filledTrackWidth = coordinatesX + THUMB_WIDTH / 2;\n    this.left = coordinatesX;\n  }\n\n  moveThumb(ev) {\n    if (this.isMoving) {\n      this.detectActivePoint();\n      let coordinatesX = ev.clientX - THUMB_WIDTH / 2 - this.leftDocumentPosition;\n      this.filledTrackWidth = coordinatesX + THUMB_WIDTH / 2;\n      if (coordinatesX + THUMB_WIDTH / 2 > this.containerWidth) {\n        this.left = this.containerWidth - THUMB_WIDTH / 2;\n      } else if (coordinatesX + THUMB_WIDTH / 2 < 0) {\n        this.left = - THUMB_WIDTH / 2;\n      } else {\n        this.left = coordinatesX;\n      }\n    }\n  }\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit() {\n    this.containerWidth = document.querySelector('.app-plan-builder-range').clientWidth;\n    this.isMobile = document.querySelector('.app-plan-builder-range__container').clientWidth < MOBILE_WIDTH;\n    this.leftDocumentPosition = document.querySelector('.app-plan-builder-range').getBoundingClientRect().x;\n    this.sectionWidth = this.containerWidth / (this.points.length - 1);\n    const activeIndex = this.points.findIndex(point => point === this.value);\n    this.activePoint = activeIndex;\n    let coordinatesX = activeIndex * this.sectionWidth - THUMB_WIDTH / 2;\n    this.filledTrackWidth = coordinatesX + THUMB_WIDTH / 2;\n    this.left = coordinatesX;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-plan-builder-range {\n  width: 100%;\n  padding: 40px 0;\n  position: relative;\n\n  &__container {\n    width: 100%;\n  }\n\n  &__scale {\n    width: 100%;\n    position: absolute;\n    top: 0;\n\n    display: flex;\n    justify-content: space-between;\n\n    &-item:not(:first-child):not(:last-child) {\n      height: 8px;\n      width: 2px;\n      background: rgba(var(--secondary-color-code), 0.2);\n    }\n\n    &-item {\n      position: relative;\n    }\n\n    &-value {\n      position: absolute;\n      bottom: -40px;\n      left: -35px;\n      width: 80px;\n\n      text-align: left;\n      font-family: 'Sofia pro', 'open-sans';\n      font-weight: 300;\n      font-size: 14px;\n      line-height: 150%;\n      color: rgba(var(--secondary-color-code), 0.75);\n    }\n  }\n\n  &__track {\n    width: 100%;\n    height: 8px;\n    background-color: var(--asimetric-bg-color);\n    border-radius: 5px;\n    position: relative;\n\n    &-filled {\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 8px;\n      background: var(--success-grad-light);\n      border-radius: 5px;\n      z-index: 5;\n    }\n  }\n\n  &__thumb {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n\n    background: var(--success-grad-light);\n    box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n\n    position: absolute;\n    top: 34px;\n    z-index: 5;\n\n    &-tip {\n      width: 96px;\n      height: 42.5px;\n      padding: 7px;\n      border-radius: 8px;\n\n      background: var(--secondary-color);\n      color: var(--text-color);\n\n      position: absolute;\n      top: -50px;\n      left: calc(50% - 50px);\n\n      font-family: 'Sofia pro', 'open-sans';\n      font-weight: 600;\n      font-size: 14px;\n      line-height: 150%;\n\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      &:after {\n        content: '';\n        position: absolute;\n        bottom: -6px;\n        left: calc(50% - 6px);\n        z-index: 4;\n  \n        height: 7px;\n        width: 16px;\n  \n        background: url('../../../../../assets/images/triangle.png') center no-repeat;\n        background-size: cover;\n      }\n    }\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    &:after {\n      content: '';\n      position: absolute;\n      left: 2px;\n      top: 2px;\n      width: 16px;\n      height: 16px;\n      background-color: var(--text-color);\n      border-radius: 50%;\n    }\n  }\n}\n",
                    "styleUrl": "./plan-builder-range.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"app-plan-builder-range__container\" #container>\n  <div class=\"app-plan-builder-range\" (mouseup)=\"stopMoving()\" (mousemove)=\"moveThumb($event)\">\n    <div class=\"app-plan-builder-range__track\">\n      <div class=\"app-plan-builder-range__scale\">\n          <div *ngFor=\"let point of points; let i = index\" class=\"app-plan-builder-range__scale-item\">\n            <div \n              class=\"app-plan-builder-range__scale-value\"\n              [style.left]=\"detectPosition(i)+'px'\"\n              [style.width]=\"isMobile ? '20px' : '80px'\"\n            >\n              {{ points[i]}} \n              {{ isMobile ? '' : 'Domain'}}\n            </div>\n          </div>\n      </div>\n      <div class=\"app-plan-builder-range__track-filled\" [style.width]=\"filledTrackWidth+'px'\"></div>\n    </div>\n    <div \n      class=\"app-plan-builder-range__thumb\"\n      (mousedown)=\"setIsMoving($event, true)\"\n      [style.left]=\"left+'px'\"\n    >\n      <div class=\"app-plan-builder-range__thumb-tip\">{{ points[activePoint] }} Domains</div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "PlanBuilderSecondaryButtonComponent",
            "id": "component-PlanBuilderSecondaryButtonComponent-4cc61e5756cf2b56feb65feaa4c402f0",
            "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-secondary-button/plan-builder-secondary-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-plan-builder-secondary-button",
            "styleUrls": [
                "./plan-builder-secondary-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./plan-builder-secondary-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-plan-builder-secondary-button',\n  templateUrl: './plan-builder-secondary-button.component.html',\n  styleUrls: ['./plan-builder-secondary-button.component.scss']\n})\nexport class PlanBuilderSecondaryButtonComponent implements OnInit {\n  @Input() title :string;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-plan-builder-secondary-button {\n  width: 100%;\n  height: 48px;\n  \n  background-color: transparent;\n  border: 1px solid rgba(var(--text-color-code), 0.3);\n  box-sizing: border-box;\n  border-radius: 5px 20px;\n  outline: none;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 16px;\n  line-height: 48px;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  transition: var(--transition);\n\n  &:hover > p {\n    background: var(--success-grad-light);\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n\n  &:hover {\n    border: 1px solid rgba(var(--text-color-code), 1);\n    background-color: var(--text-color);\n  }\n}\n",
                    "styleUrl": "./plan-builder-secondary-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button type=\"button\" class=\"app-plan-builder-secondary-button\">\n  <p>\n    {{ title }}\n  </p>\n</button>\n\n"
        },
        {
            "name": "PlanBuilderTogglerComponent",
            "id": "component-PlanBuilderTogglerComponent-dbb49cd5ffc70e3e70ddf11261352917",
            "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-toggler/plan-builder-toggler.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-plan-builder-toggler",
            "styleUrls": [
                "./plan-builder-toggler.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./plan-builder-toggler.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Math.random()",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "initialValue",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "leftValue",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "rightValue",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "text",
                    "line": 14,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 16,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isChecked",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-plan-builder-toggler',\n  templateUrl: './plan-builder-toggler.component.html',\n  styleUrls: ['./plan-builder-toggler.component.scss']\n})\n\nexport class PlanBuilderTogglerComponent implements OnInit, OnChanges {\n  @Input() initialValue: boolean;\n  @Input() id?: number = Math.random();\n  @Input() leftValue: string;\n  @Input() rightValue: string;\n  @Input() text: string;\n\n  @Output() onToggle?: EventEmitter<any> = new EventEmitter();\n\n  isChecked;\n\n  change(event) {\n    this.isChecked = event.target.checked;\n    const togglerState = this.isChecked ? this.rightValue : this.leftValue;\n    this.onToggle.emit(togglerState);\n  }\n  \n  ngOnInit(): void {\n    this.isChecked = this.initialValue;\n  }\n\n  ngOnChanges(): void {\n    this.isChecked = this.initialValue;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-input-switch {\n  display: none;\n\n  &__label {\n    position: relative;\n    display: block;\n    width: 68px;\n    height: 32px;\n    margin: 0 10px;\n\n    border-radius: 18px;\n    transition: 0.3s;\n    background: rgba(var(--secondary-color-code), 0.1);\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      top: 3px;\n      left: 2px;\n\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      box-sizing: border-box;\n      width: 26px;\n      height: 26px;\n      border-radius: 50%;\n      \n      background: var(--success-grad-light);\n      box-shadow: 0px 5px 8px rgba(50, 60, 111, 0.25);\n    }\n  }\n}\n\n.app-checkbox-input-switch:checked + .app-checkbox-input-switch__label {\n\n  &:after {\n    transform: translateX(38px);\n    background: var(--success-grad-light);\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: -3px;\n    left: 17px;\n    z-index: 2;\n\n    box-sizing: border-box;\n    width: 19px;\n    height: 19px;\n    border-radius: 50%;\n  }\n}\n\n.app-plan-builder-toggler {\n  display: flex;\n  align-items: flex-start;\n\n  &__value {\n    padding-top: 5px;\n    \n    font-family: 'Gramatica Bold', 'open-sans';\n    font-size: 14px;\n    text-transform: uppercase;\n    background: var(--success-grad-light);\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n\n  &__text {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 10px;\n    line-height: 150%;\n    color: rgba(var(--secondary-color-code), 0.75);\n  }\n}\n\n",
                    "styleUrl": "./plan-builder-toggler.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"app-plan-builder-toggler\">\n  <div \n    class=\"app-plan-builder-toggler__value\" \n    [style.opacity]=\"isChecked ? '0.75' : '1'\"\n  >\n    {{ leftValue }}\n  </div>\n  <input\n    type=\"checkbox\" \n    [id]=\"id\"\n    name=\"checkbox-input-switch\" \n    class=\"app-checkbox-input-switch\"\n    [checked]=\"isChecked\"\n    (change)=\"change($event)\"\n  >\n  <label [for]=\"id\" class=\"app-checkbox-input-switch__label\"></label>\n  <div>\n    <div \n      class=\"app-plan-builder-toggler__value\"  \n      [style.opacity]=\"isChecked ? '1' : '0.75'\"\n    >\n      {{ rightValue }}\n    </div>\n    <p class=\"app-plan-builder-toggler__text\">\n      {{ text }}\n    </p>\n  </div>\n</div>\n"
        },
        {
            "name": "PoliciesButtonComponent",
            "id": "component-PoliciesButtonComponent-ff03f9343eed6fc04449ae957edf4fc8",
            "file": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-policies-button",
            "styleUrls": [
                "./policies-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./policies-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-policies-button',\n  templateUrl: './policies-button.component.html',\n  styleUrls: ['./policies-button.component.scss']\n})\n\nexport class PoliciesButtonComponent implements OnInit {\n  @Input() title: string;\n  @Input() classes: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-secondary {\n  background-color: rgba(var(--secondary-color-code), 0.1);\n  border: none;\n  border-radius: 8px;\n  color: var(--secondary-color);\n  text-transform: uppercase;\n  transition: 0.3s;\n\n  height: 46px;\n  padding: 17px 45px;\n\n  font-family: 'Gramatica Bold', 'open-sans';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 100%;\n\n  &:hover {\n    background-color: rgba(var(--secondary-color-code), 1);\n    color: var(--text-color);\n  }\n\n  &:active {\n    background-color: rgba(var(--secondary-color-code), 0.1);\n    color: var(--secondary-color);\n  }\n}\n\n.btn-success {\n  border-radius: 20px 5px;\n  height: 46px;\n  position: relative;\n  z-index: 2;\n\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  &--small {\n    padding: 17px 41px 17px 44px;\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 100%;\n  }\n\n  &--large {\n    padding: 15px 68px 15px 71px;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 800;\n    font-size: 16px;\n    line-height: 100%;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 20px 5px;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 20px 5px;\n    opacity: 0;\n  }\n  \n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n  \n  &:active {\n    &::before {\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 0;\n    }\n  }\n}\n\n",
                    "styleUrl": "./policies-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button [ngClass]=\"classes\">{{ title }}</button>\n"
        },
        {
            "name": "PoliciesCheckboxInputDarkComponent",
            "id": "component-PoliciesCheckboxInputDarkComponent-2bd7d35d2808ad1e1e95a3b24d374466",
            "file": "src/app/pages-components/Policies_Generator/Atoms/checkbox-input-dark/checkbox-input-dark.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-input-dark",
            "styleUrls": [
                "./checkbox-input-dark.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-input-dark.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Math.random()",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "isChecked",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox-input-dark',\n  templateUrl: './checkbox-input-dark.component.html',\n  styleUrls: ['./checkbox-input-dark.component.scss']\n})\n\nexport class PoliciesCheckboxInputDarkComponent {\n  @Input() isChecked: boolean;\n  @Input() title?: string;\n  @Input() id?: number = Math.random();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-input-dark {\n  display: none;\n\n  &__title {\n    margin-left: 40px;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    color: var(--secondary-color);\n    line-height: 24px;\n  }\n\n  &__label {\n    display: block;\n    position: relative;\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      top: 0;\n\n      box-sizing: border-box;\n      width: 24px;\n      height: 24px;\n      border-radius: 4px;\n      border: 1px solid rgba(var(--secondary-color-code), 0.3);\n    }\n  }\n}\n\n.app-checkbox-input-dark:checked + .app-checkbox-input-dark__label {\n  &:after {\n    background-color: var(--secondary-color);\n  }\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 4px;\n    left: 4px;\n    z-index: 2;\n\n    box-sizing: border-box;\n    width: 16px;\n    height: 16px;\n    background: center no-repeat url('../../../../../assets/images/checkbox.svg');\n    background-size: contain;\n  }\n}\n\n",
                    "styleUrl": "./checkbox-input-dark.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div  class=\"app-checkbox-input-dark__container\">\n  <input\n    type=\"checkbox\" \n    [id]=\"id\"\n    name=\"checkbox-input-simple\" \n    class=\"app-checkbox-input-dark\"\n    [checked]=\"isChecked\"\n  >\n  <label [for]=\"id\" class=\"app-checkbox-input-dark__label\">\n    <p class=\"app-checkbox-input-dark__title\" *ngIf=\"title!==''\">\n      {{ title }}\n    </p>\n  </label>\n</div>\n\n"
        },
        {
            "name": "PoliciesColorPickerComponent",
            "id": "component-PoliciesColorPickerComponent-188c2ac935a860dfe93b5037ba8ee449",
            "file": "src/app/pages-components/Policies_Generator/Atoms/color-picker/color-picker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-color-picker",
            "styleUrls": [
                "./color-picker.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./color-picker.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "startHexColor",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "consoleColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "isColorPickerVisible",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "picker",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'picker'"
                        }
                    ]
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42
                },
                {
                    "name": "setColorPickerVisibility",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 19
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, HostListener, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-color-picker',\n  templateUrl: './color-picker.component.html',\n  styleUrls: ['./color-picker.component.scss']\n})\n\nexport class PoliciesColorPickerComponent implements OnChanges, OnInit {\n  @Input() startHexColor: string;\n\n  color: string;\n  value: string;\n  isColorPickerVisible: boolean = false;\n\n  @ViewChild('picker') picker: ElementRef;\n\n  @HostListener('document:click', ['$event'])\n  onClick(event: Event) {\n    const clickedElement = event.target as HTMLElement;\n    if (this.picker.nativeElement && !this.picker.nativeElement.contains(event.target) \n      && !clickedElement.closest('.color-picker__box') && this.isColorPickerVisible) {\n      this.isColorPickerVisible = false;\n    }\n  }\n\n  setColorPickerVisibility() {\n    this.isColorPickerVisible = true;\n  }\n\n  consoleColor = (event) => {\n    const newColor = event.color.rgb;\n    this.color = `rgba(${newColor.r}, ${newColor.g}, ${newColor.b}, ${newColor.a})`;\n    this.value = event.color.hex;\n  }\n\n  ngOnChanges() {\n    this.color = this.startHexColor ? this.startHexColor : '#011949';\n    this.value = this.startHexColor ? this.startHexColor : '#011949';\n  }\n\n  ngOnInit() {\n    this.color = this.startHexColor ? this.startHexColor : '#011949';\n    this.value = this.startHexColor ? this.startHexColor : '#011949';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".color-picker {\n  &-container {\n    width: 200px;\n    position: relative;\n  }\n\n  &__wrapper {\n    width: 100%;\n    position: absolute;\n    top: 50px;\n    left: 0;\n\n    ::ng-deep {\n      .sketch-swatches  {\n        display: none!important;\n      }\n      \n      .color-hue.color-hue-horizontal, .alpha-checkboard, .alpha-gradient  {\n        border-radius: 30px!important;\n      }\n      \n      .sketch-active, .grid {\n        border-radius: 50%!important;\n      }\n      \n      .saturation-black, .saturation-white, .color-saturation {\n        border-radius: 5px!important;\n      }\n      \n      .wrap > input {\n        border-radius: 5px!important;\n      }\n      \n      .color-saturation {\n        margin-bottom: 15px;\n      }\n      \n      .sketch-picker {\n        background-color: var(--card-bg-color)!important;\n        box-shadow: 0px 40px 48px -1px rgba(var(--secondary-color-code), 0.3)!important;\n      }\n    }\n  }\n\n  &__box {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 10px;\n    padding: 8px; \n    background: var(--card-bg-color);\n    border-radius: 8px;\n  }\n\n  &__color {\n    width: 29px;\n    height: 29px;\n    border: 1px solid rgba(var(--secondary-color-code), 0.2);\n    border-radius: 4px;\n  }\n\n  &__value {\n    width: 129px;\n    height: 29px;\n    border-radius: 4px;\n    padding: 5.5px 8px;\n    border: 1px solid rgba(var(--secondary-color-code), 0.2);\n    background-color: var(--text-color);\n    \n    text-transform: uppercase;\n    letter-spacing: 0.03em;\n    color: var(--secondary-color);\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 100%;\n  }\n}\n",
                    "styleUrl": "./color-picker.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges",
                "OnInit"
            ],
            "templateData": "<div class=\"color-picker-container\">\n  <div class=\"color-picker__wrapper\" *ngIf=\"isColorPickerVisible\" #picker>\n    <color-sketch \n      color=\"#A5C3B3\" \n      (onChange)=\"consoleColor($event)\"\n    >\n    </color-sketch>\n  </div>\n  <div class=\"color-picker__box\" (click)=\"setColorPickerVisibility()\">\n    <div \n      class=\"color-picker__color\"\n      [ngStyle]=\"{ 'background-color': color }\"\n    >\n    </div>\n    <div class=\"color-picker__value\">{{ value }}</div>\n  </div>\n</div>\n"
        },
        {
            "name": "PoliciesCustomizedElementComponent",
            "id": "component-PoliciesCustomizedElementComponent-93468e609cb3e74030ecf193d5bd721f",
            "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/customized-element.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-customized-element",
            "styleUrls": [
                "./customized-element.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./customized-element.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialState",
                    "line": 16,
                    "type": "any[]"
                },
                {
                    "name": "sectionId",
                    "line": 17,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "addComponentToSection",
                    "defaultValue": "new EventEmitter()",
                    "line": 21,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "deleteComponentFromSection",
                    "defaultValue": "new EventEmitter()",
                    "line": 22,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "editSection",
                    "defaultValue": "new EventEmitter()",
                    "line": 20,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "setHoverElement",
                    "defaultValue": "new EventEmitter()",
                    "line": 18,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "setNoHoverElement",
                    "defaultValue": "new EventEmitter()",
                    "line": 19,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeBlockNumber",
                    "defaultValue": "-1",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "componentsList",
                    "defaultValue": "[]",
                    "type": "AddItem[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "customizedElement",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'customizedElement'"
                        }
                    ]
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "isVisibleButtonsBlock",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "setActiveBlockNumber",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "setIsVisibleButtonsBlock",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "addItem",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        },
                        {
                            "name": "type",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "callAddComponentToSection",
                    "args": [
                        {
                            "name": "index",
                            "type": ""
                        },
                        {
                            "name": "type",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "callEditSection",
                    "args": [
                        {
                            "name": "elementId",
                            "type": ""
                        },
                        {
                            "name": "data",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "jsdoctags": [
                        {
                            "name": "elementId",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteComponent",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editSectionElement",
                    "args": [
                        {
                            "name": "props",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "jsdoctags": [
                        {
                            "name": "props",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "indexTracker",
                    "args": [
                        {
                            "name": "index",
                            "type": ""
                        },
                        {
                            "name": "id",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 121,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117
                },
                {
                    "name": "setInitialStateOfComponent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 34
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { \n  Component, EventEmitter, Input, OnInit, OnChanges, \n  Output, ElementRef, ViewChild, HostListener, AfterViewInit \n} from '@angular/core';\nimport { AddItem } from './add-dynamic-component/add-item';\nimport { AddService } from './add-dynamic-component/add.service';\nimport { getInitialDataByType, getEditedDataByType } from './helpers';\n\n@Component({\n  selector: 'app-customized-element',\n  templateUrl: './customized-element.component.html',\n  styleUrls: ['./customized-element.component.scss'],\n})\n\nexport class PoliciesCustomizedElementComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() initialState: any[];\n  @Input() sectionId: number;\n  @Output() setHoverElement?: EventEmitter<any> = new EventEmitter();\n  @Output() setNoHoverElement?: EventEmitter<any> = new EventEmitter();\n  @Output() editSection?: EventEmitter<any> = new EventEmitter();\n  @Output() addComponentToSection?: EventEmitter<any> = new EventEmitter();\n  @Output() deleteComponentFromSection?: EventEmitter<any> = new EventEmitter();\n\n  componentsList: AddItem[] = [];\n  isVisibleButtonsBlock = false;\n  activeBlockNumber = -1;\n  isMobile: boolean;\n  \n  constructor(private addService: AddService) {}\n\n  @ViewChild('customizedElement') customizedElement: ElementRef;\n  \n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.customizedElement.nativeElement.clientWidth < 500;\n  }\n\n  /// adding buttons during hover\n  setIsVisibleButtonsBlock = (value: boolean) => {\n    this.isVisibleButtonsBlock = value;\n  }\n\n  setActiveBlockNumber = (index: number) => {\n    this.activeBlockNumber = index;\n    if (index !== -1) {\n      this.setHoverElement.emit();\n    } else {\n      this.setNoHoverElement.emit();\n    }\n  }\n\n  /// managing items(tables. lists, texts) from current component\n  addItem(index: number, type: string) {\n    let initialData = { ...getInitialDataByType(type) };\n    const newAdItem = this.addService.getAds(type, {\n      ...initialData,\n      sectionId: this.sectionId,\n      sectionElementId: index + 1\n    });\n    this.componentsList.splice(index + 1, 0, newAdItem);\n    this.callAddComponentToSection(index, type)\n  }\n\n  deleteComponent(index: number) {\n    this.componentsList.splice(index, 1);\n    this.deleteComponentFromSection.emit({ index: index, sectionId: this.sectionId })\n  }\n\n  editSectionElement(props) {\n    if (props.sectionId === this.sectionId) {\n      const editedData = getEditedDataByType(props.type, props)\n      const newAdItem = this.addService.getAds(props.type, {\n        ...editedData,\n        sectionId: this.sectionId,\n        sectionElementId: props.elementId\n      });\n      this.callEditSection(props.elementId, { ...editedData }) \n      this.componentsList[props.elementId] = newAdItem;\n    }\n  }\n\n  /// if you want to pass props to sections List. managing items(tables. lists, texts) from parent component\n  callAddComponentToSection(index, type) {\n    this.addComponentToSection.emit({\n      sectionId: this.sectionId,\n      index,\n      type,\n    })\n  }\n\n  callEditSection (elementId, data) {\n    this.editSection.emit({\n      sectionId: this.sectionId,\n      sectionElementId: elementId,\n      data\n    })\n  }\n\n  /// setting initial state of component\n  setInitialStateOfComponent() {\n    const initialComponentsList = this.initialState.map(\n      (component, index) => {\n        return this.addService.getAds(component.type, {\n            ...component.dataFromParent, \n            sectionId: this.sectionId,\n            sectionElementId: index\n          })\n      });\n    this.componentsList = [...initialComponentsList];\n  }\n\n\n  ngAfterViewInit() {\n    this.isMobile = this.customizedElement.nativeElement.clientWidth < 500;\n  }\n\n  ngOnInit(): void {\n    this.setInitialStateOfComponent();\n  }\n\n  indexTracker(index, id) {\n    return id;\n  }\n\n  ngOnChanges(): void {\n    this.setInitialStateOfComponent();\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-customized-element {\n  color: var(--secondary-color);\n  border: 1px dashed transparent;\n  border-radius: 8px;\n  transition: 0.3s;\n\n  ::ng-deep {\n    .app-dynamic-table, .app-dynamic-list__container {\n      margin-bottom: 16px!important;\n    }\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &__container {\n    width: 100%;\n    padding: 10px 11px 8px 18px;\n    position: relative;\n    \n    border: 1px dashed transparent;\n    border-radius: 8px;\n    transition: 0.3s;\n\n\n    &:hover {\n      cursor: pointer;\n      border: 1px dashed rgba(var(--secondary-color-code), 0.5);\n      border-radius: 8px;\n    }\n  }\n\n  &__button-delete {\n    width: 10px;\n    height: 10px;\n\n    position: absolute;\n    top: calc(50% - 21px);\n    right: 1%;\n\n    background-color: transparent;\n    border: none;\n\n    z-index: 200;\n    &.delete-table {\n      top: 22px;\n      right: 20px;\n    }\n  }\n\n  &__title {\n    margin-bottom: 18px;\n  }\n\n  &__text{\n    margin-bottom: 18px;\n  }\n\n  &__buttons-container {\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: 10px;\n\n    ::ng-deep {\n      app-small-light-add-button {\n        margin-bottom: 5px;\n      }\n    }\n    \n    & * {\n      margin-right: 16px;\n    }\n  \n    & :last-child {\n      margin-right: 0;\n    }\n  }\n}\n\n",
                    "styleUrl": "./customized-element.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "addService",
                        "type": "AddService"
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "addService",
                        "type": "AddService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"app-customized-element\" #customizedElement>\n  <div *ngIf=\"componentsList.length\">\n    <div *ngFor=\"let component of componentsList; let i = index; trackBy: indexTracker\">\n      <div \n        (mouseenter)=\"setActiveBlockNumber(i)\"\n        (mouseleave)=\"setActiveBlockNumber(-1)\"\n      >\n        <div class=\"app-customized-element__container\">\n          <app-add-dynamic (handler)=\"editSectionElement($event)\" [component]=\"component\"></app-add-dynamic>\n          <button \n            type=\"button\"\n            [ngClass]=\"component.component.name === 'PoliciesDynamicTableComponent'?'app-customized-element__button-delete delete-table': 'app-customized-element__button-delete'\"\n            (click)=\"deleteComponent(i)\"\n            *ngIf=\"activeBlockNumber === i\"\n          >\n            <img src=\"assets/images/deleteX.png\" alt=\"delete\">\n          </button>\n          <div\n            class=\"app-customized-element__buttons-container\"\n            *ngIf=\"activeBlockNumber === i\"\n          >\n            <app-small-light-add-button\n              [title]=\"'Add table'\"\n              [classes]=\"'app-small-light-add-button'\"\n              (click)=\"addItem(i, 'table')\"\n            >\n            </app-small-light-add-button>\n            <app-small-light-add-button\n              [title]=\"'Add paragraph'\"\n              [classes]=\"'app-small-light-add-button'\"\n              (click)=\"addItem(i, 'text')\"\n            >\n            </app-small-light-add-button>\n            <app-small-light-add-button\n              [title]=\"'Add list'\"\n              [classes]=\"'app-small-light-add-button'\"\n              (click)=\"addItem(i, 'list')\"\n            >\n            </app-small-light-add-button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n"
        },
        {
            "name": "PoliciesDarkAddButtonComponent",
            "id": "component-PoliciesDarkAddButtonComponent-93e36638a351628670616990280a7481",
            "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/dark-add-button/dark-add-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dark-add-button",
            "styleUrls": [
                "./dark-add-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dark-add-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dark-add-button',\n  templateUrl: './dark-add-button.component.html',\n  styleUrls: ['./dark-add-button.component.scss']\n})\n\nexport class PoliciesDarkAddButtonComponent implements OnInit {\n  ngOnInit(): void {\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-dark-add-button {\n  padding: 6px 11px;\n  height: 24px;\n  background-color: var(--secondary-color);\n  border: none;\n  border-radius: 4px;\n\n  &__image {\n    width: 12px;\n    height: 12px;\n  }\n}",
                    "styleUrl": "./dark-add-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button type=\"button\" class=\"app-dark-add-button\">\n  <img src=\"assets/images/plus-white.png\" alt=\"plus\">\n</button>\n"
        },
        {
            "name": "PoliciesDynamicListComponent",
            "id": "component-PoliciesDynamicListComponent-1963402ab1365f66cf30eb50f7633fb8",
            "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-list/dynamic-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dynamic-list",
            "styleUrls": [
                "./dynamic-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dynamic-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 10,
                    "type": "any"
                }
            ],
            "outputsClass": [
                {
                    "name": "handler",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dynamicContainer",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dynamicContainer'"
                        }
                    ]
                },
                {
                    "name": "dynamicList",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dynamicList'"
                        }
                    ]
                },
                {
                    "name": "handlePressKey",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "isActive",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "listTitle",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "setData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "titles",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "indexTracker",
                    "args": [
                        {
                            "name": "index",
                            "type": ""
                        },
                        {
                            "name": "id",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 51,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64
                },
                {
                    "name": "setActive",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 25
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, OnChanges, ElementRef, Input, OnInit, EventEmitter, Output, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-dynamic-list',\n  templateUrl: './dynamic-list.component.html',\n  styleUrls: ['./dynamic-list.component.scss'],\n})\n\nexport class PoliciesDynamicListComponent implements OnInit, OnChanges {\n  @Input() data: any;\n  @Output() handler: EventEmitter<any> = new EventEmitter();\n  \n  titles: string[];\n  listTitle: string;\n  isActive: boolean;\n\n  setActive() {\n    this.isActive = true;\n  }\n\n  @ViewChild('dynamicList') dynamicList: ElementRef; \n  @ViewChild('dynamicContainer') dynamicContainer: ElementRef; \n\n  @HostListener('document:click', ['$event'])\n  onClick(event: Event) {\n    if (!this.dynamicContainer.nativeElement.contains(event.target) && this.isActive) {\n      this.handler.emit(\n        {\n          sectionId: this.data.sectionId,\n          elementId: this.data.sectionElementId,\n          type: 'list',\n          titles: this.titles,\n          listTitle: this.listTitle\n        }\n      )\n      this.isActive = false;\n    }\n  }\n\n  handlePressKey = (event, i) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      this.titles.splice(i + 1, 0, 'Type text here');\n      setTimeout(() => {\n        const inputs = this.dynamicList.nativeElement.querySelectorAll('.app-dynamic-list__input');\n        (inputs[i + 1]as HTMLElement).focus();\n      }, 100)\n    }\n  }\n\n  indexTracker(index, id) {\n    return index; \n  }\n\n  setData = () => {\n    this.listTitle = this.data.listTitle || 'Put title';\n    this.titles = this.data.titles || ['Text'];\n  }\n\n  ngOnChanges() {\n    this.setData();\n  }\n\n  ngOnInit() {\n    this.setData();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-dynamic-list {\n  width: 95%;\n  overflow-x: hidden;\n\n  &__input {\n    width: 100%;\n    padding-right: 15px;\n\n    border: none;\n    background-color: transparent;\n    color: var(--secondary-color);\n\n    font-style: italic;\n    line-height: 150%;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n  }\n\n  &__title {\n    width: calc(100% + 35px);\n    padding-right: 35px;\n    margin-bottom: 18px;\n    \n    color: var(--secondary-color);\n    border: none;\n    background-color: transparent;\n    text-transform: capitalize;\n\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 100%;\n  }\n\n  &_title-wrapper {\n    width: 100%;\n    overflow: hidden;\n  }\n\n  &__item {\n    display: flex;\n    align-items: center;\n    margin: 12px 0;\n    margin-right: -15px;\n  }\n\n  &__dot {\n    width: 6px;\n    height: 6px;\n    border-radius: 50%;\n    background-color: var(--secondary-color);\n    margin-right: 18px;\n  }\n}",
                    "styleUrl": "./dynamic-list.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div \n  [id]=\"data.sectionElementId+data.sectionId\" \n  class=\"app-dynamic-list__container\" \n  (click)=\"setActive()\" \n  #dynamicContainer\n>\n  <div class=\"app-dynamic-list__title-wrapper\">\n    <textarea\n      autosize\n      class=\"app-dynamic-list__title\"\n      [(ngModel)]=\"listTitle\"  \n      spellcheck=\"false\"\n    >\n    </textarea>\n  </div>\n  <ul class=\"app-dynamic-list\" #dynamicList>\n    <li \n      class=\"app-dynamic-list__item\" \n      *ngFor=\"let title of titles; let i = index; trackBy:indexTracker\"\n      [id]=\"data.sectionElementId+data.sectionId + i\"\n    >\n      <div class=\"app-dynamic-list__dot\"></div>\n      <textarea\n        autosize\n        class=\"app-dynamic-list__input\" \n        [(ngModel)]=\"titles[i]\" \n        (keypress)=\"handlePressKey($event, i)\"\n        spellcheck=\"false\"\n      >\n      </textarea>\n    </li>\n  </ul>\n</div>\n"
        },
        {
            "name": "PoliciesDynamicSectionsListComponent",
            "id": "component-PoliciesDynamicSectionsListComponent-ef7a9fba5a27dd8851cfd108129744af",
            "file": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dynamic-sections-list",
            "styleUrls": [
                "./dynamic-sections-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dynamic-sections-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialSectionsList",
                    "line": 12
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeSection",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "addComponentToSection",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "deleteComponentFromSection",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "editSection",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "handleHover",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "isElementActive",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isSectionActive",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "isVisibleMobileMenu",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "mobileButton",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'mobileButton'"
                        }
                    ]
                },
                {
                    "name": "mobileMenu",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'mobileMenu'"
                        }
                    ]
                },
                {
                    "name": "sections",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "sectionsList",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sectionsList'"
                        }
                    ]
                },
                {
                    "name": "setHoverElement",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "setNoHoverElement",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "methodsClass": [
                {
                    "name": "addSection",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "indexTracker",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        },
                        {
                            "name": "value",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 116,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137
                },
                {
                    "name": "scrollToActive",
                    "args": [
                        {
                            "name": "index",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setInitialState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120
                },
                {
                    "name": "toggleSectionsMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 25
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 32
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit, HostListener, ViewChild, ElementRef } from '@angular/core';\n \nconst MOBILE_VIEW = 725;\n\n@Component({\n  selector: 'app-dynamic-sections-list',\n  templateUrl: './dynamic-sections-list.component.html',\n  styleUrls: ['./dynamic-sections-list.component.scss']\n})\n\nexport class PoliciesDynamicSectionsListComponent implements OnInit, OnChanges {\n  @Input() initialSectionsList;\n  sections = [];\n  activeSection: number;\n  isSectionActive: boolean = false;\n  isElementActive: boolean = false;\n  isMobile: boolean;\n  isVisibleMobileMenu: boolean;\n\n  @ViewChild('sectionsList') sectionsList: ElementRef;\n  @ViewChild('mobileMenu') mobileMenu: ElementRef;\n  @ViewChild('mobileButton') mobileButton: ElementRef;\n\n  @HostListener('document:click', ['$event'])\n\tonClick(event: Event) {\n    if (!this.mobileMenu.nativeElement.contains(event.target) && !this.mobileButton.nativeElement.contains(event.target)) {\n      this.isVisibleMobileMenu = false;\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.sectionsList.nativeElement.clientWidth < MOBILE_VIEW;\n  }\n\n  toggleSectionsMenu() {\n    this.isVisibleMobileMenu = !this.isVisibleMobileMenu;\n  }\n\n  /// visual effects\n\n  setHoverElement = () => {\n    this.isElementActive = true;\n    this.isSectionActive = false;\n  }\n\n  setNoHoverElement = () => {\n    this.isElementActive = false;\n    this.isSectionActive = true;\n  }\n\n  handleHover = (event: any, index: number) => {\n    this.isSectionActive = index !== -1;\n    this.activeSection = index;\n  }\n\n  scrollToActive(index) {\n    const id = this.sections[index].sectionId;\n    const element: HTMLElement = document.querySelector('#id'+id);\n    element.scrollIntoView();\n    if(this.isVisibleMobileMenu && this.isMobile) {\n      this.isVisibleMobileMenu = false;\n    }\n  }\n\n  /// managing section content\n\n  editSection = (props) => {\n    const indexOfSectionToEdit = this.sections.findIndex(section => section.sectionId === props.sectionId);\n    this.sections[indexOfSectionToEdit].initialState[props.sectionElementId].dataFromParent = props.data;\n  }\n\n  addComponentToSection = ({ sectionId, index, type }) => {\n    let initialData;\n    switch(type) {\n      case 'text': \n        initialData = { title: 'Your new paragraph' };\n        break;\n      case 'list': \n        initialData = { listTitle: 'Put list title', titles: ['Type text here'] };\n        break;\n      case 'table': \n        initialData = { heads: ['text 1'], tableData: [{ 'text 1' : '1.1. Text', }, { 'text 1' : '1.1. Text', }] };\n        break;\n    }\n    const dataOfNewComponent = { type, dataFromParent: initialData };\n    const indexOfSectionToEdit = this.sections.findIndex(section => section.sectionId === sectionId);\n    const newState = [...this.sections[indexOfSectionToEdit].initialState];\n    newState.splice(index + 1, 0, dataOfNewComponent);\n    this.sections[indexOfSectionToEdit].initialState  = [...newState];\n  }\n\n  deleteComponentFromSection = ({ index, sectionId }) => {\n    const indexOfSectionToEdit = this.sections.findIndex(section => section.sectionId === sectionId);\n    const newState = [...this.sections[indexOfSectionToEdit].initialState];\n    newState.splice(index, 1);\n    this.sections[indexOfSectionToEdit].initialState  = [...newState];\n  }\n\n  addSection(index: number) {\n    const initialSectionState =  [{\n      type: 'text',\n      dataFromParent: {\n        title: `For the purpose of this Privacy Policy, we are a Data Controller of your personal information. Our legal basis for collecting and using your personal information, as described in this Privacy Policy, depends on the information we collect and the specific context in which we collect it. We may process your personal information because:`\n      }\n    },]\n    this.sections.push(\n      {\n        initialState: [...initialSectionState],\n        title: `New section ${index + 1}`,\n        sectionId: Date.now(),\n      }\n    );\n  }\n\n  indexTracker(index: number, value: any) {\n    return index;\n  }\n\n  setInitialState() {\n    if (this.sections.length === 0 && !this.initialSectionsList) {\n      this.addSection(0);\n    }\n    if (this.initialSectionsList) {\n      this.sections = this.initialSectionsList\n    }\n  }\n\n  ngAfterViewInit() {\n    this.isMobile = this.sectionsList.nativeElement.clientWidth < MOBILE_VIEW;\n  }\n\n  ngOnChanges(): void {\n    this.setInitialState();\n  }\n\n  ngOnInit(): void {\n    this.setInitialState();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-dynamic-sections-list {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  margin-top: 10px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n\n  border: 1px solid var(--status-bar-bg-color);\n  overflow-x: hidden;\n\n  &__open-button {\n    position: absolute;\n    top: -1px;\n    left: -1px;\n    z-index: 2;\n\n    width: 25px;\n    height: 25px;\n    padding: 5px;\n    \n    outline: none;\n    border: none;\n    background-color: transparent;\n    border: 1px solid var(--status-bar-bg-color);\n    transform: rotate(90deg);\n\n    & > img {\n      width: 15px;\n      height: 10px;\n    }\n  }\n\n  &__main-title-input {\n    width: 100%;\n    padding-right: 15px;\n\n    border: none;\n    background-color: transparent;\n    color: var(--secondary-color);\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n  }\n\n  &__navigation {\n    position: fixed;\n\n    width: 24%;\n    overflow-y: scroll;\n    height: 90%;\n    padding: 16px;\n\n    color: rgba(var(--secondary-color-code), 0.7);\n    border: 1px solid var(--status-bar-bg-color);\n    font-family: 'Gramatica Regular', 'open-sans';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 100%;\n\n    &.mobile {\n      width: 250px;\n      position: absolute;\n      background-color: var(--text-color);\n      z-index: 3;\n      top: 0;\n      will-change: transform;\n      transition: left 1s;\n    }\n\n    &::-webkit-scrollbar {\n      width: 3px;\n    }\n    \n    &::-webkit-scrollbar-track {\n      background: transparent;\n    }\n    \n    &::-webkit-scrollbar-thumb {\n      width: 5px;\n      background: var(--secondary-color);\n      -webkit-border-radius: 20px;\n      border-radius: 20px;\n    }\n  }\n\n  &__line {\n    width: 100%;\n    margin-top: 15px;\n    border-bottom: 1px solid rgba(var(--secondary-color-code), 0.1);\n  }\n\n  &__section {\n    width: 100%;\n    overflow: hidden;\n    padding-top: 10px;\n    margin-right: -14px;\n    margin-bottom: 16px;\n    border: 1px dashed transparent;\n    border-radius: 8px;\n  }\n\n  &__sections {\n    padding: 0 14px;\n  }\n\n  &__buttons-container {\n    display: flex;\n    margin-bottom: 10px;\n    margin-left: 18px;\n    \n    & * {\n      margin-right: 16px;\n    }\n  \n    & :last-child {\n      margin-right: 0;\n    }\n  }\n\n  &__content {\n    width: 74%;\n    height: 95%;\n    padding-top: 20px;\n    margin-left: 26%;\n    overflow-y: scroll;\n\n    ::ng-deep {\n      .simple-policy-generator-button {\n        margin: 32px 0 32px 32px;\n      }\n    }\n\n    &::-webkit-scrollbar {\n      width: 3px;\n    }\n    \n    &::-webkit-scrollbar-track {\n      background: transparent;\n    }\n    \n    &::-webkit-scrollbar-thumb {\n      width: 5px;\n      background: var(--secondary-color);\n      -webkit-border-radius: 20px;\n      border-radius: 20px;\n    }\n  }\n\n  &__titles {\n    margin-top: 19px;\n  }\n\n  &__title {\n    color: rgba(var(--secondary-color-code), 0.7);\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    &.active {\n      color: rgba(var(--secondary-color-code), 1);\n      font-weight: bold;\n    }\n  }\n\n  &__main-title {\n    line-height: 180%;\n    margin-left: 18px;\n    width: calc(100% + 15px);\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    color: var(--secondary-color);\n  }\n}\n",
                    "styleUrl": "./dynamic-sections-list.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"app-dynamic-sections-list\" #sectionsList>\n  <ng-container *ngIf=\"!isMobile\">\n    <div class=\"app-dynamic-sections-list__navigation\">\n      <app-small-light-add-button\n        [title]=\"'Add section'\"\n        [classes]=\"'app-small-light-add-button'\"\n        (click)=\"addSection(sections.length)\"\n      >\n      </app-small-light-add-button>\n        <ul *ngFor=\"let section of sections; let i = index;trackBy:indexTracker\" class=\"app-dynamic-sections-list__titles\">\n          <li \n            [ngClass]=\"i===activeSection ? 'app-dynamic-sections-list__title active' : 'app-dynamic-sections-list__title'\"\n            (click)=\"scrollToActive(i)\"\n          >\n            {{ section.title }}\n          </li>\n        </ul>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"isMobile\">\n    <button \n      type=\"button\" \n      class=\"app-dynamic-sections-list__open-button\"\n      (click)=\"toggleSectionsMenu()\"\n      #mobileButton\n    >\n      <img src=\"assets/images/customPolicy/open.png\" alt=\"arrow\">\n    </button>\n    <div \n      #mobileMenu\n      class=\"app-dynamic-sections-list__navigation mobile\"\n      [style.left]=\"isVisibleMobileMenu ? '0' : '-100%'\"\n    >\n      <app-small-light-add-button\n        [title]=\"'Add section'\"\n        [classes]=\"'app-small-light-add-button'\"\n        (click)=\"addSection(sections.length)\"\n      >\n      </app-small-light-add-button>\n        <ul *ngFor=\"let section of sections; let i = index;trackBy:indexTracker\" class=\"app-dynamic-sections-list__titles\">\n          <li \n            [ngClass]=\"i===activeSection ? 'app-dynamic-sections-list__title active' : 'app-dynamic-sections-list__title'\"\n            (click)=\"scrollToActive(i)\"\n          >\n            {{ section.title }}\n          </li>\n        </ul>\n    </div>\n  </ng-container>\n  <div \n    class=\"app-dynamic-sections-list__content\"\n    [ngStyle]=\"isMobile && { 'margin': '15px 0 0', 'width': '100%' }\"\n  >\n    <ul \n      *ngFor=\"let section of sections; let i = index;\"\n      class=\"app-dynamic-sections-list__sections\"\n      [style.padding]=\"isMobile && '0'\"\n    >\n      <li \n        [id]=\"'id'+section.sectionId\"\n        (mouseenter)=\"handleHover($event, i)\"\n        (mouseleave)=\"handleHover($event, -1)\"\n        class=\"app-dynamic-sections-list__section\"\n        [style.border]=\"((!isElementActive || section.initialState.length === 0) && isSectionActive && activeSection === i) ? '1px dashed rgba(var(--secondary-color-code), 0.5)' : none\"\n      >\n        <p class=\"app-dynamic-sections-list__main-title\">\n          <textarea\n            autosize\n            [(ngModel)]=\"sections[i].title\" \n            spellcheck=\"false\"\n            class=\"app-dynamic-sections-list__main-title-input\"\n          >\n          </textarea>\n        </p>\n        <app-customized-element \n          (addComponentToSection)=\"addComponentToSection($event)\"\n          (deleteComponentFromSection)=\"deleteComponentFromSection($event)\"\n          (editSection)=\"editSection($event)\"\n          (setHoverElement)=\"setHoverElement()\"\n          (setNoHoverElement)=\"setNoHoverElement()\"\n          [initialState]=\"section.initialState\"\n          [sectionId]=\"section.sectionId\"\n        >\n        </app-customized-element>\n        <div\n          class=\"app-dynamic-sections-list__buttons-container\"\n          *ngIf=\"(!isElementActive || section.initialState.length === 0) && isSectionActive && activeSection === i\"\n        >\n          <app-small-light-add-button\n            [title]=\"'Add table'\"\n            [classes]=\"'app-small-light-add-button'\"\n            (click)=\"addComponentToSection({ sectionId:section.sectionId, index:section.initialState.length-1, type:'table' })\"\n          >\n          </app-small-light-add-button>\n          <app-small-light-add-button\n            [title]=\"'Add a paragraph'\"\n            [classes]=\"'app-small-light-add-button'\"\n            (click)=\"addComponentToSection({ sectionId:section.sectionId, index:section.initialState.length-1, type:'text' })\"\n          >\n          </app-small-light-add-button>\n          <app-small-light-add-button\n            [title]=\"'Add list'\"\n            [classes]=\"'app-small-light-add-button'\"\n            (click)=\"addComponentToSection({ sectionId:section.sectionId, index:section.initialState.length-1, type:'list' })\"\n          >\n          </app-small-light-add-button>\n        </div>\n        <div class=\"app-dynamic-sections-list__line\"></div>\n      </li>\n    </ul>\n    <app-simple-policy-generator-button\n      [title]=\"'confirm'\"\n    >\n    </app-simple-policy-generator-button>\n  </div>\n</div>"
        },
        {
            "name": "PoliciesDynamicTableComponent",
            "id": "component-PoliciesDynamicTableComponent-a114d9f246010f1a203ce82de8ca08ba",
            "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-table/dynamic-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dynamic-table",
            "styleUrls": [
                "./dynamic-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dynamic-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 9,
                    "type": "any"
                }
            ],
            "outputsClass": [
                {
                    "name": "handler",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeColumn",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "addColumn",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "addRow",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "columns",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "editCeil",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "editHead",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "editSectionElement",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "heads",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "isActive",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "mainColumn",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "rows",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "setData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "table",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'table'"
                        }
                    ]
                },
                {
                    "name": "tableData",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119
                },
                {
                    "name": "setIsActive",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104
                },
                {
                    "name": "showNext",
                    "args": [
                        {
                            "name": "direction",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "direction",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 91
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 85
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, HostListener, ElementRef, ViewChild, OnChanges, Input, OnInit, Output, EventEmitter, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dynamic-table',\n  templateUrl: './dynamic-table.component.html',\n  styleUrls: ['./dynamic-table.component.scss']\n})\nexport class PoliciesDynamicTableComponent implements OnChanges, OnInit, AfterViewInit {\n  @Input() data: any;\n  @Output() handler: EventEmitter<any> = new EventEmitter()\n\n  heads: string[];\n  tableData: any[];\n  isMobile: boolean;\n  mainColumn: string;\n  editSectionElement;\n  isActive: boolean = false;\n\n  rows = 1;\n  columns = 1;\n  activeColumn = '';\n\n  showNext(direction: string) {\n    const headsListWithoutMain = this.heads.filter(head => head !== this.mainColumn);\n    const currentIndex = headsListWithoutMain.findIndex(head => head === this.activeColumn);\n    let nextIndex;\n    \n    if (direction =='forward') {\n      nextIndex = (currentIndex + 1 > headsListWithoutMain.length - 1) ? 0 : currentIndex + 1; \n    } else if (direction =='back') {\n      nextIndex = (currentIndex - 1 < 0) ? headsListWithoutMain.length - 1 : currentIndex - 1; \n    }\n    this.activeColumn = headsListWithoutMain[nextIndex];\n  }\n\n  addRow = () => {\n    this.rows = this.rows + 1;\n    let newDataItem = {};\n    const newRow = this.heads.forEach((head, i) => {\n      newDataItem[head]=`${this.rows}.${i + 1}. Text`\n    });\n    this.tableData = [...this.tableData, newDataItem];\n  }\n\n  addColumn = () => {\n    this.columns = this.columns + 1;\n    this.heads = [...this.heads, `Text ${this.columns}`];\n    this.tableData.forEach((item, i )=> {\n      item[`Text ${this.columns}`] = `${i + 1}.${this.columns}. Text`;\n    })\n    this.activeColumn = this.heads[1];\n    const width = document.querySelector('.app-dynamic-table').clientWidth;\n    this.isMobile = (width / this.columns) < 250;\n  }\n\n  editHead = (event, headTitle) => {\n    const index = this.heads.findIndex(head => head === headTitle);\n    const activeIndex = this.heads.findIndex(head => head === this.activeColumn);\n    const value = event.target.value;\n    if (index === activeIndex) {\n      this.activeColumn = value;\n    }\n    if (index === 0) {\n      this.mainColumn = value;\n    }\n    if (event.target.value.length) {\n      this.heads[index] = value;\n      this.tableData.forEach(item => {\n        item[`${value}`] = item[headTitle];\n        delete item[headTitle];\n      })\n    } else {\n      this.heads[index] = headTitle;\n    }\n  }\n\n  editCeil = (event, index, head) => {\n    if (event.target.value.length) {\n      this.tableData[index][head] = event.target.value;\n    }\n  }\n\n  @ViewChild('table') table: ElementRef;\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    const width = this.table.nativeElement.clientWidth;\n    this.isMobile = (width / this.columns) < 250;\n  }\n\n  @HostListener('document:click', ['$event'])\n  onClick(event: Event) {\n    if (!this.table.nativeElement.contains(event.target) && this.isActive) {\n      this.handler.emit({\n        sectionId: this.data.sectionId,\n        elementId: this.data.sectionElementId,\n        heads: this.heads,\n        tableData: this.tableData,\n        type: 'table'\n      })\n      this.isActive = false;\n    }\n  }\n\n  setIsActive() {\n    this.isActive = true;\n  }\n\n  setData = () => {\n    this.heads = this.data.heads || ['text 1'];\n    this.mainColumn = this.heads[0];\n    if (this.data.heads.length > 1) {\n      this.activeColumn = this.heads[1];\n    }\n    this.tableData = this.data.tableData || [{ 'text 1' : '1.1. Text' }];\n    this.rows = this.tableData.length;\n    this.columns = Object.keys(this.tableData[0]).length;\n  }\n\n  ngOnInit() {\n    this.setData();\n  }\n\n  ngAfterViewInit() {\n    const width = document.querySelector('.app-dynamic-table').clientWidth;\n    this.isMobile = (width / this.columns) < 250;\n  }\n\n  ngOnChanges() {\n    this.setData();\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-dynamic-table {\n  position: relative;\n  width: 100%;\n  padding-bottom: 70px;\n  overflow: hidden;\n  \n  border-radius: 12px;\n  color: var(--secondary-color);\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n  border-spacing: 0;\n  transition: margin 3s;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n\n  &__head-input {\n    width: calc(100% + 84px);\n    padding-right: 84px;\n\n    background: transparent;\n    border: none;\n\n    color: rgba(var(--secondary-color-code), 0.75);\n    text-transform: capitalize;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 12px;\n  }\n\n  &__ceil-input {\n    width: calc(100% + 84px);\n    padding-right: 84px;\n\n    background: transparent;\n    border: none;\n\n    text-transform: capitalize;\n    color: rgba(var(--secondary-color-code), 1);\n    font-weight: 300;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-size: 12px;\n  }\n\n  &__add-row-button {\n    width: calc(100% - 32px);\n    height: 38px;\n    position: absolute;\n    margin: 16px 16px 16px;\n  }\n\n  &__add-column-button {\n    position: absolute;\n    right: 22px;\n    top: 7px;\n  }\n\n  &__head {\n    height: auto;\n    padding: 13px 106px 13px 16px;\n    box-sizing: border-box;\n    position: relative;\n    \n    text-transform: capitalize;\n    color: rgba(var(--secondary-color-code), 0.75);\n    background-color: rgba(var(--secondary-color-code), 0.2);\n  }\n\n  &__head-item {\n    margin-left: 80px;\n    overflow: hidden;\n  }\n\n  &__row-item {\n    margin-left: 80px;\n    overflow: hidden;\n  }\n\n  &__row {\n    margin-bottom: 20px;\n    padding: 13px 16px;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 12px;\n  }\n\n  &__button {\n    width: 24px;\n    height: 24px;\n    position: absolute;\n    top: 7px;\n    z-index: 2;\n\n    border-radius: 50%;\n    background-color: rgba(var(--secondary-color-code), 1);\n    border: none;\n  }\n}\n\n.prev {\n  left: 42%;\n  transform: rotate(180deg);\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0px;\n    left: 1px;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    background: center no-repeat url('../../../../../assets/images/next.svg');\n  }\n}\n\n.next {\n  right: 65px;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 1px;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    background: center no-repeat url('../../../../../assets/images/next.svg');\n  }\n}\n\ntd {\n  padding: 16px 16px 0;\n  text-align: left;\n}\n\nth {\n  padding: 12px 16px 13px 16px;\n  text-align: left;\n}\n\nth:last-child {\n  padding: 12px 76px 13px 16px;\n}",
                    "styleUrl": "./dynamic-table.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges",
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"app-dynamic-table__container\" (click)=\"setIsActive()\">\n  <!-- !!!!!!!!!mobile version of table!!!!!!!!!!!!  -->\n  <table \n    #table\n    id=\"table\" \n    *ngIf=\"isMobile\" \n    class=\"app-dynamic-table\"\n  >\n    <div class=\"app-dynamic-table__add-column-button\">\n      <app-dark-add-button (click)=\"addColumn()\"></app-dark-add-button>\n    </div>\n    <tr class=\"app-dynamic-table__head\">\n     <th class=\"app-dynamic-table__head-item app-transparent-table__main-column\">\n      <textarea\n        autosize\n        class=\"app-dynamic-table__head-input\" \n        [value]=\"mainColumn\"\n        (change)=\"editHead($event, mainColumn)\"\n        spellcheck=\"false\"\n      >\n      </textarea>\n     </th>\n     <th  class=\"app-dynamic-table__head-item\">\n      <textarea\n        autosize\n        class=\"app-dynamic-table__head-input\" \n        [value]=\"activeColumn\"\n        (change)=\"editHead($event, activeColumn)\"\n        spellcheck=\"false\"\n      >\n      </textarea>\n     </th>\n    </tr>\n    <tr \n      class=\"app-dynamic-table__row\"\n      *ngFor=\"let item of tableData; let i = index\"\n    >\n      <td class=\"app-dynamic-table__row-item\">\n        <textarea\n          autosize\n          class=\"app-dynamic-table__ceil-input\" \n          [value]=\"item[mainColumn]\"\n          (change)=\"editCeil($event, i, mainColumn)\"\n          spellcheck=\"false\"\n        >\n        </textarea>\n      </td>\n      <td class=\"app-dynamic-table__row-item\">\n        <textarea\n          autosize\n          class=\"app-dynamic-table__ceil-input\" \n          [value]=\"item[activeColumn]\"\n          (change)=\"editCeil($event, i, activeColumn)\"\n          spellcheck=\"false\"\n        >\n        </textarea>\n      </td>\n    </tr>\n    <button class=\"prev app-dynamic-table__button\" type=\"button\" (click)=\"showNext('back')\"></button>\n    <button class=\"next app-dynamic-table__button\"type=\"button\" (click)=\"showNext('forward')\"></button>\n    <div class=\"app-dynamic-table__add-row-button\">\n      <app-small-light-add-button\n        (click)=\"addRow()\"\n        [title]=\"'Add row'\"\n        [classes]=\"'app-big-light-add-button'\"\n      ></app-small-light-add-button>\n    </div>\n  </table> \n  \n  <!-- !!!!!!!!!desktop version of table!!!!!!!!!!!!  -->\n  <table #table class=\"app-dynamic-table\" *ngIf=\"!isMobile\" >\n    <div class=\"app-dynamic-table__add-column-button\">\n      <app-dark-add-button (click)=\"addColumn()\"></app-dark-add-button>\n    </div>\n    <tr class=\"app-dynamic-table__head\">\n      <th class=\"app-dynamic-table__head-item\" *ngFor=\"let head of heads; let i = index\">\n        <textarea\n          autosize\n          class=\"app-dynamic-table__head-input\" \n          [value]=\"head\"\n          (change)=\"editHead($event, head)\"\n          spellcheck=\"false\"\n        >\n        </textarea>\n      </th>\n    </tr>\n    <tr class=\"app-dynamic-table__row\" *ngFor=\"let item of tableData; let i = index\">\n      <td *ngFor=\"let head of heads; let j = index\" class=\"app-dynamic-table__row-item\">\n        <textarea\n          autosize\n          class=\"app-dynamic-table__ceil-input\" \n          [value]=\"item[head]\"\n          (change)=\"editCeil($event, i, head)\"\n          spellcheck=\"false\"\n        >\n        </textarea>\n      </td>\n    </tr>\n    <div class=\"app-dynamic-table__add-row-button\">\n      <app-small-light-add-button\n        (click)=\"addRow()\"\n        [title]=\"'Add row'\"\n        [classes]=\"'app-big-light-add-button'\"\n      ></app-small-light-add-button>\n    </div>\n  </table>\n</div>\n\n"
        },
        {
            "name": "PoliciesDynamicTextComponent",
            "id": "component-PoliciesDynamicTextComponent-9e5d4df533792f67d9c2131d4061c6cf",
            "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-text/dynamic-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dynamic-text",
            "styleUrls": [
                "./dynamic-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dynamic-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 9,
                    "type": "any"
                }
            ],
            "outputsClass": [
                {
                    "name": "handler",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isActive",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "text",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'text'"
                        }
                    ]
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                },
                {
                    "name": "setIsActive",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 21
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, EventEmitter, HostListener, Input, OnChanges, OnInit, Output, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-dynamic-text',\n  templateUrl: './dynamic-text.component.html',\n  styleUrls: ['./dynamic-text.component.scss']\n})\nexport class PoliciesDynamicTextComponent implements OnInit, OnChanges {\n  @Input() data: any;\n  @Output() handler: EventEmitter<any> = new EventEmitter()\n\n  isActive: boolean;\n  title: string;\n\n  setIsActive() {\n    this.isActive = true;\n  }\n\n  @ViewChild('text') text: ElementRef;\n  @HostListener('document:click', ['$event'])\n  onClick(event: Event) {\n    if (!this.text.nativeElement.contains(event.target) && this.isActive) {\n      this.handler.emit(\n        {\n          sectionId: this.data.sectionId,\n          elementId: this.data.sectionElementId,\n          title: this.title,\n          type: 'text'\n        }\n      )\n      this.isActive = false;\n    }\n  }\n\n  ngOnInit(): void {\n    this.title = this.data.title;\n  }\n\n  ngOnChanges(): void {\n    this.title = this.data.title;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-dynamic-text {\n  width: 100%;\n  overflow-x: hidden;\n  margin-bottom: 16px;\n\n  &__input {\n    width: 100%;\n    padding-right: 15px;\n    border: none;\n    background-color: transparent;\n\n    color: var(--secondary-color);\n    line-height: 150%;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n  }\n\n  &__wrapper {\n    margin-right: -15px;\n  }\n}",
                    "styleUrl": "./dynamic-text.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"app-dynamic-text\" #text (click)=\"setIsActive()\">\n  <div class=\"app-dynamic-text__wrapper\">\n    <textarea\n      autosize\n      [(ngModel)]=\"title\" \n      spellcheck=\"false\"\n      class=\"app-dynamic-text__input\" \n    >\n    </textarea>\n  </div>\n</div>\n"
        },
        {
            "name": "PoliciesGradientBorderContainerComponent",
            "id": "component-PoliciesGradientBorderContainerComponent-2ca1ead9e2d03f41677d6a56a64915e2",
            "file": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gradient-border-container",
            "styleUrls": [
                "./gradient-border-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gradient-border-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "contentBgColor",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "height",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "isSelected",
                    "line": 9,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "color",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "DEFAULT_BG_COLOR",
                    "defaultValue": "'#EAEDF2'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "setInitialValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gradient-border-container',\n  templateUrl: './gradient-border-container.component.html',\n  styleUrls: ['./gradient-border-container.component.scss']\n})\nexport class PoliciesGradientBorderContainerComponent implements OnInit, OnChanges {\n  @Input() isSelected: boolean;\n  @Input() contentBgColor?: string;\n  @Input() height: number;\n\n  DEFAULT_BG_COLOR = '#EAEDF2';\n  classes = '';\n  color = '';\n\n  setInitialValues() {\n    this.classes = this.isSelected ? 'app-container-gradient active' : 'app-container-gradient';\n    this.color = this.contentBgColor ? this.contentBgColor : this.DEFAULT_BG_COLOR;\n  }\n\n  ngOnInit(): void {\n    this.setInitialValues()\n  }\n\n  ngOnChanges() {\n    this.setInitialValues()\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-container-gradient {\n  position: relative;\n  padding: 2px;\n  width: 147px;\n  height: 70px;\n  border-radius: 8px;\n  transition: 0.3s;\n\n  &:hover {\n    cursor: pointer;\n    background: var(--success-grad-light)!important;\n  }\n\n  &.active {\n    background: var(--success-grad-light)!important;\n\n          \n    &::after {\n      content: \"\";\n      position: absolute;\n      top: 8px;\n      right: 8px;\n\n      width: 19px;\n      height: 19px;\n\n      background: var(--success-grad-light);\n      border-radius: 50%;\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      z-index: 2;\n\n      box-sizing: border-box;\n      width: 19px;\n      height: 19px;\n      border-radius: 50%;\n\n      background: no-repeat center url('../../../../../assets/images/checkbox.svg');\n    }\n  }\n\n  &__content {\n    width: 100%;\n    height: 100%;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n}",
                    "styleUrl": "./gradient-border-container.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div [ngClass]=\"classes\" [ngStyle]=\"{ 'background': contentBgColor, 'height': height+'px' }\">\n  <div class=\"app-container-gradient__content\" [ngStyle]=\"{ 'background-color': contentBgColor }\">\n    <ng-content></ng-content>\n  </div>\n</div>\n"
        },
        {
            "name": "PoliciesPreviewContainerComponent",
            "id": "component-PoliciesPreviewContainerComponent-aa39526f6214b85082a17ec2aeb41e8d",
            "file": "src/app/pages-components/Policies_Generator/Atoms/preview-container/preview-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-preview-container",
            "styleUrls": [
                "./preview-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./preview-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-preview-container',\n  templateUrl: './preview-container.component.html',\n  styleUrls: ['./preview-container.component.scss']\n})\nexport class PoliciesPreviewContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-preview-container {\n  min-height: 141px;\n  padding: 20px 32px 32px;\n  background-color: rgba(var(--secondary-color-code), 0.05);\n  border-radius: 12px;\n  text-align: center;\n\n\n  &__content {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  &__title {\n    margin-bottom: 30px;\n    text-transform: uppercase;\n    color: rgba(var(--secondary-color-code), 0.5);\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 100%;\n  }\n}",
                    "styleUrl": "./preview-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-preview-container\">\n  <p class=\"app-preview-container__title\">Preview</p>\n  <div class=\"app-preview-container__content\"> \n    <ng-content></ng-content>\n  </div>\n</div>\n"
        },
        {
            "name": "PoliciesSelectInputWithInitialValueComponent",
            "id": "component-PoliciesSelectInputWithInitialValueComponent-bd31a23898b9cd9e45e71d6f54ed1dbc",
            "file": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-input-with-initial-value",
            "styleUrls": [
                "./select-input-with-initial-value.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-input-with-initial-value.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "imagesPaths",
                    "line": 11,
                    "type": "string[]"
                },
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "onItemSelect",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "handleValueChange",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-select-input-with-initial-value',\n  templateUrl: './select-input-with-initial-value.component.html',\n  styleUrls: ['./select-input-with-initial-value.component.scss'],\n})\n\nexport class PoliciesSelectInputWithInitialValueComponent implements OnInit {\n  @Input() items: string[];\n  @Input() imagesPaths?: string[]\n  @Output() onItemSelect: EventEmitter<any> = new EventEmitter();\n\n  selectedItem: string;\n\n  handleValueChange(value) {\n    this.onItemSelect.emit(value)\n  }\n\n  ngOnInit(): void {\n    this.selectedItem = this.items[0];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".policies-select {\n  &__wrapper {\n    display: flex;\n    align-items: center;\n  \n    & > img {\n      margin-right: 15px;\n    }\n  }\n\n  &__input {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 12px;\n  }\n\n  &__text {\n    text-transform: capitalize;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 100%;\n  }\n\n  ::ng-deep {\n    .ng-dropdown-panel-items.scroll-host {\n      width: 100%;\n    }\n\n    .ng-select {\n      position: relative;\n      box-sizing: border-box;\n      height: 48px; \n      width: 242px;\n    \n      background: transparent;\n      border: 1px solid rgba(var(--secondary-color-code), 0.3);\n      border-radius: 8px;\n      color: rgba(var(--secondary-color-code), 1);\n    \n      &:hover {\n        cursor: pointer;\n      }\n    \n      &:after {\n        content: url('../../../../../../assets/images/roll-up.png');\n        position: absolute;\n        top: 17px;\n        right: 21px;\n        transform: rotate(180deg);\n      }\n    \n      &.ng-select-opened{\n        &:after {\n          content: url('../../../../../../assets/images/roll-up.png');\n          position: absolute;\n          top: 17px;\n          right: 21px;\n          transform: rotate(0deg);\n        }\n      }\n    \n      &-container {\n        width: 100%;\n        height: 46px;\n        padding: 0 21px 0 16px;  \n        margin-bottom: 4px;\n        display: flex;\n        align-items: center;\n      }\n    }\n    \n    .ng-option {\n      background-color: var(--text-color);\n      padding: 0 21px 0 16px;  \n      height: 46px;\n      display: flex!important;\n      align-items: center;\n    \n      &:hover {\n        background-color: var(--card-bg-color);\n      }\n    }\n    \n    .ng-dropdown-panel {\n      position: absolute;\n    }\n    \n    .scroll-host {\n      color: rgba(var(--dark-color-code), 1);\n      position: absolute;\n      box-shadow: 0px 30px 70px rgba(44, 59, 82, 0.2);\n      border: 1px solid #B1B9C8;\n      border-radius: 8px;\n    }\n    \n    .ng-clear-wrapper {\n      display: none;\n    }\n  }\n}\n",
                    "styleUrl": "./select-input-with-initial-value.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"policies-select\">\n  <ng-select \n    [(ngModel)]=\"selectedItem\"\n    class=\"policies-select__input\" \n    [hideSelected]=\"true\"\n    [searchable]=\"false\"\n    (change)=\"handleValueChange($event)\"\n  >\n    <ng-option class=\"policies-select__option\" *ngFor=\"let item of items; let i = index\" [value]=\"item\">\n      <div class=\"policies-select__wrapper\">\n        <img *ngIf=\"imagesPaths\" [src]=\"imagesPaths[i]\" [alt]=\"item\">\n        <p class=\"policies-select__text\">\n          {{ item }}\n        </p>\n      </div>\n    </ng-option>\n  </ng-select>\n</div>\n\n"
        },
        {
            "name": "PoliciesSmallLightAddButtonComponent",
            "id": "component-PoliciesSmallLightAddButtonComponent-93b7a68a3dc9ffb8eafb201bbcc6a759",
            "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/small-light-add-button/small-light-add-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-small-light-add-button",
            "styleUrls": [
                "./small-light-add-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./small-light-add-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-small-light-add-button',\n  templateUrl: './small-light-add-button.component.html',\n  styleUrls: ['./small-light-add-button.component.scss']\n})\nexport class PoliciesSmallLightAddButtonComponent {\n  @Input() classes: string;\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-small-light-add-button {\n  padding: 11px 16px 13px;\n  border: none;\n  border-radius: 6px;\n  background: var(--status-bar-bg-color);\n  color: var(--secondary-color);\n  transition: 0.3s;\n\n  font-family: 'Gramatica Regular', 'open-sans';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 100%;\n\n  &__image {\n    margin-right: 16px;\n  }\n\n  &:hover {\n    background: var(--asimetric-bg-color);\n  }\n\n  &:active {\n    background: var(--status-bar-bg-color);\n  }\n}\n\n.app-big-light-add-button {\n  width: 100%;\n  padding: 11px 16px 13px;\n  border: none;\n  border-radius: 6px;\n  background: var(--status-bar-bg-color);\n  color: var(--secondary-color);\n  transition: 0.3s;\n  text-align: left;\n\n  font-family: 'Gramatica Regular', 'open-sans';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 100%;\n\n  &__image {\n    margin-right: 16px;\n  }\n\n  &:hover {\n    background: var(--asimetric-bg-color);\n  }\n\n  &:active {\n    background: var(--status-bar-bg-color);\n  }\n}",
                    "styleUrl": "./small-light-add-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button type=\"button\" [ngClass]=\"classes\">\n  <img \n    src=\"assets/images/plus-transparent.png\" \n    alt=\"plus\"\n    class=\"app-small-light-add-button__image\"\n  >\n  {{ title }}\n</button>\n"
        },
        {
            "name": "PoliciesTextareaCopyToClipboardComponent",
            "id": "component-PoliciesTextareaCopyToClipboardComponent-f81dbd4238ec20de9dc36de68fb56d84",
            "file": "src/app/pages-components/Policies_Generator/Atoms/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-textarea-copy-to-clipboard",
            "styleUrls": [
                "./textarea-copy-to-clipboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./textarea-copy-to-clipboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialValue",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "placeholderText",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isButtonVisible",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "textarea",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'textarea'"
                        }
                    ]
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "copyToClipboard",
                    "args": [
                        {
                            "name": "inputElement",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "inputElement",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                },
                {
                    "name": "setVisibleButton",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-textarea-copy-to-clipboard',\n  templateUrl: './textarea-copy-to-clipboard.component.html',\n  styleUrls: ['./textarea-copy-to-clipboard.component.scss']\n})\n\nexport class PoliciesTextareaCopyToClipboardComponent implements OnInit {\n  @Input() placeholderText: string;\n  @Input() initialValue: string;\n\n  isButtonVisible: boolean = false;\n\n  @ViewChild('textarea') textarea: HTMLElement;\n\n  value = '';\n\n  setVisibleButton(value: boolean) {\n    this.isButtonVisible = value;\n  }\n\n  copyToClipboard (inputElement) {\n    inputElement.select();\n    document.execCommand('copy');\n    inputElement.setSelectionRange(0, 0);\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".text-area-copy-to-clipboard {\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  background-color: var(--text-color);\n  transition: 0.3s;\n  border-radius: 12px;\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n\n  &:hover {\n    background-color: rgba(var(--info-color-code), 0.2);\n  }\n\n  &__button {\n    height: 40px;\n    padding: 0 12px 0 16px;\n\n    position: absolute;\n    top: calc(50% - 20px);\n    left: calc(50% - 110px);\n\n    display: flex;\n    align-items: center;\n\n    background: rgba(var(--info-color-code), 0.3);\n    color: var(--info-color);\n    border-radius: 8px;\n    border: none;\n    transition: 0.3s;\n\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 100%;\n\n    & > svg-icon {\n      margin-right: 13px;\n    }\n\n    &:hover {\n      background: rgba(var(--info-color-code), 0.4);\n    }\n\n    &:active {\n      background: rgba(var(--info-color-code), 0.3);\n    }\n  }\n\n  &__textarea {\n    box-sizing: border-box;\n    width: calc(100% + 16px);\n    padding: 12px 41px 12px 32px;\n\n    color: var(--secondary-color);\n    letter-spacing: 0.03em;\n    line-height: 150%;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 14px;\n\n    background-color: transparent;\n    border: none;\n    border-radius: 12px;\n  }\n}",
                    "styleUrl": "./textarea-copy-to-clipboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 27
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div \n  class=\"text-area-copy-to-clipboard\"\n  (mouseenter)=\"setVisibleButton(true)\"\n  (mouseleave)=\"setVisibleButton(false)\"\n>\n  <textarea \n    #textarea\n    class=\"text-area-copy-to-clipboard__textarea\" \n    [value]=\"initialValue\"\n    rows=\"10\"\n    spellcheck=\"false\"\n  >\n  </textarea>\n  <button \n    *ngIf=\"isButtonVisible\"\n    class=\"text-area-copy-to-clipboard__button\" \n    type=\"button\" \n    (click)=\"copyToClipboard(textarea)\"\n  >\n    <svg-icon \n      [src]=\"'assets/images/copy.svg'\"\n      [svgStyle]=\"{ 'stroke': '#24B04B' }\"\n    >\n    </svg-icon>\n    Copy code to clipboard\n  </button>\n</div>\n"
        },
        {
            "name": "PreviewContainerComponent",
            "id": "component-PreviewContainerComponent-e4ae25476a5c5a4aa32692ebb34faa89",
            "file": "src/app/atoms/containers/preview-container/preview-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-preview-container",
            "styleUrls": [
                "./preview-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./preview-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-preview-container',\n  templateUrl: './preview-container.component.html',\n  styleUrls: ['./preview-container.component.scss']\n})\nexport class PreviewContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-preview-container {\n  min-height: 141px;\n  padding: 20px 32px 32px;\n  background-color: rgba(var(--secondary-color-code), 0.05);\n  border-radius: 12px;\n  text-align: center;\n\n\n  &__content {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  &__title {\n    text-transform: uppercase;\n    color: rgba(var(--secondary-color-code), 0.5);\n    margin-bottom: 30px;\n\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 100%;\n  }\n}",
                    "styleUrl": "./preview-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-preview-container\">\n  <p class=\"app-preview-container__title\">Preview</p>\n  <div class=\"app-preview-container__content\"> \n    <ng-content></ng-content>\n  </div>\n</div>\n"
        },
        {
            "name": "primaryButtonComponent",
            "id": "component-primaryButtonComponent-6fe651e5f149f530d3ad08c7bae374cc",
            "file": "src/app/atoms/buttons/primaryButton/primaryButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-primary-button",
            "styleUrls": [
                "primaryButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./primaryButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "svgPath",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fillColor",
                    "defaultValue": "'url(#paint0_linear)'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "changeToActiveColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                },
                {
                    "name": "changeToLightColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-primary-button',\n  templateUrl: './primaryButton.component.html',\n  styleUrls: ['primaryButton.component.scss'],\n})\n\nexport class primaryButtonComponent {\n  @Input() title: string;\n  @Input() backgroundColor: string;\n  @Input() svgPath: string;\n\n  fillColor='url(#paint0_linear)';\n\n  changeToLightColor() {  \n    this.fillColor = 'url(#paint0_linear)';\n  }\n\n  changeToActiveColor() {\n    this.fillColor = 'white';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".module-border-wrap {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n  box-sizing: border-box;\n  height: 46px;\n  width: fit-content;\n  padding: 1px;\n  \n  background: var(--success-grad-light);\n  border-radius: 6px;\n}\n\n.module-opacity-wrap {\n  background: var(--text-color);\n  border-radius: 5px;\n}\n\n.btn-primary {\n  margin: 0;\n  background: transparent;\n  border: none;\n  position: relative;\n  display: flex;\n  align-items: center;\n  height: 44px;\n  border-radius: 5px; \n  padding: 13px 15px 12px 15px;\n\n  &__title {\n    background: var(--success-grad-light);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    transition: 0;\n    margin: 0 0 0 20px;\n    \n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 100%;\n  }\n\n  &:hover {\n    background: linear-gradient(89.52deg, hsla(137, 66%, 42%, 0.2) -46.17%, rgba(2, 99, 188, 0.2) 186.99%);\n  }\n\n  &:active {\n    background: var(--success-grad-light);\n    color: var(--text-color);\n\n    & > .btn-primary__name {\n      background: var(--text-color);\n      -webkit-background-clip: text;\n      background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n}\n",
                    "styleUrl": "primaryButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"module-border-wrap\">\n  <div class=\"module-opacity-wrap \">\n    <button \n      [ngStyle]=\"{ 'background': backgroundColor }\"\n      class=\"btn-primary\"\n      (mousedown)=\"changeToActiveColor()\"\n      (mouseup)=\"changeToLightColor()\"\n    >\n      <svg-icon \n        [src]=\"svgPath\"\n        [svgStyle]=\"{'fill':fillColor }\"\n      >\n      </svg-icon>\n      <p class=\"btn-primary__title\" *ngIf=\"title!==''\">\n        {{ title }}\n      </p>\n    </button>\n  </div>\n</div>"
        },
        {
            "name": "RegistrationFormComponent",
            "id": "component-RegistrationFormComponent-a93a34e2d5b1d227e531056af621c653",
            "file": "src/app/organisms/registration-form/registration-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-registration-form",
            "styleUrls": [
                "./registration-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./registration-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeScreen",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "isStarted",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "changeScreen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                },
                {
                    "name": "changeScreenToPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "setIsStarted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 15
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, HostListener, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-registration-form',\n  templateUrl: './registration-form.component.html',\n  styleUrls: ['./registration-form.component.scss']\n})\n\nexport class RegistrationFormComponent implements OnInit {\n  activeScreen: number = 1;\n  isStarted: boolean = false;\n  isMobile: boolean;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = (window.innerWidth < 950) ? true : false;\n  }\n\n  changeScreen() {\n    if (this.activeScreen === 5) {\n      return;\n    } else {\n      this.activeScreen = this.activeScreen + 1;\n    }\n  }\n\n  changeScreenToPrevious() {\n    if (this.activeScreen === 1) {\n      return;\n    } else {\n      this.activeScreen = this.activeScreen - 1;\n    }\n  }\n\n  setIsStarted() {\n    this.isStarted = true;\n  }\n\n  ngOnInit(): void {\n    this.isMobile = (window.innerWidth < 950) ? true : false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".registration-form {\n  width: 100%;\n  height: auto;\n  background: url('../../../assets/images/bg.png');\n\n  &__text {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 18px;\n    color: var(--secondary-color);\n    text-transform: capitalize;\n  }\n\n  &__title {\n    font-family: 'Gramatica Regular', 'open-sans';\n    font-size: 38px;\n    line-height: 120%;\n    text-transform: capitalize;\n    color: var(--secondary-color);\n\n    &-bold {\n      font-family: 'Gramatica Bold', 'open-sans';\n      font-size: 38px;\n      line-height: 120%;\n      text-transform: capitalize;\n      background: var(--success-grad-light);\n      -webkit-background-clip: text;\n      background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    width: 100%;\n    padding: 20px 64px;\n    background-color: rgba(var(--text-color-code), 0.5);\n  }\n\n  &__logo {\n    width: 117px;\n    height: 46px;\n  }\n\n  &__list {\n    width: 75%;\n    margin-bottom: 30px;\n\n    ::ng-deep {\n      .list-item-icon {\n        margin-bottom: 12px;\n      }\n    }\n  }\n\n  &__body {\n    display: flex;\n    justify-content: space-between;\n    padding: 42px 64px 130px;\n\n    &--left {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n      width: 44%;\n\n      & > h2, & > h5 {\n        margin-bottom: 20px;\n      }\n    }\n\n    &--right {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n\n      width: 52%;\n      min-height: 458px;\n\n      border-radius: 12px 30px;\n      box-shadow: 0px 50px 70px rgba(44, 59, 82, 0.15);\n    }\n  }\n\n  &__wrapper-top {\n    padding: 34px 48px 7px 48px;\n  }\n\n  &__wrapper-bottom {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    padding: 32px 48px 28px 48px;\n    background-color: var(--input-bg-color);\n    border-radius: 0 0 12px 30px;\n\n    &--left {\n      width: 55%;\n    }\n  }\n}\n\n@media screen and (max-width: 1250px) {\n  .registration-form {\n    &__list {\n      width: 100%;\n    }\n\n    &__body {\n      padding: 42px 20px;\n    }\n\n    &__header {\n      padding: 20px;\n    }\n\n    &__wrapper-top {\n      padding: 20px;\n    }\n\n    &__wrapper-bottom {\n      padding: 20px 10px;\n    }\n  }\n}",
                    "styleUrl": "./registration-form.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"registration-form\" *ngIf=\"!isMobile\">\n  <div class=\"registration-form__header\">\n    <img class=\"registration-form__logo\" src=\"assets/images/logo.png\" alt=\"logo secure privacy\">\n    <app-info-button [title]=\"'support'\"></app-info-button>\n  </div>\n  <div class=\"registration-form__body\">\n    <div class=\"registration-form__body--left\">\n      <h2 class=\"registration-form__title\">\n        Register now and receive 100% no-risk\n        <span class=\"registration-form__title-bold\">Free Trial</span>\n      </h2>\n      <ul class=\"registration-form__list\">\n        <app-search-item \n          [title]=\"'Get access to all features.'\"\n          [classes]=\"'list-item-icon'\"\n        >\n        </app-search-item>\n        <app-search-item \n          [title]=\"'Pay NOTHING for the first 7-days.'\"\n          [classes]=\"'list-item-icon'\"\n        >\n        </app-search-item>\n        <app-search-item \n          [title]=\"'Cancel at ANY time during your trial.'\"\n          [classes]=\"'list-item-icon'\"\n        >\n        </app-search-item>\n      </ul>\n      <h5 class=\"registration-form__text\">These awesome companies are using Secure Privacy</h5>\n      <app-icon-container></app-icon-container>\n    </div>\n    <div class=\"registration-form__body--right\">\n      <div class=\"registration-form__wrapper-top\" [ngSwitch]=\"activeScreen\">\n        <app-form-screen-first *ngSwitchCase=\"1\"></app-form-screen-first>\n        <app-form-screen-second *ngSwitchCase=\"2\"></app-form-screen-second>\n        <app-form-screen-third *ngSwitchCase=\"3\"></app-form-screen-third>\n        <app-form-screen-fourth *ngSwitchCase=\"4\"></app-form-screen-fourth>\n        <app-form-screen-fifth *ngSwitchCase=\"5\"></app-form-screen-fifth>\n      </div>\n      <div class=\"registration-form__wrapper-bottom\">\n        <div class=\"registration-form__wrapper-bottom--left\">\n          <app-steps [activePoints]=\"activeScreen\"></app-steps>\n        </div>\n        <app-gradient-button \n          [title]=\"'Next'\"\n          (click)=\"changeScreen()\"\n        >\n        </app-gradient-button>\n      </div>\n    </div>\n  </div>  \n</div>\n<div class=\"registration-form\" *ngIf=\"isMobile\">\n<div class=\"registration-form__header\">\n    <img class=\"registration-form__logo\" src=\"assets/images/logo.png\" alt=\"logo secure privacy\">\n    <app-info-button [title]=\"'support'\"></app-info-button>\n</div>\n<div class=\"registration-form__body\" [ngStyle]=\"{'padding-top':'10px'}\">\n  <div \n    class=\"registration-form__body--left\" \n    *ngIf=\"!isStarted\"\n    [ngStyle]=\"{'width':'100%', 'align-items': 'center'}\"\n  >\n    <h2 class=\"registration-form__title\">\n      Register now and receive 100% no-risk\n      <span class=\"registration-form__title-bold\">Free Trial</span>\n    </h2>\n    <ul class=\"registration-form__list\">\n      <app-search-item \n        [title]=\"'Get access to all features.'\"\n        [classes]=\"'list-item-icon'\"\n      >\n      </app-search-item>\n      <app-search-item \n        [title]=\"'Pay NOTHING for the first 7-days.'\"\n        [classes]=\"'list-item-icon'\"\n      >\n      </app-search-item>\n      <app-search-item \n        [title]=\"'Cancel at ANY time during your trial.'\"\n        [classes]=\"'list-item-icon'\"\n      >\n      </app-search-item>\n    </ul>\n    <h5 class=\"registration-form__text\">These awesome companies are using Secure Privacy</h5>\n    <app-icon-container></app-icon-container>\n    <div [ngStyle]=\"{'margin-bottom':'32px'}\"></div>\n    <app-gradient-button \n      [title]=\"'get started'\"\n      (click)=\"setIsStarted()\"\n    >\n    </app-gradient-button>\n  </div>\n  <div \n    class=\"registration-form__body--right\" \n    *ngIf=\"isStarted\"\n    [ngStyle]=\"{'width':'100%'}\"\n  >\n    <div class=\"registration-form__wrapper-top\" [ngSwitch]=\"activeScreen\">\n      <app-form-screen-first *ngSwitchCase=\"1\"></app-form-screen-first>\n      <app-form-screen-second *ngSwitchCase=\"2\"></app-form-screen-second>\n      <app-form-screen-third *ngSwitchCase=\"3\"></app-form-screen-third>\n      <app-form-screen-fourth *ngSwitchCase=\"4\"></app-form-screen-fourth>\n      <app-form-screen-fifth *ngSwitchCase=\"5\"></app-form-screen-fifth>\n    </div>\n    <div class=\"registration-form__wrapper-bottom\">\n        <app-simple-button \n          [classes]=\"'btn-transparent'\"\n          [title]=\"'back'\"\n          (click)=\"changeScreenToPrevious()\"\n        >\n        </app-simple-button>\n        <app-gradient-button \n          [title]=\"'Next'\"\n          (click)=\"changeScreen()\"\n        >\n        </app-gradient-button>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "ReportModalComponent",
            "id": "component-ReportModalComponent-4ef6fe2ddf580703555b3b8274f0c06d",
            "file": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-report-modal",
            "styleUrls": [
                "./report-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./report-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "inputsData",
                    "line": 19,
                    "type": "InputsData[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "dangerButtonFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 22,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "primaryButtonFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 21,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "filterProps",
                    "defaultValue": "{}",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "handleApprove",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "handleCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "handleInputChange",
                    "args": [
                        {
                            "name": "props",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "jsdoctags": [
                        {
                            "name": "props",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\ninterface InputsData {\n  id: string,\n  title: string,\n  values?: string[],\n  initialValue?: string,\n  placeholder: string,\n  type: string\n}\n\n@Component({\n  selector: 'app-report-modal',\n  templateUrl: './report-modal.component.html',\n  styleUrls: ['./report-modal.component.scss']\n})\n\nexport class ReportModalComponent implements OnInit {\n  @Input() inputsData: InputsData[];\n\n  @Output() primaryButtonFunction: EventEmitter<any> = new EventEmitter();\n  @Output() dangerButtonFunction: EventEmitter<any> = new EventEmitter();\n\n  filterProps = {};\n\n  handleCancel() {\n    this.dangerButtonFunction.emit();\n  }\n\n  handleApprove() {\n    this.primaryButtonFunction.emit();\n  }\n\n  handleInputChange(props) {\n    this.filterProps[props[1]] = props[0];\n  }\n\n  ngOnInit(): void {\n    this.inputsData.forEach(item => {\n      this.filterProps[item.title] = item.initialValue\n    })\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".report-modal {\n  width: 100vw;\n  height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 3;\n\n  background-color: rgba(var(--secondary-color-code), 0.5);\n  text-align: left;\n  overflow-y: scroll;\n\n  &__title {\n    margin-bottom: 32px;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    color: var(--secondary-color);\n  }\n\n  &__form {\n    width: 588px;\n    padding: 32px;\n\n    position: relative;\n    top: 10%;\n    background: var(--card-bg-color);\n    border-radius: 12px 30px;\n  }\n\n  &__title-container {\n    width: 100%;\n    display: flex;\n    align-items: flex-start;\n    margin-bottom: 28px;\n  }\n\n  &__title {\n    margin: 0 0 0 18px;\n  }\n\n  &__inputs-list {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n\n  &__input-wrapper {\n    min-width: 200px;\n    width: calc(50% - 16px);\n    margin-bottom: 16px;\n  }\n\n  &__buttons-wrapper {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 8px;\n  }\n\n  &__input-title {\n    color: rgba(var(--secondary-color-code), 0.5);\n    margin: 4px 0 12px 0;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 100%;\n  }\n}\n\n.ml {\n  margin-left: 12px;\n}\n\n@media screen and (max-width: 600px) {\n  .report-modal {\n    &__form {\n      min-width: 90%;\n      max-width: 90%;\n      padding: 20px;\n    }\n\n    &__inputs-list {\n      flex-direction: column;\n    }\n\n    &__input-wrapper {\n      width: 100%;\n    }\n  }\n}",
                    "styleUrl": "./report-modal.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"report-modal\">\n  <div class=\"report-modal__form\">\n    <div class=\"report-modal__title-container\">\n      <svg-icon \n      [src]=\"'assets/images/filter.svg'\"\n      [svgStyle]=\"{ 'fill':'rgba(1, 25, 73, 0.5)', 'height': '20px' }\"\n      >\n      </svg-icon>\n      <p class=\"report-modal__title\">Filters</p>\n    </div>\n    <ul class=\"report-modal__inputs-list\">\n      <li *ngFor=\"let input of inputsData\" class=\"report-modal__input-wrapper\">\n        <p class=\"report-modal__input-title\">{{ input.title }}</p>\n        <reports-search-input \n          *ngIf=\"input.type==='search'\"\n          [title]=\"input.title\"\n          [initialValue]=\"input.initialValue\"\n          [id]=\"input.id\"\n          [placeholderText]=\"placeholder\"\n          (changeValueParentFunction)=\"handleInputChange($event)\"\n        >\n        </reports-search-input>\n        <reports-select-input  \n          *ngIf=\"input.type==='select'\"\n          [title]=\"input.title\"\n          [initialValue]=\"input.initialValue\"\n          [items]=\"input.values\"\n          [id]=\"input.id\"\n          (changeValueParentFunction)=\"handleInputChange($event)\"\n        >\n        </reports-select-input>\n      </li>\n    </ul>\n    <div class=\"report-modal__buttons-wrapper\">\n      <reports-button\n        [title]=\"'cancel'\"\n        [classes]=\"'btn-danger-big'\"\n        (click)=\"handleCancel()\"\n      >\n      </reports-button>\n      <div class=\"ml\"></div>\n      <reports-button\n        [title]=\"'save'\"\n        [classes]=\"'btn-success-big'\"\n        (click)=\"handleApprove()\"\n      >\n      </reports-button>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "ReportsButtonComponent",
            "id": "component-ReportsButtonComponent-cf766330ffb209ca9cb25262fda01cc9",
            "file": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "reports-button",
            "styleUrls": [
                "reports-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'reports-button',\n  templateUrl: './reports-button.component.html',\n  styleUrls: ['reports-button.component.scss'],\n})\n\nexport class ReportsButtonComponent {\n  @Input() title: string;\n  @Input() classes: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-danger-big {\n  color: var(--danger-color);\n  background: inherit;\n  outline: none;\n  border: 1px solid rgba(var(--danger-color-code), 0.2);\n\n  text-transform: uppercase;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 12px;\n\n  display: flex;\n  align-items: center;\n  height: 46px;\n  padding: 17px 37px;\n\n  transition: var(--transition);\n  border-radius: 8px;\n\n  &:hover {\n    cursor: pointer;\n    background: rgba(var(--danger-color-code), 0.3);\n  }\n\n  &:active {\n    background: rgba(var(--danger-color-code), 0.5);\n  }\n}\n\n.btn-success-big {\n  position: relative;\n  z-index: 2;\n\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  text-transform: uppercase;\n  font-family: 'Gramatica Bold', 'open-sans';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 100%;\n\n  display: flex;\n  align-items: center;\n  height: 46px;\n  padding: 17px 37px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 8px;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 8px;\n    opacity: 0;\n  }\n\n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n\n  &:active {\n    &::before {\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 0;\n    }\n  }\n}\n\n.btn-danger {\n  color: var(--danger-color);\n  background: inherit;\n  outline: none;\n  border: 1px solid rgba(var(--danger-color-code), 0.2);\n\n  text-transform: uppercase;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 12px;\n\n  display: flex;\n  align-items: center;\n  height: 36px;\n  padding: 0 18px 0 18px;\n\n  transition: var(--transition);\n  border-radius: 8px;\n\n  &:hover {\n    cursor: pointer;\n    background: rgba(var(--danger-color-code), 0.3);\n  }\n\n  &:active {\n    background: rgba(var(--danger-color-code), 0.5);\n  }\n}\n\n.btn-success {\n  position: relative;\n  z-index: 2;\n\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  text-transform: uppercase;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 12px;\n\n  display: flex;\n  align-items: center;\n  height: 36px;\n  padding: 0 18px 0 18px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 8px;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 8px;\n    opacity: 0;\n  }\n\n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n\n  &:active {\n    &::before {\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 0;\n    }\n  }\n}",
                    "styleUrl": "reports-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button [ngClass]=\"classes\">\n  {{ title }}\n</button>\n"
        },
        {
            "name": "ReportsCheckboxInput",
            "id": "component-ReportsCheckboxInput-8162bdbed2beaba7ecdbafdd21aea49d",
            "file": "src/app/pages-components/Reports/Atoms/inputs/reports-checkbox-input/reports-checkbox-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "reports-checkbox-input",
            "styleUrls": [
                "./reports-checkbox-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports-checkbox-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "line": 12,
                    "type": "number | string"
                },
                {
                    "name": "isChecked",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'reports-checkbox-input',\n  templateUrl: './reports-checkbox-input.component.html',\n  styleUrls: ['./reports-checkbox-input.component.scss']\n})\n\nexport class ReportsCheckboxInput {\n  @Input() isChecked: boolean;\n  @Input() title?: string;\n  @Input() id: number | string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-input-dark {\n  display: none;\n\n  &__title {\n    margin-left: 40px;\n    color: var(--secondary-color);\n    line-height: 18px;\n\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n  }\n\n  &__label {\n    display: block;\n    position: relative;\n    width: 18px;\n    height: 18px;\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      top: 0;\n\n      box-sizing: border-box;\n      width: 18px;\n      height: 18px;\n      border-radius: 4px;\n      border: 1px solid rgba(var(--secondary-color-code), 0.3);\n    }\n  }\n}\n\n.app-checkbox-input-dark:checked + .app-checkbox-input-dark__label {\n  &:after {\n    background-color: var(--secondary-color);\n  }\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 4px;\n    left: 4px;\n    z-index: 2;\n\n    box-sizing: border-box;\n    width: 10px;\n    height: 10px;\n    background: center no-repeat url('../../../../../../assets/images/checkbox.svg');\n    background-size: contain;\n  }\n}\n\n",
                    "styleUrl": "./reports-checkbox-input.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div  class=\"app-checkbox-input-dark__container\">\n  <input\n    type=\"checkbox\" \n    [id]=\"id\"\n    name=\"checkbox-input-simple\" \n    class=\"app-checkbox-input-dark\"\n    [checked]=\"isChecked\"\n  >\n  <label [for]=\"id\" class=\"app-checkbox-input-dark__label\">\n    <p class=\"app-checkbox-input-dark__title\" *ngIf=\"title && title!==''\">\n      {{ title }}\n    </p>\n  </label>\n</div>\n\n"
        },
        {
            "name": "ReportsDateMenuComponent",
            "id": "component-ReportsDateMenuComponent-7951379eebb8cedf01fe9757ae561f45",
            "file": "src/app/pages-components/Reports/Molecules/menu/reports-date-menu/reports-date-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "reports-date-menu",
            "styleUrls": [
                "./reports-date-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports-date-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'reports-date-menu',\n  templateUrl: './reports-date-menu.component.html',\n  styleUrls: ['./reports-date-menu.component.scss']\n})\n\nexport class ReportsDateMenuComponent {\n  @Input() items: string[];\n\n  active: number = 0;\n\n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-date-menu {\n  display: flex;\n  align-items: center;\n\n  &__list {\n    display: flex;\n    align-items: center;\n  }\n\n  &__item {\n    padding: 0 10px 5px;\n  }\n\n  &__container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    height: 46px;\n    padding: 0 13px;\n    margin-left: 20px;\n\n    border: 1px solid rgba(var(--secondary-color-code), 0.3);\n    border-radius: 12px;\n\n    & > img {\n      height: 18px;\n      width: 18px;\n    }\n  }\n}",
                    "styleUrl": "./reports-date-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-date-menu\">\n  <ul class=\"app-date-menu__list\">\n    <li \n      class=\"app-date-menu__item\"\n      *ngFor=\"let item of items; let i = index\" \n    >\n      <reports-text-link\n        [isActive]=\"active === i\"\n        [title]=\"item\" \n        classes=\"nav-link-secondary nav-link-highlited\"\n        (click)=\"handlClick($event, i)\"\n      >\n      </reports-text-link>\n    </li>\n  </ul>\n  <div class=\"app-date-menu__container\">\n    <img src='assets/images/calendar.png' alt=\"calendar\" />\n  </div>\n</div>\n"
        },
        {
            "name": "ReportsIconLinkComponent",
            "id": "component-ReportsIconLinkComponent-25b185c934865358c226558c69a8ed02",
            "file": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "reports-icon-link",
            "styleUrls": [
                "./reports-icon-link.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports-icon-link.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isActive",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "svgPath",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 15,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fillColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "onHover",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                },
                {
                    "name": "onLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\nconst ACTIVE_COLOR = '#24B04B';\nconst STATIC_COLOR = 'rgba(1, 25, 73, 0.5)';\nconst HOVER_COLOR = 'rgba(1, 25, 73, 1)';\n\n@Component({\n  selector: 'reports-icon-link',\n  templateUrl: './reports-icon-link.component.html',\n  styleUrls: ['./reports-icon-link.component.scss']\n})\n\nexport class ReportsIconLinkComponent implements OnChanges {\n  @Input() isActive: boolean;\n  @Input() title: string;\n  @Input() svgPath: string;\n  \n  fillColor: string;\n\n  onHover() {\n    if (!this.isActive) {\n      this.fillColor = HOVER_COLOR;\n    }\n  }\n\n  onLeave() {\n    if (!this.isActive) {\n      this.fillColor = STATIC_COLOR;\n    }\n  }\n\n  ngOnChanges(): void {\n    this.fillColor = this.isActive ? ACTIVE_COLOR : STATIC_COLOR;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-icon-link {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2px;\n\n  text-transform: capitalize;\n  border: none;\n  background: transparent;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 10px;\n  line-height: 100%;\n\n  &__title {\n    margin-top: 6px;\n  }\n}",
                    "styleUrl": "./reports-icon-link.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<a class=\"app-icon-link\"\n  href=\"#\"\n  (mouseenter)=\"onHover()\"\n  (mouseleave)=\"onLeave()\"\n>\n  <svg-icon \n    [src]=\"svgPath\"\n    [svgStyle]=\"{'fill':fillColor }\"\n  >\n  </svg-icon>\n  <p class=\"app-icon-link__title\" [ngStyle]=\"{ 'color': fillColor }\">\n    {{ title }}\n  </p>     \n</a>\n"
        },
        {
            "name": "ReportsInfoButtonComponent",
            "id": "component-ReportsInfoButtonComponent-8ac9bf34ac72f0ec3bdb180582bbc872",
            "file": "src/app/pages-components/Reports/Atoms/buttons/reports-info-button/reports-info-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "reports-info-button",
            "styleUrls": [
                "reports-info-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports-info-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'reports-info-button',\n  templateUrl: './reports-info-button.component.html',\n  styleUrls: ['reports-info-button.component.scss'],\n})\n\nexport class ReportsInfoButtonComponent {\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-info {\n  padding: 9px 15px 9px 15px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n\n  border-radius: 8px;\n  border: none;\n  color: var(--info-color);\n  background-color: rgba(var(--info-color-code), 0.05);  \n  text-transform: capitalize;\n  transition: var(--transition);\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 100%;\n\n  & > img {\n    margin-right: 15px;\n  }\n\n  &:hover {\n    background-color: rgba(var(--info-color-code), 0.3);  \n  }\n\n  &:active {\n    background-color: transparent; \n  }\n}\n",
                    "styleUrl": "reports-info-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class=\"btn-info\">\n  <img src=\"assets/images/support.png\" alt=\"support button logo\">\n  {{ title }}\n</button>\n"
        },
        {
            "name": "ReportsLightButtonComponent",
            "id": "component-ReportsLightButtonComponent-8b6085df4ccc04bf2cf97510b0815c9f",
            "file": "src/app/pages-components/Reports/Atoms/buttons/reports-light-button/reports-light-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "reports-light-button",
            "styleUrls": [
                "reports-light-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports-light-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "srcPath",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'reports-light-button',\n  templateUrl: './reports-light-button.component.html',\n  styleUrls: ['reports-light-button.component.scss'],\n})\n\nexport class ReportsLightButtonComponent {\n  @Input() srcPath: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-light {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  min-width: 48px;\n  height: 48px;\n  padding: 16px;\n\n  border-radius: 8px;\n  border: none;\n  background: var(--input-bg-color);\n\n  &:hover {\n    background: var(--light-btn-hover);\n  }\n\n  &:active {\n    background: var(--light-btn-hover);\n  }\n}",
                    "styleUrl": "reports-light-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class=\"btn-light\">\n  <img [src]=\"srcPath\">\n</button>\n\n"
        },
        {
            "name": "ReportsMenuComponent",
            "id": "component-ReportsMenuComponent-b410b3dede4cc10b2a3133160f685d6c",
            "file": "src/app/pages-components/Reports/Molecules/menu/reports-menu/reports-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "reports-menu",
            "styleUrls": [
                "./reports-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'reports-menu',\n  templateUrl: './reports-menu.component.html',\n  styleUrls: ['./reports-menu.component.scss']\n})\n\nexport class ReportsMenuComponent {\n  @Input() items: string[];\n\n  active: number = 0;\n\n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-main-navigation-menu {\n  display: flex;\n  align-items: center;\n\n  &__item {\n    margin-right: 20px;\n\n    ::ng-deep {\n      .nav-link-secondary {\n        text-transform: capitalize!important;\n      }\n    }\n  }\n}",
                    "styleUrl": "./reports-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"app-main-navigation-menu\">\n  <li \n    class=\"app-main-navigation-menu__item\"\n    *ngFor=\"let item of items; let i = index\" \n  >\n    <reports-text-link\n      [isActive]=\"active === i\"\n      [title]=\"item\" \n      classes=\"nav-link-secondary\"\n      (click)=\"handlClick($event, i)\"\n    >\n    </reports-text-link>\n  </li>\n</ul>\n\n"
        },
        {
            "name": "ReportsMobileMenuComponent",
            "id": "component-ReportsMobileMenuComponent-3bc8cb003422e0c91c90d38fb98ac514",
            "file": "src/app/pages-components/Reports/Molecules/menu/reports-mobile-menu/reports-mobile-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "reports-mobile-menu",
            "styleUrls": [
                "./reports-mobile-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports-mobile-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'reports-mobile-menu',\n  templateUrl: './reports-mobile-menu.component.html',\n  styleUrls: ['./reports-mobile-menu.component.scss']\n})\n\nexport class ReportsMobileMenuComponent {\n  @Input() items: string[];\n\n  active: number = 0;\n\n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-mobile-main-navigation-menu {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 20px;\n  background: #EAEDF2;\n}",
                    "styleUrl": "./reports-mobile-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"app-mobile-main-navigation-menu\">\n  <li \n  class=\"app-mobile-main-navigation-menu__item\"\n  *ngFor=\"let item of items; let i = index\" \n  >\n    <reports-icon-link\n      [isActive]=\"active === i\"\n      [title]=\"item.title\" \n      [svgPath]=\"item.svgPath\"\n      (click)=\"handlClick($event, i)\"\n    >\n    </reports-icon-link>\n  </li>\n</ul>\n\n"
        },
        {
            "name": "ReportsPrimaryButtonComponent",
            "id": "component-ReportsPrimaryButtonComponent-56e3533b75ba6f48eb321688b4e6be4b",
            "file": "src/app/pages-components/Reports/Atoms/buttons/reports-primary-button/reports-primary-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "reports-primary-button",
            "styleUrls": [
                "reports-primary-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports-primary-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "svgPath",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fillColor",
                    "defaultValue": "'url(#paint0_linear)'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "changeToActiveColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                },
                {
                    "name": "changeToLightColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'reports-primary-button',\n  templateUrl: './reports-primary-button.component.html',\n  styleUrls: ['reports-primary-button.component.scss'],\n})\n\nexport class ReportsPrimaryButtonComponent {\n  @Input() svgPath: string;\n  @Input() title: string;\n\n  fillColor='url(#paint0_linear)';\n\n  changeToLightColor() {  \n    this.fillColor = 'url(#paint0_linear)';\n  }\n\n  changeToActiveColor() {\n    this.fillColor = 'white';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".module-border-wrap {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n  box-sizing: border-box;\n  height: 46px;\n  width: fit-content;\n  padding: 1px;\n  \n  background: var(--success-grad-light);\n  border-radius: 6px;\n}\n\n.module-opacity-wrap {\n  background: var(--text-color);\n  border-radius: 5px;\n}\n\n.btn-primary {\n  height: 44px;\n  padding: 13px 15px 12px 15px;\n  margin: 0;\n  transition: var(--transition);\n  \n  position: relative;\n  display: flex;\n  align-items: center;\n\n  background: transparent;\n  border: none;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 100%;\n\n  p {\n    margin: 0;\n    margin-left: 20px;\n  } \n\n  &__name {\n    background: var(--success-grad-light);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    transition: 0;\n  }\n\n  &:hover {\n    background: linear-gradient(89.52deg, hsla(137, 66%, 42%, 0.2) -46.17%, rgba(2, 99, 188, 0.2) 186.99%);\n  }\n\n  &:active {\n    background: var(--success-grad-light);\n    color: var(--text-color);\n\n    & > .btn-primary__name {\n      background: var(--text-color);\n      -webkit-background-clip: text;\n      background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n}\n",
                    "styleUrl": "reports-primary-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"module-border-wrap\">\n  <div class=\"module-opacity-wrap \">\n    <button \n      class=\"btn-primary\"\n      (mousedown)=\"changeToActiveColor()\"\n      (mouseup)=\"changeToLightColor()\"\n    >\n      <svg-icon \n        [src]=\"svgPath\"\n        [svgStyle]=\"{'fill':fillColor }\"\n      >\n      </svg-icon>\n      <p class=\"btn-primary__name\" *ngIf=\"title!==''\">\n        {{ title }}\n      </p>\n    </button>\n  </div>\n</div>"
        },
        {
            "name": "ReportsSearchInputComponent",
            "id": "component-ReportsSearchInputComponent-868055933dda17ea6116b007256f314c",
            "file": "src/app/pages-components/Reports/Atoms/inputs/reports-search-input/reports-search-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "reports-search-input",
            "styleUrls": [
                "./reports-search-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports-search-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "initialValue",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "name",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "placeholderText",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "changeValueParentFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChangeValue",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'reports-search-input',\n  templateUrl: './reports-search-input.component.html',\n  styleUrls: ['./reports-search-input.component.scss']\n})\nexport class ReportsSearchInputComponent implements OnInit {\n  @Input() placeholderText: string;\n  @Input() title: string;\n  @Input() initialValue?: string;\n  @Input() id: string;\n  @Input() name?: string;\n\n  @Output() changeValueParentFunction?: EventEmitter<any> = new EventEmitter();\n\n  classes='';\n  value='';\n\n  handleChangeValue(event) {\n   this.changeValueParentFunction.emit([event.target.value, this.title]);\n  }\n\n  ngOnInit() {\n    if (this.initialValue) {\n      this.value = this.initialValue;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-domains-search {\n  position: relative;\n  width: 100%;\n  \n  &::after {\n    content: '';\n    height: 20px;\n    width: 20px;\n\n    position: absolute;\n    top: 14px;\n    left: 16px;\n    \n    background: url('../../../../../../assets/images/Search.png') no-repeat center;\n    background-size: contain;\n    opacity: 0.5;\n  }\n\n  &__input {\n    width: 100%;\n    padding: 15px 16px 16px 53px;\n    height: 48px;\n\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 100%;\n  \n    border: none;\n    border-radius: 8px;\n    background: rgba(var(--secondary-color-code), 0.05);\n    color: rgba(var(--secondary-color-code), 0.5);\n  \n    &::placeholder {\n      color: rgba(var(--secondary-color-code), 0.5);\n    }\n  \n    &:hover {\n      background: rgba(var(--secondary-color-code), 0.2);\n    }\n  \n    &::placeholder {\n      font-weight: 300;\n    }\n  }\n}",
                    "styleUrl": "./reports-search-input.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-domains-search\">\n  <input \n    class=\"app-domains-search__input\"\n    [placeholder]=\"placeholderText\"\n    type=\"text\"\n    [name]=\"name+''\"\n    [value]=\"value\"\n    (input)=\"handleChangeValue($event)\"\n    [id]=\"id+''\"\n    spellcheck=\"false\"\n  />\n</div>\n"
        },
        {
            "name": "ReportsSecondaryButtonComponent",
            "id": "component-ReportsSecondaryButtonComponent-907230519a76d60600f68f0ba649f6ac",
            "file": "src/app/pages-components/Reports/Atoms/buttons/reports-secondary-button/reports-secondary-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "reports-secondary-button",
            "styleUrls": [
                "reports-secondary-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports-secondary-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "srcPath",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fillColor",
                    "defaultValue": "'rgba(1, 25, 73, 0.5)'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "changeToActiveColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                },
                {
                    "name": "changeToLightColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'reports-secondary-button',\n  templateUrl: './reports-secondary-button.component.html',\n  styleUrls: ['reports-secondary-button.component.scss'],\n})\n\nexport class ReportsSecondaryButtonComponent {\n  @Input() title: string;\n  @Input() srcPath: string;\n\n  fillColor: string =  'rgba(1, 25, 73, 0.5)';\n\n  changeToLightColor() {  \n    this.fillColor = 'rgba(1, 25, 73, 0.5)';\n  }\n\n  changeToActiveColor() {\n    this.fillColor = 'white';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-secondary {\n  height: 46px;\n  padding: 13px 15px 12px 15px;\n  display: flex;\n  align-items: center;\n\n  background: rgba(var(--secondary-color-code),0.05);\n  color: var(--secondary-color);\n  border: none;\n  border-radius: 8px;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 100%;\n  transition: var(--transition);\n\n  &__title {\n    margin-left: 20px;\n  }\n\n  &:hover {\n    background: rgba(var(--secondary-color-code),0.2);\n  }\n\n  &:active {\n    background: rgba(var(--secondary-color-code),0.7);\n    color: var(--text-color);\n  }\n}",
                    "styleUrl": "reports-secondary-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button \n  class=\"btn-secondary\"\n  (mouseleave)=\"changeToLightColor()\"\n  (mousedown)=\"changeToActiveColor()\"\n  (mouseup)=\"changeToLightColor()\"\n> \n  <svg-icon \n    [src]=\"srcPath\"\n    [svgStyle]=\"{'fill':fillColor }\"\n  >\n  </svg-icon>\n  <p class=\"btn-secondary__title\" *ngIf=\"title!==''\">\n    {{ title }}\n  </p>\n</button>\n"
        },
        {
            "name": "ReportsSelectInput",
            "id": "component-ReportsSelectInput-badb168393cb5d512d1075eab8d341e4",
            "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input/reports-select-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "reports-select-input",
            "styleUrls": [
                "./reports-select-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports-select-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "initialValue",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                },
                {
                    "name": "title",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "changeValueParentFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'reports-select-input',\n  templateUrl: './reports-select-input.component.html',\n  styleUrls: ['./reports-select-input.component.scss']\n})\n\nexport class ReportsSelectInput implements OnInit {\n  @Input() items: string[];\n  @Input() initialValue: string;\n  @Input() id: string;\n  @Input() title: string;\n  \n  @Output() changeValueParentFunction?: EventEmitter<any> = new EventEmitter();\n\n  selectedItem: string;\n  \n  handleChange(value) {\n    this.changeValueParentFunction.emit([value, this.title]);\n  }\n\n  ngOnInit(): void {\n    this.selectedItem = this.initialValue;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".reports-select {\n\n  &__input {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 100%;\n  }\n\n  ::ng-deep {\n    .ng-select {\n      position: relative;\n      box-sizing: border-box;\n      height: 48px; \n      width: 100%;\n    \n      background: rgba(var(--secondary-color-code), 0.05);\n      border-radius: 8px;\n      color: rgba(var(--secondary-color-code), 0.5);\n    \n      &:hover {\n        background: rgba(var(--secondary-color-code), 0.1);\n      }\n    \n      &:after {\n        content: url('../../../../../../assets/images/select.png');\n        position: absolute;\n        top: calc(50% - 7px);\n        right: 21px;\n      }\n    \n      &.ng-select-opened{\n        &:after {\n          content: url('../../../../../../assets/images/select.png');\n          position: absolute;\n          top: calc(50% - 7px);\n          right: 21px;\n          transform: rotate(180deg);\n        }\n      }\n    \n      &-container {\n        width: 100%;\n        height: 46px;\n        padding: 15px 21px 15px 16px;\n        margin-bottom: 4px;\n      }\n    }\n    \n    .ng-option {\n      background-color: var(--input-bg-color);\n      padding: 15px 21px 15px 16px;  \n    \n    \n      &:hover {\n        background-color: var(--light-btn-hover);\n        font-weight: bold;\n      }\n    }\n    \n    .ng-dropdown-panel {\n      position: absolute;\n      left: 0;\n      text-align: left;\n    }\n    \n    .scroll-host{\n      color: rgba(var(--secondary-color-code), 1);\n      position: absolute;\n      box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n      border-radius: 8px;\n    }\n    \n    .ng-clear-wrapper {\n      display: none;\n    }\n\n    .ng-dropdown-panel-items.scroll-host {\n      width: 100%;\n    }\n  }\n}",
                    "styleUrl": "./reports-select-input.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"reports-select\">\n  <ng-select \n      [(ngModel)]=\"selectedItem\"\n      class=\"reports-select__input\" \n      [hideSelected]=\"true\"\n      [searchable]=\"false\"\n      [id]=\"id\"\n      (change)=\"handleChange($event)\"\n  >\n    <ng-option class=\"reports-select__option\" *ngFor=\"let item of items\" [value]=\"item\">\n      {{ item }}\n    </ng-option>\n  </ng-select>\n</div>\n\n  "
        },
        {
            "name": "ReportsSelectInputSearchComponent",
            "id": "component-ReportsSelectInputSearchComponent-175afe393c9a139c3d81f96ead2fe26d",
            "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input-search/reports-select-input-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "reports-select-input-search",
            "styleUrls": [
                "./reports-select-input-search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports-select-input-search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                },
                {
                    "name": "placeholderText",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "item",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'reports-select-input-search',\n  templateUrl: './reports-select-input-search.component.html',\n  styleUrls: ['./reports-select-input-search.component.scss']\n})\n\nexport class ReportsSelectInputSearchComponent {\n  @Input() items: string[];\n  @Input() placeholderText: string;\n  @Input() classes: string;\n\n  selectedItem: string;\n  \n  onChange(item) {\n    this.selectedItem = item;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".reports-select-input-search {\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 100%;\n\n  ::ng-deep {\n    .ng-select {\n      position: relative;\n      box-sizing: border-box;\n      height: 48px; \n      width: 100%;\n    \n      background: rgba(var(--secondary-color-code), 0.05);\n      border-radius: 8px;\n      color: rgba(var(--secondary-color-code), 0.5);\n    \n      &:hover {\n        background: rgba(var(--secondary-color-code), 0.1);\n      }\n    \n      &-container {\n        width: 100%;\n        height: 46px;\n        margin-bottom: 4px;\n      }\n    }\n\n    .ng-dropdown-panel-items.scroll-host {\n      width: 100%;\n    }\n    \n    .ng-dropdown-panel {\n      position: absolute;\n      left: 0;\n      text-align: left;\n    }\n    \n    .scroll-host{\n      color: rgba(var(--secondary-color-code), 1);\n      position: absolute;\n      box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n      border-radius: 8px;\n    }\n    \n    .ng-clear-wrapper {\n      display: none;\n    }\n    \n    .ng-value-container .ng-input {\n      & > input {\n        font-family: 'Sofia pro', 'open-sans';\n        font-style: normal;\n        font-style: normal;\n        font-weight: 300;\n        font-size: 16px;\n        color: var(--secondary-color);\n      }\n    }\n    \n    .ng-option {\n      background-color: var(--input-bg-color);\n      padding: 17px 21px 15px 16px;  \n    \n      &:hover {\n        background-color: var(--light-btn-hover);\n        font-weight: 600;\n    \n      }\n    } \n    \n    .custom {\n      &.ng-select {\n        & > .ng-select-container {\n          padding: 15px 21px 15px 16px;\n    \n          & .ng-value-container .ng-input {\n            padding-left: 16px;\n          }\n        }\n      }\n    }\n    \n    .custom-icon {\n      &.ng-select {\n        & > .ng-select-container {\n          padding: 16px 21px 15px 52px;\n          position: relative;\n    \n          &:after {\n            content: url('../../../../../../assets/images/Search.png');\n            position: absolute;\n            top: 13px;\n            left: 16px;\n            opacity: 0.5;\n          }\n    \n          & .ng-value-container .ng-input {\n            padding-left: 52px;\n            padding-right: 16px;\n          }\n        }\n      }\n    }\n  }\n}",
                    "styleUrl": "./reports-select-input-search.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"reports-select-input-search\">\n  <ng-select \n      [(ngModel)]=\"selectedItem\"\n      [ngClass]=\"classes\" \n      (change)=\"onChange($event)\"\n      [hideSelected]=\"true\"\n      [editableSearchTerm]=\"true\"\n      [placeholder]=\"placeholderText\"\n  >\n    <ng-option class=\"reports-select-input-search__option\" *ngFor=\"let item of items\" [value]=\"item\">\n      {{ item }}\n    </ng-option>\n  </ng-select>\n</div>\n"
        },
        {
            "name": "ReportsSelectWithInitialValueComponent",
            "id": "component-ReportsSelectWithInitialValueComponent-9214e58ca9916bc114d2c42ae8ea5fe3",
            "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-with-initial-value/reports-select-with-initial-value.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "reports-select-with-initial-value",
            "styleUrls": [
                "./reports-select-with-initial-value.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports-select-with-initial-value.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "imagesPaths",
                    "line": 11,
                    "type": "string[]"
                },
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "onItemSelect",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "handleValueChange",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'reports-select-with-initial-value',\n  templateUrl: './reports-select-with-initial-value.component.html',\n  styleUrls: ['./reports-select-with-initial-value.component.scss']\n})\n\nexport class ReportsSelectWithInitialValueComponent implements OnInit {\n  @Input() items: string[];\n  @Input() imagesPaths?: string[]\n  @Output() onItemSelect?: EventEmitter<any> = new EventEmitter();\n\n  selectedItem: string;\n\n  handleValueChange(value) {\n    this.onItemSelect.emit(value)\n  }\n\n  ngOnInit(): void {\n    this.selectedItem = this.items[0];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".reports-select-with-initial {\n  &__wrapper {\n    display: flex;\n    align-items: center;\n  \n    & > img {\n      margin-right: 15px;\n    }\n  }\n\n  &__text {\n    text-transform: capitalize;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 100%;\n  }\n\n  &__input {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 12px;\n  }\n\n  ::ng-deep {\n    .ng-select {\n      position: relative;\n      box-sizing: border-box;\n      height: 48px; \n      width: 100%;\n    \n      background: rgba(var(--secondary-color-code), 0.05);\n      border-radius: 8px;\n      color: rgba(var(--secondary-color-code), 1);\n      text-transform: uppercase;\n    \n      &:hover {\n        background: rgba(var(--secondary-color-code), 0.1);\n      }\n    \n      &:after {\n        content: url('../../../../../../assets/images/roll-up.png');\n        position: absolute;\n        top: 17px;\n        right: 21px;\n        transform: rotate(180deg);\n      }\n    \n      &.ng-select-opened{\n        &:after {\n          content: url('../../../../../../assets/images/roll-up.png');\n          position: absolute;\n          top: 17px;\n          right: 21px;\n          transform: rotate(0deg);\n        }\n      }\n    \n      &-container {\n        width: 100%;\n        height: 46px;\n        padding: 0 21px 0 16px;  \n        margin-bottom: 4px;\n        display: flex;\n        align-items: center;\n      }\n    }\n    \n    .ng-option {\n      background-color: var(--input-bg-color);\n      padding: 0 21px 0 16px;  \n      height: 46px;\n      display: flex!important;\n      align-items: center;\n    \n      &:hover {\n        background-color: var(--light-btn-hover);\n      }\n    }\n    \n    .ng-dropdown-panel {\n      position: absolute;\n    }\n    \n    .scroll-host {\n      color: rgba(var(--secondary-color-code), 1);\n      position: absolute;\n      box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n      border-radius: 8px;\n    }\n    \n    .ng-clear-wrapper {\n      display: none;\n    }\n\n    .ng-dropdown-panel-items.scroll-host {\n      width: 100%;\n    }\n  }\n}\n",
                    "styleUrl": "./reports-select-with-initial-value.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"reports-select-with-initial\">\n  <ng-select \n    [(ngModel)]=\"selectedItem\"\n    class=\"reports-select-with-initial__input\" \n    [hideSelected]=\"true\"\n    [searchable]=\"false\"\n    (change)=\"handleValueChange($event)\"\n  >\n    <ng-option class=\"reports-select-with-initial__option\" *ngFor=\"let item of items; let i = index\" [value]=\"item\">\n      <div class=\"reports-select-with-initial__wrapper\">\n        <img *ngIf=\"imagesPaths\" [src]=\"imagesPaths[i]\" [alt]=\"item\">\n        <p [ngClass]=\"imagesPaths && 'reports-select-with-initial__text'\">\n          {{ item }}\n        </p>\n      </div>\n    </ng-option>\n  </ng-select>\n</div>\n\n"
        },
        {
            "name": "ReportStatusComponent",
            "id": "component-ReportStatusComponent-bb93dd807748ef99079960ed87c691d8",
            "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-report-status",
            "styleUrls": [
                "./report-status.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./report-status.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "status",
                    "line": 14,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "setProps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit } from '@angular/core';\n\nconst ACCEPT_COLOR = 'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)';\nconst DECLINE_COLOR = '#EA2D2D';\nconst NON_SELECTED_COLOR = '#F6BC59';\n\n@Component({\n  selector: 'app-report-status',\n  templateUrl: './report-status.component.html',\n  styleUrls: ['./report-status.component.scss']\n})\n\nexport class ReportStatusComponent implements OnInit, OnChanges {\n  @Input() status: string;\n\n  title = '';\n  color = '';\n\n  setProps() {\n    switch(this.status) {\n      case 'decline': \n        this.title = 'Decline';\n        this.color = DECLINE_COLOR;\n        break;\n      case 'accept': \n        this.title = 'Accept';\n        this.color = ACCEPT_COLOR;\n        break;\n      case 'non-selected': \n        this.title = 'Non-selected';\n        this.color = NON_SELECTED_COLOR;\n        break;\n      default: \n        this.title = 'Non-selected';\n        this.color = NON_SELECTED_COLOR;\n    }\n  }\n\n  ngOnInit(): void {\n    this.setProps();\n  }\n\n  ngOnChanges(): void {\n    this.setProps();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".report-status {\n  display: flex;\n  align-items: center;\n\n  &__circle {\n    width: 10px;\n    height: 10px;\n    margin: 0 8px 2px 0;\n    border-radius: 50%;\n    position: relative;\n\n    &:after {\n      content: '';\n      position: absolute;\n      top: 2px;\n      left: 2px;\n      width: 6px;\n      height: 6px;\n      background-color: var(--text-color);\n      border-radius: 50%;\n    }\n  }\n\n  &__title {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 12px;\n    line-height: 14px;\n    color: var(--secondary-color);\n  }\n}",
                    "styleUrl": "./report-status.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"report-status\">\n  <div class=\"report-status__circle\" [style.background]=\"color\"></div>\n  <p class=\"report-status__title\">{{ title }}</p>\n</div>\n"
        },
        {
            "name": "ReportsTextLinkComponent",
            "id": "component-ReportsTextLinkComponent-7bfd1a1c8a2db5fac7458259407bb7ef",
            "file": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "reports-text-link",
            "styleUrls": [
                "reports-text-link.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports-text-link.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "isActive",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appointedClasses",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'reports-text-link',\n  templateUrl: './reports-text-link.component.html',\n  styleUrls: ['reports-text-link.component.scss'],\n})\n\nexport class ReportsTextLinkComponent implements OnChanges {\n  @Input() title: string;\n  @Input() classes: string;\n  @Input() isActive: boolean;\n\n  appointedClasses: string = '';\n\n  ngOnChanges() {\n    this.appointedClasses = this.isActive ? `${this.classes} active` : this.classes;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nav-link-secondary {\n  position: relative;\n  text-transform: uppercase;\n  background: rgba(var(--secondary-color-code), 0.5);\n  -webkit-text-fill-color: transparent;\n  -webkit-background-clip: text;\n  background-clip: text;\n  transition: 0.3;\n  font-family: 'Gramatica Bold', 'open-sans';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 100%;\n\n  &:hover {\n    background: var(--secondary-color); \n    -webkit-background-clip: text;\n    background-clip: text;\n  }\n\n  &:active {\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n    background-clip: text;\n  }\n\n  &.active {\n    text-decoration: none;\n    -webkit-text-fill-color: transparent;\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n    background-clip: text;\n    transition: 0.3;\n  }\n}\n\n.nav-link-highlited {\n  &.active {\n    &::after {\n      width: 100%;\n    }\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -3px;\n    left: 0;\n\n    width: 0;\n    height: 2px;\n\n    background: var(--success-grad-light);\n    transition: 0.3s;\n  }\n\n  &:active {\n    &::after {\n      width: 100%;\n    }\n  }\n}\n\n.nav-link-main {\n  position: relative;\n  background: rgba(var(--secondary-color-code), 0.75);\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-transform: capitalize;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 100%;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n\n    width: 0;\n    height: 1px;\n\n    background-color: rgba(var(--secondary-color-code), 0.75);\n    transition: 0.3s;\n  }\n\n  &:hover {\n    &::after {\n      width: 100%;\n    }\n  }\n\n  &:active {\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n    background-clip: text;\n\n    &::after {\n      width: 0;\n    }\n  }\n\n  &.active {\n    text-decoration: none;\n    background: var(--success-grad-light); \n    -webkit-text-fill-color: transparent;\n    -webkit-background-clip: text;\n    background-clip: text;\n    transition: 0.3;\n  }\n}\n",
                    "styleUrl": "reports-text-link.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<a href=\"#\" [ngClass]=\"appointedClasses\">\n  {{ title }}\n</a>\n"
        },
        {
            "name": "ReportTableComponent",
            "id": "component-ReportTableComponent-d4be37cae6da4d265c2a3982aa488546",
            "file": "src/app/pages-components/Reports/Molecules/report-table/report-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-report-table",
            "styleUrls": [
                "./report-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./report-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "headers",
                    "line": 27,
                    "type": "HeaderItem[]"
                },
                {
                    "name": "initialData",
                    "line": 26,
                    "type": "DataItem[]"
                },
                {
                    "name": "selected",
                    "line": 28,
                    "type": "number[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "type": "DataItem[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "forwardOrder",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "checkIfSelected",
                    "args": [
                        {
                            "name": "id",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDate",
                    "args": [
                        {
                            "name": "seconds",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "jsdoctags": [
                        {
                            "name": "seconds",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48
                },
                {
                    "name": "sortByDate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { formatDate } from './helpers';\n\ninterface DataItem { \n  category: string, \n  date: number, \n  status: string, \n  os: string, \n  city: string, \n  state: string,\n  id: number\n};\n\ninterface HeaderItem {\n  title: string,\n  id: string\n}\n\n@Component({\n  selector: 'app-report-table',\n  templateUrl: './report-table.component.html',\n  styleUrls: ['./report-table.component.scss']\n})\n\nexport class ReportTableComponent implements OnInit {\n  @Input() initialData: DataItem[];\n  @Input() headers: HeaderItem[];\n  @Input() selected: number[];\n\n  data: DataItem[] = [];\n  forwardOrder: boolean = false;\n\n  checkIfSelected(id: number) {\n    return this.selected.includes(id);\n  }\n\n  getDate(seconds: number) {\n    return formatDate(seconds);\n  }\n\n  sortByDate() {\n    this.data = this.data.sort((a, b) => {\n      return this.forwardOrder ? (a.date - b.date) : (b.date - a.date)\n    });\n    this.forwardOrder = !this.forwardOrder;\n  }\n\n  ngOnInit(): void {\n    this.data = this.initialData;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".report-table {\n  width: 100%;\n  min-width: 800px;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 12px;\n\n  &__container {\n    width: 100%;\n    overflow-x: scroll;\n  }\n\n  &__table {\n    width: 100%;\n    text-align: left;\n    color: var(--secondary-color);\n    border-spacing: 0px;\n    border-collapse: collapse;\n  }\n\n  &__head {\n    height: 46px;\n  }\n\n  &__head-item {\n    border: none;\n    padding: 0px 7px;\n    font-weight: 300;\n    color: rgba(var(--secondary-color-code), 0.5);\n  }\n\n  &__row {\n    line-height: 15.5px;\n    border-top: 0.6px solid rgba(var(--secondary-color-code), 0.1)\n  }\n\n  &__row-item {\n    padding: 19px 7px;\n    white-space: pre-line;\n  }\n\n  &__date-button {\n    &:hover {\n      cursor: pointer;\n    }\n  }\n}\n",
                    "styleUrl": "./report-table.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"report-table__container\">\n  <div class=\"report-table\">\n    <table class=\"report-table__table\">\n      <tr class=\"report-table__head\">\n        <th class=\"report-table__head-item\">\n          <reports-checkbox-input \n            [id]=\"'select all'\" \n            [isChecked]=\"checkIfSelected(8)\"\n          >\n          </reports-checkbox-input>\n        </th>\n        <th \n          class=\"report-table__head-item\" \n          *ngFor=\"let header of headers; let i = index\"\n        >\n          <div *ngIf=\"header.id !== 'date'\">\n            {{ header.name }}\n          </div>\n          <div *ngIf=\"header.id === 'date'\" (click)=\"sortByDate()\" class=\"report-table__date-button\">\n            {{ header.name }}\n          </div>\n        </th>\n      </tr>\n      <tr *ngFor=\"let row of data\" class=\"report-table__row\">\n        <td class=\"report-table__row-item\">\n          <reports-checkbox-input \n            [id]=\"row.id\" \n            [isChecked]=\"checkIfSelected(row.id)\"\n          >\n          </reports-checkbox-input>\n        </td>\n        <td class=\"report-table__row-item\">{{ row.category }}</td>\n        <td class=\"report-table__row-item\">{{ getDate(row.date) }}</td>\n        <td class=\"report-table__row-item\">\n          <app-report-status [status]=\"row.status\"></app-report-status>\n        </td>\n        <td class=\"report-table__row-item\">{{ row.os }}</td>\n        <td class=\"report-table__row-item\">{{ row.city }}</td>\n        <td class=\"report-table__row-item\">{{ row.state }}</td>\n      </tr>\n    </table>\n  </div>\n</div>\n"
        },
        {
            "name": "RequestFormComponent",
            "id": "component-RequestFormComponent-844da8a78bed73ca45f3cd5b10fc5ae3",
            "file": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-request-form",
            "styleUrls": [
                "./request-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./request-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialRequiredFieldsData",
                    "line": 23,
                    "type": "Data"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "container",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ]
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "requiredFieldsData",
                    "type": "Data",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 30
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\n\ninterface Data {\n  title: string, \n  isRequired: boolean, \n  type: string, \n  data: {\n    id: string,\n    placeholderText: string,\n    initialValue: string,\n  } \n} []\n\nconst MOBILE_VIEW = 600;\n\n@Component({\n  selector: 'app-request-form',\n  templateUrl: './request-form.component.html',\n  styleUrls: ['./request-form.component.scss']\n})\n\nexport class RequestFormComponent implements OnInit, AfterViewInit {\n  @Input() initialRequiredFieldsData: Data;\n  requiredFieldsData: Data;\n  isMobile: boolean;\n\n  @ViewChild('container') container: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n  }\n\n  handleChange(id: string) {\n    console.log(id)\n  }\n\n  ngAfterViewInit() {\n    this.isMobile = this.container.nativeElement.clientWidth < MOBILE_VIEW;\n    console.log(this.isMobile, 676)\n  }\n\n  ngOnInit() {\n    this.requiredFieldsData = JSON.parse(JSON.stringify(this.initialRequiredFieldsData));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-request-form {\n  width: 100%;\n  background: var(--text-color);\n  box-shadow: 0px 20px 60px rgba(46, 66, 70, 0.2);\n  border-radius: 12px;\n\n  font-family: 'Helvetica', 'open-sans';\n  font-style: normal;\n\n  &__header {\n    padding: 14px 32px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-radius: 12px;\n    background-color: var(--highlited-color-light);\n  }\n\n  &__logo {\n    width: 100px;\n  }\n\n  &__body {\n    padding: 22px 32px 0 32px;\n  }\n\n  &__title {\n    font-weight: 700;\n    font-size: 18px;\n    line-height: 27px;\n    color: var(--secondary-color);\n    margin-bottom: 5px;\n  }\n\n  &__text {\n    font-weight: 400;\n    font-size: 12px;\n    letter-spacing: 5%;\n    line-height: 160%;\n    color: rgba(var(--form-request-color), 0.75);\n    margin-bottom: 32px;\n\n  }\n\n  &__wrapper {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n\n  &__input-item {\n    margin-bottom: 32px;\n  }\n\n  &__buttons {\n    width: 257px;\n    display: flex;\n    justify-content: space-between;\n    padding-bottom: 32px;\n    margin: 0 auto;\n  }\n}",
                    "styleUrl": "./request-form.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"app-request-form\" #container>\n  <div class=\"app-request-form__header\">\n    <img \n      class=\"app-request-form__logo\" \n      src=\"assets/images/data-request/request-logo.png\" \n      alt=\"logo\"\n      [style.width]=\"!isMobile ? '100px' : '70px'\"\n    >\n    <app-request-select-input\n      [data]=\"{\n        id: '1',\n        initialValue: 'English',\n        values: ['English', 'German', 'Italian', 'Danish']\n        }\"\n    ></app-request-select-input>\n  </div>\n  <div class=\"app-request-form__body\">\n    <p class=\"app-request-form__title\">Data Request form</p>\n    <p class=\"app-request-form__text\">\n      We are commited to protecting and respecting your privacy. You can use this form to opt-out of the selling \n      of personal inform\n    </p>\n    <ul class=\"app-request-form__wrapper\">\n      <li \n        *ngFor=\"let item of requiredFieldsData\"\n        class=\"app-request-form__input-item\"\n        [style.width]=\"item.type==='input' && !isMobile ? '48%' : '100%'\"\n      >\n        <app-request-input-block [title]=\"item.title\" [isRequired]=\"item.isRequired\">\n          <app-request-text-input \n            *ngIf=\"item.type==='input'; else textarea\"\n            [data]=\"item.data\"\n            (parentHandler)=\"handleChange($event)\"\n          >\n          </app-request-text-input>\n          <ng-template #textarea>\n            <app-request-text-area [data]=\"item.data\" (parentHandler)=\"handleChange($event)\"></app-request-text-area>\n          </ng-template>\n        </app-request-input-block>\n      </li>\n    </ul>\n  </div>\n  <div class=\"app-request-form__buttons\">\n    <app-request-secondary-button [title]=\"'cancel'\"></app-request-secondary-button>\n    <app-request-primary-button [title]=\"'submit'\"></app-request-primary-button>\n  </div>\n</div>\n"
        },
        {
            "name": "RequestInputBlockComponent",
            "id": "component-RequestInputBlockComponent-ee49a804429cb27a6d83d852d1a882bd",
            "file": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-request-input-block",
            "styleUrls": [
                "./request-input-block.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./request-input-block.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isRequired",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-request-input-block',\n  templateUrl: './request-input-block.component.html',\n  styleUrls: ['./request-input-block.component.scss']\n})\n\nexport class RequestInputBlockComponent {\n  @Input() title: string;\n  @Input() isRequired: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-request-input-block {\n  width: 100%;\n\n  &__title {\n    margin: 3px 0 12px;\n    text-transform: uppercase;\n    color: rgba(var(--secondary-color-code), 0.5);\n    letter-spacing: 5%;\n\n    font-family: 'Helvetica', 'open-sans';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 12px;\n  }\n\n  &__required {\n    color: var(--danger-color);\n    margin-left: 5px;\n  }\n}",
                    "styleUrl": "./request-input-block.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-request-input-block\">\n  <p class=\"app-request-input-block__title\">\n    {{ title }}\n    <span class=\"app-request-input-block__required\" *ngIf=\"isRequired\">*</span>\n  </p>\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "RequestPrimaryButtonComponent",
            "id": "component-RequestPrimaryButtonComponent-0b240581ea62d02af2239803cbce2f45",
            "file": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-primary-button/request-primary-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-request-primary-button",
            "styleUrls": [
                "./request-primary-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./request-primary-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-request-primary-button',\n  templateUrl: './request-primary-button.component.html',\n  styleUrls: ['./request-primary-button.component.scss']\n})\n\nexport class RequestPrimaryButtonComponent implements OnInit {\n  @Input() title: string;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-request-primary-button {\n  padding: 17px 36px;\n  border: none;\n  border-radius: 4px;\n  text-transform: uppercase;\n  color: var(--text-color);\n  background: var(--highlited-color-light);\n  transition: 0.3s;\n\n  font-family: 'Helvetica', 'open-sans';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n\n  &:hover {\n    background: var(--highlited-color-dark);\n  }\n\n  &:active {\n    background: var(--highlited-color-light);\n  }\n}",
                    "styleUrl": "./request-primary-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button class=\"app-request-primary-button\">{{ title }}</button>"
        },
        {
            "name": "RequestSecondaryButtonComponent",
            "id": "component-RequestSecondaryButtonComponent-35dbe6ef70c9f700f0878f58d4b4f30b",
            "file": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-secondary-button/request-secondary-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-request-secondary-button",
            "styleUrls": [
                "./request-secondary-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./request-secondary-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-request-secondary-button',\n  templateUrl: './request-secondary-button.component.html',\n  styleUrls: ['./request-secondary-button.component.scss']\n})\n\nexport class RequestSecondaryButtonComponent {\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-request-secondary-button {\n  padding: 17px 36px;\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n  border-radius: 4px;\n  text-transform: uppercase;\n  color: var(--secondary-color);\n  background: transparent;\n  transition: 0.3s;\n\n  font-family: 'Helvetica', 'open-sans';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n\n  &:hover {\n    border: 1px solid rgba(var(--secondary-color-code), 0.7);\n  }\n\n  &:active {\n    border: 1px solid rgba(var(--secondary-color-code), 1);\n  }\n}",
                    "styleUrl": "./request-secondary-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class=\"app-request-secondary-button\">{{ title }}</button>\n"
        },
        {
            "name": "RequestSelectInputComponent",
            "id": "component-RequestSelectInputComponent-e21286314f469383aff8d5bb90f85d3c",
            "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-select-input/request-select-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-request-select-input",
            "styleUrls": [
                "./request-select-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./request-select-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 16,
                    "type": "Data"
                }
            ],
            "outputsClass": [
                {
                    "name": "parentHandler",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\ninterface Data {\n  id: string,\n  initialValue: string,\n  values: string[]\n}\n\n@Component({\n  selector: 'app-request-select-input',\n  templateUrl: './request-select-input.component.html',\n  styleUrls: ['./request-select-input.component.scss']\n})\n\nexport class RequestSelectInputComponent implements OnInit {\n  @Input() data: Data;\n  @Output() parentHandler: EventEmitter<any> = new EventEmitter();\n\n  selectedItem: string;\n\n  handleChange(event) {\n    console.log(event)\n  }\n\n  ngOnInit(): void {\n    this.selectedItem = this.data.initialValue;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".request-select {\n  width: 130px;\n  font-family: 'Helvetica', 'open-sans';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n\n  ::ng-deep {\n\n    .ng-dropdown-panel-items.scroll-host {\n      width: 100%;\n    }\n\n    .ng-select {\n      position: relative;\n      box-sizing: border-box;\n      height: 38px; \n      width: 100%;\n    \n      background: rgba(var(--text-color-code), 0.1);\n      border-radius: 8px;\n      border: 1px solid rgba(var(--text-color-code), 0.1);\n      color: rgba(var(--text-color-code), 1);\n      transition: 0.3s;\n    \n      &:hover {\n        border: 1px solid rgba(var(--secondary-color-code), 0.3);\n      }\n    \n      &:after {\n        content: url('../../../../../../assets/images/data-request/request-select.png');\n        position: absolute;\n        top: calc(50% - 6px);\n        right: 21px;\n      }\n    \n      &.ng-select-opened {\n        &:after {\n          content: url('../../../../../../assets/images/data-request/request-select.png');\n          position: absolute;\n          top: calc(50% - 6px);\n          right: 21px;\n          transform: rotate(180deg);\n        }\n      }\n    \n      &-container {\n        width: 100%;\n        height: 38px;\n        padding: 12px 21px 12px 16px;\n        margin-bottom: 4px;\n      }\n    }\n    \n    .ng-option {\n      background-color: var(--text-color);\n      padding: 12px 21px 12px 16px;  \n    \n    \n      &:hover {\n        background-color: var(--select-request-color);\n      }\n    }\n    \n    .ng-dropdown-panel {\n      position: absolute;\n      left: 0;\n      text-align: left;\n      width: 100%!important;\n    }\n    \n    .scroll-host {\n      color: rgba(var(--secondary-color-code), 1);\n      position: absolute;\n      box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n      border-radius: 8px;\n      border: 1px solid rgba(var(--secondary-color-code), 0.3);\n    }\n    \n    .ng-clear-wrapper {\n      display: none;\n    }\n  }\n}",
                    "styleUrl": "./request-select-input.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"request-select\">\n  <ng-select \n      [(ngModel)]=\"selectedItem\"\n      class=\"request-select__input\" \n      [hideSelected]=\"true\"\n      [searchable]=\"false\"\n      [id]=\"data.id\"\n      (change)=\"handleChange($event)\"\n  >\n    <ng-option class=\"request-select__option\" *ngFor=\"let item of data.values\" [value]=\"item\">\n      {{ item }}\n    </ng-option>\n  </ng-select>\n</div>\n"
        },
        {
            "name": "RequestTextAreaComponent",
            "id": "component-RequestTextAreaComponent-6b17c3b19600f33c218907f81f1baf17",
            "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-area/request-text-area.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-request-text-area",
            "styleUrls": [
                "./request-text-area.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./request-text-area.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 16,
                    "type": "Data"
                }
            ],
            "outputsClass": [
                {
                    "name": "parentHandler",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputValue",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\ninterface Data {\n  id: string,\n  placeholderText: string,\n  initialValue: string,\n}\n\n@Component({\n  selector: 'app-request-text-area',\n  templateUrl: './request-text-area.component.html',\n  styleUrls: ['./request-text-area.component.scss']\n})\n\nexport class RequestTextAreaComponent implements OnInit {\n  @Input() data: Data;\n  @Output() parentHandler: EventEmitter<any> = new EventEmitter();\n\n  inputValue = '';\n\n  setInitialValue() {\n    this.inputValue = this.data.initialValue;\n  }\n\n  ngOnChanges(): void {\n    this.setInitialValue();\n  }\n\n  ngOnInit(): void {\n    this.setInitialValue();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-request-textarea {\n  min-height: 94px;\n  width: 100%;\n  padding: 19px;\n  resize: none;\n\n  font-family: 'Helvetica', 'open-sans';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 20px;\n  color: var(--secondary-color);\n  letter-spacing: 0.03em;\n  \n  background: var(--text-color);\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n  border-radius: 12px;\n}\n",
                    "styleUrl": "./request-text-area.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<textarea \n  class=\"app-request-textarea\"\n  [id]=\"data.id\"\n  [placeholder]=\"data.placeholderText\"\n  [(ngModel)]=\"inputValue\" \n  spellcheck=\"false\"\n  autosize\n>\n</textarea>"
        },
        {
            "name": "RequestTextInputComponent",
            "id": "component-RequestTextInputComponent-cb8a882a867fbb3fd5955dc51deb6a16",
            "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-input/request-text-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-request-text-input",
            "styleUrls": [
                "./request-text-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./request-text-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 16,
                    "type": "Data"
                }
            ],
            "outputsClass": [
                {
                    "name": "parentHandler",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputValue",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\ninterface Data {\n  id: string,\n  placeholderText: string,\n  initialValue: string,\n}\n\n@Component({\n  selector: 'app-request-text-input',\n  templateUrl: './request-text-input.component.html',\n  styleUrls: ['./request-text-input.component.scss']\n})\n\nexport class RequestTextInputComponent implements OnInit, OnChanges {\n  @Input() data: Data;\n  @Output() parentHandler: EventEmitter<any> = new EventEmitter();\n\n  inputValue = '';\n\n  setInitialValue() {\n    this.inputValue = this.data.initialValue;\n  }\n\n  ngOnChanges(): void {\n    this.setInitialValue();\n  }\n\n  ngOnInit(): void {\n    this.setInitialValue();\n    this.parentHandler.emit(this.data.id)\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-request-text-input {\n  width: 100%;\n  padding: 17px 19px;\n  color: var(--secondary-color);\n  letter-spacing: 0.03em;\n  background: var(--text-color);\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n  border-radius: 12px;\n\n  font-family: 'Helvetica', 'open-sans';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 20px;\n}",
                    "styleUrl": "./request-text-input.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<input \n  class=\"app-request-text-input\"\n  type=\"text\"\n  [id]=\"data.id\"\n  [placeholder]=\"data.placeholderText\"\n  [(ngModel)]=\"inputValue\" \n  spellcheck=\"false\"\n>\n"
        },
        {
            "name": "RollUpComponent",
            "id": "component-RollUpComponent-4816f83388ba1760bbd6581af71c532c",
            "file": "src/app/molecules/roll-up/roll-up.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-roll-up",
            "styleUrls": [
                "./roll-up.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./roll-up.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "number",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleContent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-roll-up',\n  templateUrl: './roll-up.component.html',\n  styleUrls: ['./roll-up.component.scss']\n})\n\nexport class RollUpComponent {\n  @Input() title: string;\n  @Input() number: number;\n\n  isOpen: boolean = false;\n  toggleContent() {\n    this.isOpen = !this.isOpen;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".roll-up {\n  width: 100%;\n  height: auto;\n  padding: 12px 16px;\n  background-color: rgba(var(--secondary-color-code), 0.05);\n  border-radius: 8px;\n\n  &__header {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  &__number {\n    font-family: 'Gramatica Regular', 'open-sans';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 100%;\n  }\n\n  &__text {\n    color: var(--secondary-color);\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 100%;\n  }\n\n  &__content {\n    margin: 16px 0 6px 0;\n  }\n\n  &__button {\n    width: 13px;\n    height: 7px;\n    transition: 0.3s;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n}",
                    "styleUrl": "./roll-up.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"roll-up\">\n  <div class=\"roll-up__header\">\n    <p class=\"roll-up__text\">\n      {{ title }} \n      <span class=\"roll-up__number\">{{ number }}</span>\n    </p>\n    <img \n      (click)=\"toggleContent()\"\n      class=\"roll-up__button\" \n      src=\"assets/images/roll-up.png\" \n      [style.transform]=\"isOpen ? 'rotate(0deg)' : 'rotate(180deg)'\"\n      [alt]=\"title\"\n    >\n  </div>\n  <div class=\"roll-up__content\" *ngIf=\"isOpen\">\n    <ng-content></ng-content>\n  </div>\n</div>\n"
        },
        {
            "name": "RoundChartComponent",
            "id": "component-RoundChartComponent-299387a0367f591de6f9e559f9f1ccb4",
            "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-round-chart",
            "styleUrls": [
                "./round-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./round-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "addWord",
                    "line": 57,
                    "type": "string"
                },
                {
                    "name": "colors",
                    "line": 56,
                    "type": "string[]"
                },
                {
                    "name": "data",
                    "line": 55,
                    "type": "Data[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "colorsList",
                    "defaultValue": "['#9ED0E0', '#612C83', '#509AAF', '#F8BD5A', '#FF9F68', '#645FC8']",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "isMobile",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "isTipVisible",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "legend",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'legend'"
                        }
                    ]
                },
                {
                    "name": "mainLabel",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "mainValue",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "tipsLeft",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "tipsTop",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "values",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 60
                }
            ],
            "methodsClass": [
                {
                    "name": "createChart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 146
                },
                {
                    "name": "setCoordinates",
                    "args": [
                        {
                            "name": "top",
                            "type": "number"
                        },
                        {
                            "name": "left",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "jsdoctags": [
                        {
                            "name": "top",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "left",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateMainValue",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 71
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, OnChanges, HostListener, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\nimport Chart from 'chart.js';\nimport { getRandomColor } from './helpers';\n\n// created new chart type with rounded ends based on Chart js\nChart.defaults.RoundedDoughnut = Chart.helpers.clone(Chart.defaults.doughnut);\nChart.controllers.RoundedDoughnut = Chart.controllers.doughnut.extend({\n  draw: function(ease) {\n    const ctx = this.chart.ctx;\n    const easingDecimal = ease || 1;\n    const arcs = this.getMeta().data;\n    Chart.helpers.each(arcs, function(arc, i) {\n      arc.transition(easingDecimal).draw();\n      const pArc = arcs[i === 0 ? arcs.length - 1 : i - 1];\n      const pColor = pArc._view.backgroundColor;\n      const vm = arc._view;\n      const radius = (vm.outerRadius + vm.innerRadius) / 2;\n      const thickness = (vm.outerRadius - vm.innerRadius) / 2;\n      const startAngle = Math.PI - vm.startAngle - Math.PI / 2;\n      const angle = Math.PI - vm.endAngle - Math.PI / 2;\n\n      ctx.save();\n      ctx.translate(vm.x, vm.y);\n      ctx.fillStyle = i === 0 ? vm.backgroundColor : pColor;\n      ctx.beginPath();\n      ctx.arc(radius * Math.sin(startAngle), radius * Math.cos(startAngle), thickness, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.beginPath();\n      ctx.arc(radius * Math.sin(angle), radius * Math.cos(angle), thickness, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.restore();\n    });\n  }\n});\n\ninterface Data {\n  title: string,\n  value: number\n}\n\n const MOBILE_WIDTH = 620;\n const TIPS_WIDTH = 220;\n const TIPS_ITEM_HEIGHT = 16;\n const TIPS_ITEM_MARGIN = 8;\n const TIPS_BLOCK_MARGIN = 32;\n\n@Component({\n  selector: 'app-round-chart',\n  templateUrl: './round-chart.component.html',\n  styleUrls: ['./round-chart.component.scss']\n})\n\nexport class RoundChartComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() data: Data[];\n  @Input() colors: string[];\n  @Input() addWord: string;\n\n  isTipVisible: boolean = false;\n  values: number[];\n  colorsList: string[] = ['#9ED0E0', '#612C83', '#509AAF', '#F8BD5A', '#FF9F68', '#645FC8'];\n  mainValue: number;\n  mainLabel: string;\n  tipsTop: number = 0;\n  tipsLeft : number = 0;\n  isMobile: boolean = false;\n\n  @ViewChild('legend') legend: ElementRef;\n  \n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.legend.nativeElement.clientWidth < MOBILE_WIDTH;\n  }\n  \n  createChart() {\n    if(!this.colors && !(this.colorsList.length >= this.data.length) ) {\n      const updatedColorsList = [];\n      for (let i = 0; i < this.data.length; i++) {\n        updatedColorsList.push(getRandomColor());\n      }\n      this.colorsList = updatedColorsList;\n    }\n    this.values = this.data.map((item) => item.value);\n    this.mainValue = this.values[0];\n    this.mainLabel = this.data[0].title;\n\n    const ctx = <HTMLCanvasElement>document.querySelector('.donut-rounded-chart__canvas')\n    const passPropsToUpdateMainValue = (index) => {\n      this.isTipVisible = true;\n      this.updateMainValue(index);\n    };\n    const passPropsToHideTooltip = () => this.isTipVisible = false;\n    new Chart(ctx, {\n      type: 'RoundedDoughnut',\n      data: {\n        datasets: [\n          {\n            data: this.values,\n            backgroundColor: this.colorsList,\n            borderWidth: 0\n          }\n        ]\n      },\n      options: { \n        events: ['mousemove', 'mouseout'],\n        onHover: (event) => {\n          if (this.isTipVisible) {\n            this.setCoordinates(event.pageY, event.pageX)\n          }\n        },\n        cutoutPercentage: 81,\n        tooltips: {\n          enabled: false,\n          custom: function(tooltipModel) {\n            if (tooltipModel.dataPoints) {\n              passPropsToUpdateMainValue(tooltipModel.dataPoints[0].index);\n            } else {\n              passPropsToHideTooltip ();\n            }\n          }\n        }\n      }\n    });\n  }\n\n  updateMainValue (index: number) {\n    this.mainValue = this.values[index];\n    this.mainLabel = this.data[index].title;\n  }\n\n  setCoordinates(top:number, left: number) {\n    this.tipsTop = \n      top - (TIPS_ITEM_HEIGHT * this.data.length + \n      TIPS_ITEM_MARGIN * (this.data.length + 1)) - TIPS_BLOCK_MARGIN;\n    this.tipsLeft = left - TIPS_WIDTH / 2;\n  }\n\n  ngAfterViewInit() {\n    this.isMobile = this.legend.nativeElement.clientWidth < MOBILE_WIDTH;\n  }\n\n  ngOnChanges() {\n    this.createChart();\n  }\n\n  ngOnInit(): void {\n    this.createChart();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".donut-rounded-chart {\n  width: 100%;\n  max-width: 865px;\n  padding: 0 7%;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n\n  &__canvas {\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  &__canvas-wrapper {\n    width: 300px;\n    max-height: 300px;\n    max-width: 300px;\n    position: relative;\n  }\n\n  &__wrapper {\n    width: 100%;\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  &__value {\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-size: 42px;\n    line-height: 120%;\n    text-transform: capitalize;\n    background: var(--success-grad-light);\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n\n  &__main-value {\n    position: absolute;\n    top: 55px;\n    left: 50px;\n    padding-top: 67px;\n\n    height: 200px;\n    width: 200px;\n    \n    background: var(--text-color-code);\n    box-shadow: 11.1044px 11.1044px 33.3131px rgba(44, 59, 82, 0.2);\n    border-radius: 50%;\n    text-align: center;\n  }\n\n  &__label {\n    opacity: 0.5;\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 100%;\n    text-transform: uppercase;\n    background: var(--success-grad-light);\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n\n  &__tips {\n    width: 228px;\n    padding: 12px;\n    position: fixed;\n    z-index: 3;\n\n    background-color: rgba(var(--secondary-color-code), 1);\n    border-radius: 12px;\n    color: var(--asimetric-bg-color);\n\n    &:after {\n      content: '';\n      width: 16px;\n      height: 7px;\n      position: absolute;\n      bottom: -6px;\n      left: calc(50% - 4px);\n      z-index: 4;\n\n      background: url('../../../../../../assets/images/triangle.png') center no-repeat;\n      background-size: cover;\n    }\n\n    &-item {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      width: 100%;\n      margin: 8px 0;\n    }\n\n    &-text {\n      display: flex;\n      align-items: center;\n      font-family: 'Sofia pro', 'open-sans';\n      font-style: normal;\n      font-weight: 300;\n      font-size: 12px;\n    }\n    \n    &-color {\n      display: block;\n      width: 6px;\n      height: 6px;\n      border-radius: 50%;\n      margin-right: 8px;\n    }\n\n    &-value {\n      font-weight: 600;\n      font-size: 16px;\n      line-height: 100%;\n    }\n  }\n\n  &__legend {\n    width: 40%;\n    max-width: 300px;\n    min-width: 250px;\n\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: 30px;\n    row-gap: 30px;\n\n    &-item {\n      display: flex;\n      align-items: center;\n      font-family: 'Gramatica Bold', 'open-sans';\n      font-weight: 400;\n      font-size: 12px;\n      line-height: 100%;\n      text-transform: uppercase;\n      color: rgba(var(--secondary-color-code), 0.75);\n\n      &:hover {\n        cursor: pointer;\n      }\n    }\n\n    &-color {\n      width: 24px;\n      height: 24px;\n      margin-right: 12px;\n      border-radius: 4px;\n    }\n  }\n}\n\n.chartjs-size-monitor {\n  width: 100%;\n  height: 100%;\n}",
                    "styleUrl": "./round-chart.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"donut-rounded-chart\">\n  <div \n    class=\"donut-rounded-chart__wrapper\" \n    #legend\n    [style.flexDirection]=\"isMobile ? 'column' : 'row'\"\n    [style.alignItems]=\"isMobile && 'center'\"\n  >\n    <div class=\"donut-rounded-chart__canvas-wrapper\" [style.marginBottom]=\"isMobile && '30px'\">\n      <canvas width=\"100%\" height=\"100%\" class=\"donut-rounded-chart__canvas\"></canvas>\n      <div class=\"donut-rounded-chart__main-value\">\n        <p class=\"donut-rounded-chart__value\">\n          {{ mainValue }}\n        </p>\n        <p class=\"donut-rounded-chart__label\">\n          {{ mainLabel }} {{ addWord }}\n        </p>\n      </div>\n    </div>\n    <ul class=\"donut-rounded-chart__legend\">\n      <li \n        *ngFor=\"let item of data; let i=index\" \n        class=\"donut-rounded-chart__legend-item\"\n        (click)=\"updateMainValue(i)\"\n      >\n        <div class=\"donut-rounded-chart__legend-color\" [style.backgroundColor]=\"colorsList[i]\"></div>\n        {{ item.title }}\n      </li>\n    </ul>\n  </div>\n  <div \n    *ngIf=\"isTipVisible && !isMobile\" \n    class=\"donut-rounded-chart__tips\" \n    #tips\n    [style.top]=\"tipsTop+'px'\"\n    [style.left]=\"tipsLeft+'px'\"\n  >\n    <ul class=\"donut-rounded-chart__tips-list\">\n      <li class=\"donut-rounded-chart__tips-item\" *ngFor=\"let item of data; let i=index\">\n        <div class=\"donut-rounded-chart__tips-text\">\n          <div class=\"donut-rounded-chart__tips-color\" [style.backgroundColor]=\"colorsList[i]\"></div>\n          {{ item.title }}\n        </div>\n        <div class=\"donut-rounded-chart__tips-value\">{{ item.value }}</div>\n      </li>\n    </ul>\n  </div>\n</div>\n"
        },
        {
            "name": "RoundIconComponent",
            "id": "component-RoundIconComponent-4cce273b4bd1b8115edd607a99cfed31",
            "file": "src/app/atoms/icons/round-icon/round-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-round-icon",
            "styleUrls": [
                "./round-icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./round-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "boldText",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "classes",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "link",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "linkText",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "regularText",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-round-icon',\n  templateUrl: './round-icon.component.html',\n  styleUrls: ['./round-icon.component.scss']\n})\n\nexport class RoundIconComponent {\n  @Input() classes: string;\n  @Input() boldText?: string;\n  @Input() regularText?: string;\n  @Input() linkText?: string;\n  @Input() link?: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-round-icon {\n  width: 19px;\n  height: 19px;\n  border-radius: 50%;\n  position: relative;\n\n  &-wrapper {\n    display: flex;\n    align-items: center;\n    color: var(--secondary-color);\n  }\n\n  &__text {\n    margin-left: 16px;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 12px;\n  }\n\n  &__regular {\n    margin-left: 16px;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 12px;\n  }\n\n  &__link {\n    margin-left: 8px;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 12px;\n  }\n\n  &__positive {\n    background: var(--success-grad-light);\n\n    &:after {\n      content: \"\";\n      width: 19px;\n      height: 19px;\n      position: absolute;\n      background: no-repeat center url(\"../../../../assets/images/checkbox.svg\");\n    }\n  }\n\n  &__negative {\n    background: rgba(var(--danger-color-code), 0.2);\n\n    &:after {\n      content: \"\";\n      width: 19px;\n      height: 19px;\n      position: absolute;\n      background: no-repeat center url(\"../../../../assets/images/close.svg\");\n    }\n  }\n}",
                    "styleUrl": "./round-icon.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-round-icon-wrapper\">\n  <div [ngClass]=\"classes\"></div>\n  <p \n    class=\"app-round-icon__text\" \n    *ngIf=\"boldText\"\n  >\n    {{ boldText }}\n  </p>\n  <a \n    [href]=\"link\" \n    class=\"app-round-icon__link\" \n    *ngIf=\"link && linkText\"\n  >\n    {{ linkText }}\n  </a>\n  <p \n    class=\"app-round-icon__regular\" \n    *ngIf=\"regularText\"\n  >\n    {{ regularText }}\n  </p>\n</div>\n"
        },
        {
            "name": "ScanAnimationComponent",
            "id": "component-ScanAnimationComponent-4e1169f6dab08960767b6591d56655d7",
            "file": "src/app/atoms/scan-animation/scan-animation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-scan-animation",
            "styleUrls": [
                "./scan-animation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./scan-animation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-scan-animation',\n  templateUrl: './scan-animation.component.html',\n  styleUrls: ['./scan-animation.component.scss']\n})\n\nexport class ScanAnimationComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".scan-animation {\n  position: relative;\n  width: fit-content;\n\n  &__loader {\n    position: absolute;\n    left: -13px;\n\n    width: 106px;\n    height: 40px;\n    overflow: hidden;\n    background: linear-gradient(180deg, rgba(255, 255, 255, 0) -20px, #FFFFFF 81.25%, #FFFFFF 40px);\n  \n    -webkit-animation: 2s linear 0s infinite alternate loading;\n    -moz-animation: 2s linear 0s infinite alternate loading;\n    -o-animation: 2s linear 0s infinite alternate loading;\n    animation: 2s linear 0s infinite alternate loading;\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      bottom: 0;\n      left: 0;\n\n      width: 112px;\n      height: 2px;\n      \n      background: var(--success-grad-dark);\n      border-radius: 50%;\n    }\n  }\n\n  &__img {\n    width: 80px;\n    height: 95px;\n  }\n}\n\n@-webkit-keyframes loading { from { top:-30px; } to { top:55px; }  }\n@-moz-keyframes loading { from { top:-30px; } to { top:55px; }  }\n@-o-keyframes loading { from { top:-30px; } to { top:55px; }  }\n@keyframes loading { from { top:-30px; } to { top:55px; }  }",
                    "styleUrl": "./scan-animation.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "\n<div class=\"scan-animation\">\n  <img src=\"assets/images/scan.png\" alt=\"document\" class=\"scan-animation__img\">\n  <div class=\"scan-animation__loader\"></div>\n</div>\n"
        },
        {
            "name": "ScanReportComponent",
            "id": "component-ScanReportComponent-c0fdbf036d4686c29162232cfd3e8f98",
            "file": "src/app/organisms/scan-report/scan-report.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-scan-report",
            "styleUrls": [
                "./scan-report.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./scan-report.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "element",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nav'"
                        }
                    ]
                },
                {
                    "name": "isMobile",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "isSideMenuVisible",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "items",
                    "defaultValue": "['reports', 'domains', 'users', 'account', 'request portal']",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "itemsToSearch",
                    "defaultValue": "['My current company', 'My clients company', 'secure privacy', 'secure privacy2', 'secure privacy3']",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "leftSideMenuItems",
                    "defaultValue": "[\n    { title: 'scan'},\n    { title: 'style'},\n    { title: 'cookie banner'},\n    { title: 'IAB 2.0 settings'},\n    { title: 'Preference Center', sections: ['GDPR/ePrivacy', 'CCPA', 'LGPD']},\n    { title: 'data request form'},\n    { title: 'Preference Center', sections: ['Privacy Policy', 'Cookie Declaration', 'Embed On Website']},\n    { title: 'cookie classification'},\n    { title: 'languages'},\n    { title: 'coverage'},\n    { title: 'installation'},\n  ]",
                    "type": "SideItems[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "mobileMenuItems",
                    "defaultValue": "[\n    { title: 'Reports', svgPath: 'assets/images/menu/Reports.svg',   isActive: false,},\n    { title: 'Domains', svgPath: 'assets/images/menu/Domains.svg',   isActive: false,},\n    { title: 'Account', svgPath: 'assets/images/menu/Account.svg',   isActive: false,},\n    { title: 'Options', svgPath: 'assets/images/menu/Options.svg',   isActive: false,},\n  ]",
                    "type": "MobileItems[]",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63
                },
                {
                    "name": "toggleSideMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 57
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 52
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, OnInit, HostListener, ViewChild } from '@angular/core';\n\ninterface SideItems {\n  title: string;\n  sections?: string[],\n}\n\ninterface MobileItems {\n  title: string;\n  svgPath: string,\n  isActive: boolean\n}\n\n@Component({\n  selector: 'app-scan-report',\n  templateUrl: './scan-report.component.html',\n  styleUrls: ['./scan-report.component.scss']\n})\n\nexport class ScanReportComponent implements OnInit {\n  items: string[] = ['reports', 'domains', 'users', 'account', 'request portal'];\n  itemsToSearch: string[] = ['My current company', 'My clients company', 'secure privacy', 'secure privacy2', 'secure privacy3'];\n  leftSideMenuItems: SideItems[] = [\n    { title: 'scan'},\n    { title: 'style'},\n    { title: 'cookie banner'},\n    { title: 'IAB 2.0 settings'},\n    { title: 'Preference Center', sections: ['GDPR/ePrivacy', 'CCPA', 'LGPD']},\n    { title: 'data request form'},\n    { title: 'Preference Center', sections: ['Privacy Policy', 'Cookie Declaration', 'Embed On Website']},\n    { title: 'cookie classification'},\n    { title: 'languages'},\n    { title: 'coverage'},\n    { title: 'installation'},\n  ]\n  mobileMenuItems: MobileItems[] = [\n    { title: 'Reports', svgPath: 'assets/images/menu/Reports.svg',   isActive: false,},\n    { title: 'Domains', svgPath: 'assets/images/menu/Domains.svg',   isActive: false,},\n    { title: 'Account', svgPath: 'assets/images/menu/Account.svg',   isActive: false,},\n    { title: 'Options', svgPath: 'assets/images/menu/Options.svg',   isActive: false,},\n  ]\n  isMobile: boolean = false;\n  isSideMenuVisible: boolean = false;\n\n  toggleSideMenu() {\n    this.isSideMenuVisible = !this.isSideMenuVisible;\n  }\n  \n  @ViewChild('nav') element: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = (event.target.innerWidth < 800) ? true : false;\n  }\n\n  @HostListener('document:click', ['$event'])\n\tonClick(event: Event) {\n    if (!this.element.nativeElement.contains(event.target)) {\n      this.isSideMenuVisible = false;\n    }\n  }\n  \n  ngOnInit(): void {\n    this.isMobile = (window.innerWidth < 800) ? true : false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-scan-report {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 100%;\n  background-color: var(--layout-bg-color);\n  color: var(--secondary-color);\n  \n  ::ng-deep {\n    app-select-input-search {\n      width: 80%;\n    }\n  }\n  \n  &__title {\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-size: 42px;\n    line-height: 130%;\n    margin-bottom: 35px;\n  }\n\n  &__logo {\n    width: 117px;\n    height: 46px;   \n  }\n\n  &__wrapper {\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background: rgba(var(--text-color-code), 0.5);\n  }\n\n  &__nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    \n    padding: 20px 64px;\n    width: 100%;\n    max-width: 1280px;\n  }\n\n  &__container {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 1280px;\n    padding: 22px 45px 220px 45px;\n\n    &--left {\n      width: 260px;\n    }\n\n    &--right {\n      width: 72%;\n    }\n  }\n\n  &__box {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    margin-bottom: 42px;\n  }\n}\n\n\n\n@media screen and (max-width: 1150px) {\n  .app-scan-report {\n    &__nav {\n      padding: 20px;\n    }\n\n    &__container {\n      padding: 20px;\n\n      &--right {\n        width: 60%;\n      }\n    }\n  }\n}\n\n@media screen and (max-width: 800px) {\n  .app-scan-report {\n    text-align: center;\n\n    ::ng-deep {\n      app-mobile-main-navigation-menu {\n        width: 100%;\n      }\n    \n      app-checkbox-input-simple {\n        text-align: left;\n      }\n    \n      app-composite-menu {\n        position: absolute; \n        top: 90px;\n        left: 0;\n        z-index: 2;\n    \n        transition: margin-left 1s;\n      }\n    }\n    \n    &__nav {\n      position: relative;\n    }\n\n    &__container {\n      &--right {\n        width: 100%;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./scan-report.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"block\" class=\"app-scan-report\">\n  <div class=\"app-scan-report__wrapper\">\n    <nav class=\"app-scan-report__nav\" *ngIf=\"!isMobile\">\n      <img class=\"app-scan-report__logo\" src=\"assets/images/logo.png\" alt=\"logo\">\n      <app-main-navigation-menu [items]=\"items\"></app-main-navigation-menu>\n      <app-info-button [title]=\"'support'\"></app-info-button>\n    </nav>\n    <nav class=\"app-scan-report__nav\" #nav *ngIf=\"isMobile\">\n      <app-mobile-button \n        [isOpen]=\"isSideMenuVisible\" \n        (click)=\"toggleSideMenu()\"\n        [svgPathActive]=\"'assets/images/closeMobileMenu.svg'\"\n        [svgPathNonActive]=\"'assets/images/mobileMenu.svg'\"\n      >\n      </app-mobile-button>\n      <app-select-input-search\n        [classes]=\"'custom-icon'\"\n        [placeholderText]=\"'Search for'\"\n        [items]=\"itemsToSearch\" \n      >\n      </app-select-input-search>\n      <app-composite-menu \n        [items]=\"leftSideMenuItems\" \n        *ngIf=\"isSideMenuVisible\"\n      >\n      </app-composite-menu>\n    </nav>\n  </div>\n  <div class=\"app-scan-report__container\">\n    <div class=\"app-scan-report__container--left\" *ngIf=\"!isMobile\">\n      <div class=\"app-scan-report__box\">\n        <app-light-button [srcPath]=\"'assets/images/back-icon.png'\"></app-light-button>\n        <app-select-input-search\n          [classes]=\"'custom-icon'\"\n          [placeholderText]=\"'Search for'\"\n          [items]=\"itemsToSearch\" \n        >\n        </app-select-input-search>\n      </div>\n      <app-composite-menu [items]=\"leftSideMenuItems\"></app-composite-menu>\n    </div>\n    <div class=\"app-scan-report__container--right\">\n      <h1 class=\"app-scan-report__title\">Scan Report</h1>\n      <app-scan-screens></app-scan-screens>\n    </div>\n  </div>\n  <app-mobile-main-navigation-menu *ngIf=\"isMobile\" [items]=\"mobileMenuItems\"></app-mobile-main-navigation-menu>\n</div>\n"
        },
        {
            "name": "ScanScreensComponent",
            "id": "component-ScanScreensComponent-94aeaa87fc98238abba79443253e380f",
            "file": "src/app/molecules/scan-screens/scan-screens.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-scan-screens",
            "styleUrls": [
                "./scan-screens.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./scan-screens.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-scan-screens',\n  templateUrl: './scan-screens.component.html',\n  styleUrls: ['./scan-screens.component.scss'],\n})\n\nexport class ScanScreensComponent {\n  @Input() items: string[];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-scan-screen {\n  width: 100%;\n  padding: 32px 32px 72px 32px;\n  background: var(--text-color);\n  border-radius: 20px;\n  color: var(--secondary-color);\n\n  &__title {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    color: var(--secondary-color);\n    margin-bottom: 18px;\n    margin-top: 32px;\n  }\n\n  &__text {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 100%;\n    margin-bottom: 20px;\n    opacity: 0.75;\n  }\n\n  &__container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n\n    ::ng-deep {\n      .app-checkbox-input-simple__container {\n        margin-bottom: 20px;\n      }\n    }\n  }\n\n  &__wrapper {\n    width: 100%;\n    max-width: 355px;\n    height: 120px;\n    margin-bottom: 25px;\n    padding: 16px 16px 16px 24px;\n    background: var(--card-bg-color);\n    border-radius: 12px;\n  }\n\n  &__list {\n    height: 88px;\n    width: 100%;\n    max-width: 315px;\n    overflow-y: scroll;\n    line-height: 19px;\n    color: var(--secondary-color-code);\n\n    &::-webkit-scrollbar {\n      width: 5px;\n    }\n    \n    &::-webkit-scrollbar-track {\n      background: var(--asimetric-bg-color);\n      -webkit-border-radius: 20px;\n      border-radius: 20px;\n      width: 5px;\n    }\n    \n    &::-webkit-scrollbar-thumb {\n      -webkit-border-radius: 20px;\n      border-radius: 20px;\n      background: var(--secondary-color); \n      width: 5px;\n    }\n\n    &-item {\n      margin-bottom: 5px;\n      font-family: 'Sofia pro', 'open-sans';\n      font-style: normal;\n      font-weight: 300;\n      font-size: 12px;\n    }\n  }\n}\n",
                    "styleUrl": "./scan-screens.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-scan-screen\">\n  <app-text-with-after-gradient-line [title]=\"'scan report'\"></app-text-with-after-gradient-line>\n  <div class=\"app-scan-screen__container\">\n    <app-scan-animation></app-scan-animation>\n    <h3 class=\"app-scan-screen__title\">Scaning halo-lab.com</h3>\n    <p class=\"app-scan-screen__text\">The site is being scanned, it will take 5-7 minutes. </p>\n    <div class=\"app-scan-screen__wrapper\">\n      <ul class=\"app-scan-screen__list\">\n        <li class=\"app-scan-screen__list-item\" *ngFor=\"let item of items\">{{ item }}</li>\n      </ul>\n    </div>\n    <app-checkbox-input-simple\n      [isChecked]=\"true\"\n      [title]=\"'Send me an e-mail once the scan is completed'\"\n    >\n    </app-checkbox-input-simple>\n    <app-simple-button\n      [title]=\"'notify me'\"\n      [classes]=\"'btn-success-asimetric'\"\n    >\n    </app-simple-button>\n  </div>\n</div>\n"
        },
        {
            "name": "searchItemComponent",
            "id": "component-searchItemComponent-c04584685abc1f9ee048d1ec42325888",
            "file": "src/app/atoms/searchItem/searchItem.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-item",
            "styleUrls": [
                "searchItem.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./searchItem.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-search-item',\n  templateUrl: './searchItem.component.html',\n  styleUrls: ['searchItem.component.scss'],\n})\n\nexport class searchItemComponent {\n  @Input() title: string;\n  @Input() classes: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".search-list__item {\n  width: 100%;\n  height: 46px;\n  padding: 15px 53px;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 100%;\n\n  list-style: none;\n  transition: 0.3s;\n  background: var(--input-bg-color);\n  color: var(--secondary-color);\n  opacity: 0.75;\n\n  &:hover {\n    cursor: pointer;\n    background-color: var(--light-btn-hover);\n  }\n}\n\n.list-item-icon {\n  width: 100%;\n  height: auto;\n  padding: 19px 53px;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 100%;\n\n  border: 1px solid rgba(var(--secondary-color-code), 0.1);\n  border-radius: 8px;\n  position: relative;\n  color: rgba(var(--secondary-color-code), 0.7);\n\n  &:after {\n    content: url('../../../assets/images/check.png');\n    position: absolute;\n    left: 17px;\n    top: calc(50% - 10px);\n  }\n}",
                    "styleUrl": "searchItem.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<li [ngClass]=\"classes\">{{ title }}</li>\n\n"
        },
        {
            "name": "SecondaryBorderButtonComponent",
            "id": "component-SecondaryBorderButtonComponent-09b6b7875f028c0570f4f4cd9b9d46e6",
            "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-secondary-border-button",
            "styleUrls": [
                "./secondary-border-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./secondary-border-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iconSrc",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-secondary-border-button',\n  templateUrl: './secondary-border-button.component.html',\n  styleUrls: ['./secondary-border-button.component.scss']\n})\n\nexport class SecondaryBorderButtonComponent {\n  @Input() iconSrc: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".secondary-border-button {\n  padding: 12px 11px 11px 12px;\n  height: 44px;\n  border-radius: 12px;\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n  background-color: transparent;\n  transition: 0.3s;\n\n  &:hover {\n    border: 1px solid rgba(var(--secondary-color-code), 1);\n  }\n\n  &:active {\n    border: 1px solid rgba(var(--secondary-color-code), 0);\n    background-color: rgba(var(--secondary-color-code), 0.3);\n  }\n}",
                    "styleUrl": "./secondary-border-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class=\"secondary-border-button\" type=\"button\">\n  <img [src]=\"iconSrc\" class=\"secondary-border-button__image\" alt=\"\">\n</button>\n"
        },
        {
            "name": "secondaryButtonComponent",
            "id": "component-secondaryButtonComponent-af8a3dffe960035f1600806d419db6f0",
            "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-secondary-button",
            "styleUrls": [
                "secondaryButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./secondaryButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "srcPath",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fillColor",
                    "defaultValue": "'rgba(1, 25, 73, 0.5)'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "changeToActiveColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                },
                {
                    "name": "changeToLightColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-secondary-button',\n  templateUrl: './secondaryButton.component.html',\n  styleUrls: ['secondaryButton.component.scss'],\n})\n\nexport class secondaryButtonComponent {\n  @Input() title: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n  @Input() srcPath: string;\n\n  fillColor: string =  'rgba(1, 25, 73, 0.5)';\n\n  changeToLightColor() {  \n    this.fillColor = 'rgba(1, 25, 73, 0.5)';\n  }\n\n  changeToActiveColor() {\n    this.fillColor = 'white';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-secondary {\n  background: rgba(var(--secondary-color-code),0.05);\n  color: var(--secondary-color);\n  border: none;\n  display: flex;\n  align-items: center;\n\n  height: 46px;\n  padding: 13px 15px 12px 15px;\n  transition: var(--transition);\n  border-radius: 8px;\n\n  &__title {\n    margin-left: 20px;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 100%;\n  }\n\n  &:hover {\n    background: rgba(var(--secondary-color-code),0.2);\n  }\n\n  &:active {\n    background: rgba(var(--secondary-color-code),0.7);\n    color: var(--text-color);\n  }\n}",
                    "styleUrl": "secondaryButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button \n  [ngStyle]=\"{ 'background': backgroundColor, 'color': color }\"\n  class=\"btn-secondary\"\n  (mouseleave)=\"changeToLightColor()\"\n  (mousedown)=\"changeToActiveColor()\"\n  (mouseup)=\"changeToLightColor()\"\n> \n  <svg-icon \n    [src]=\"srcPath\"\n    [svgStyle]=\"{'fill':fillColor }\"\n  >\n  </svg-icon>\n  <p class=\"btn-secondary__title\" *ngIf=\"title!==''\">\n    {{ title }}\n  </p>\n</button>\n"
        },
        {
            "name": "SelectedItemComponent",
            "id": "component-SelectedItemComponent-6a1369f4a425fe97e104ae806621ccd8",
            "file": "src/app/atoms/filter-components/selected-item/selected-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-selected-item",
            "styleUrls": [
                "./selected-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./selected-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-selected-item',\n  templateUrl: './selected-item.component.html',\n  styleUrls: ['./selected-item.component.scss']\n})\n\nexport class SelectedItemComponent {\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".selected-filter-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 28px;\n  padding: 7px 13px 5px 8px;\n  \n  border-radius: 43px;\n  border: none;\n  color: rgba(var(--secondary-color-code), 0.5);\n  background: var(--status-bar-bg-color);\n  transition: 0.3s;\n\n  &__img {\n    margin-left: 17px;\n  }\n\n  &__text {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 100%;\n  }\n\n  &:hover {\n    background: var(--asimetric-bg-color);\n\n    & > .selected-filter-item__text {\n      font-weight: 500;\n      color: rgba(var(--secondary-color-code), 0.75);\n    }\n  }\n}",
                    "styleUrl": "./selected-item.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class=\"selected-filter-item\" type=\"button\">\n  <span \n    class=\"selected-filter-item__text\"\n  >\n    {{ title }}\n  </span>\n  <img\n    class=\"selected-filter-item__img\"\n    src=\"assets/images/filterComponents/close.png\" \n    [alt]=\"title\"\n  >\n</button>\n"
        },
        {
            "name": "SelectInputSearchComponent",
            "id": "component-SelectInputSearchComponent-890ac7dab235538242b11f0318b3e994",
            "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-input-search",
            "styleUrls": [
                "./select-input-search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-input-search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                },
                {
                    "name": "placeholderText",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "item",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-select-input-search',\n  templateUrl: './select-input-search.component.html',\n  styleUrls: ['./select-input-search.component.scss'],\n})\n\nexport class SelectInputSearchComponent {\n  @Input() items: string[];\n  @Input() placeholderText: string;\n  @Input() classes: string;\n\n  selectedItem: string;\n  \n  onChange(item) {\n    this.selectedItem = item;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-input-select {\n  width: 100%;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 100%;\n\n  ::ng-deep {\n    .ng-select {\n      position: relative;\n      box-sizing: border-box;\n      height: 48px; \n      width: 100%;\n    \n      background: rgba(var(--secondary-color-code), 0.05);\n      border-radius: 8px;\n      color: rgba(var(--secondary-color-code), 0.5);\n    \n      &:hover {\n        background: rgba(var(--secondary-color-code), 0.1);\n      }\n    \n      &-container {\n        width: 100%;\n        height: 46px;\n        margin-bottom: 4px;\n      }\n    }\n\n    .ng-dropdown-panel-items.scroll-host {\n      width: 100%;\n    }\n    \n    .ng-dropdown-panel {\n      position: absolute;\n      left: 0;\n      text-align: left;\n    }\n    \n    .scroll-host{\n      color: rgba(var(--secondary-color-code), 1);\n      position: absolute;\n      box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n      border-radius: 8px;\n    }\n    \n    .ng-clear-wrapper {\n      display: none;\n    }\n    \n    .ng-value-container .ng-input {\n      & > input {\n        font-family: 'Sofia pro', 'open-sans';\n        font-style: normal;\n        font-style: normal;\n        font-weight: 300;\n        font-size: 16px;\n        color: var(--secondary-color);\n      }\n    }\n    \n    .ng-option {\n      background-color: var(--input-bg-color);\n      padding: 17px 21px 15px 16px;  \n    \n      &:hover {\n        background-color: var(--light-btn-hover);\n        font-weight: bold;\n    \n      }\n    } \n    \n    .custom {\n      &.ng-select {\n        & > .ng-select-container {\n          padding: 15px 21px 15px 16px;\n    \n          & .ng-value-container .ng-input {\n            padding-left: 16px;\n          }\n        }\n      }\n    }\n    \n    .custom-icon {\n      &.ng-select {\n        & > .ng-select-container {\n          padding: 16px 21px 15px 52px;\n          position: relative;\n    \n          &:after {\n            content: url('../../../../../assets/images/Search.png');\n            position: absolute;\n            top: 13px;\n            left: 16px;\n            opacity: 0.5;\n          }\n    \n          & .ng-value-container .ng-input {\n            padding-left: 52px;\n            padding-right: 16px;\n          }\n        }\n      }\n    }\n  }\n}",
                    "styleUrl": "./select-input-search.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "\n<div class=\"app-input-select\">\n  <ng-select \n    [(ngModel)]=\"selectedItem\"\n    [ngClass]=\"classes\" \n    (change)=\"onChange($event)\"\n    [hideSelected]=\"true\"\n    [editableSearchTerm]=\"true\"\n    [placeholder]=\"placeholderText\"\n>\n  <ng-option class=\"option\" *ngFor=\"let item of items\" [value]=\"item\">\n    {{ item }}\n  </ng-option>\n  </ng-select>\n</div>\n"
        },
        {
            "name": "SelectInputSimpleComponent",
            "id": "component-SelectInputSimpleComponent-f7516e1c085222280a8fac5f74a8db76",
            "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-input-simple",
            "styleUrls": [
                "./select-input-simple.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-input-simple.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialValue",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-select-input-simple',\n  templateUrl: './select-input-simple.component.html',\n  styleUrls: ['./select-input-simple.component.scss'],\n})\n\nexport class SelectInputSimpleComponent implements OnInit {\n  @Input() items: string[];\n  @Input() initialValue: string;\n\n  selectedItem: string;\n\n  ngOnInit(): void {\n    this.selectedItem = this.initialValue;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-select-simple {\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 100%;\n\n  ::ng-deep {\n    .ng-select {\n      position: relative;\n      box-sizing: border-box;\n      height: 48px; \n      width: 100%;\n    \n      background: rgba(var(--secondary-color-code), 0.05);\n      border-radius: 8px;\n      color: rgba(var(--secondary-color-code), 0.5);\n    \n      &:hover {\n        background: rgba(var(--secondary-color-code), 0.1);\n      }\n    \n      &:after {\n        content: url('../../../../../assets/images/select.png');\n        position: absolute;\n        top: calc(50% - 11px);\n        right: 21px;\n      }\n    \n      &.ng-select-opened{\n        &:after {\n          content: url('../../../../../assets/images/select.png');\n          position: absolute;\n          top: calc(50% - 11px);\n          right: 21px;\n          transform: rotate(180deg);\n        }\n      }\n    \n      &-container {\n        width: 100%;\n        height: 46px;\n        padding: 15px 21px 15px 16px;\n        margin-bottom: 4px;\n      }\n    }\n\n    .ng-dropdown-panel-items.scroll-host {\n      width: 100%;\n    }\n    \n    .ng-option {\n      background-color: var(--input-bg-color);\n      padding: 17px 21px 15px 16px;  \n    \n      &:hover {\n        background-color: var(--light-btn-hover);\n        font-weight: bold;\n      }\n    }\n    \n    .ng-dropdown-panel {\n      position: absolute;\n    }\n    \n    .scroll-host {\n      color: rgba(var(--secondary-color-code), 1);\n      position: absolute;\n      box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n      border-radius: 8px;\n    }\n    \n    .ng-clear-wrapper {\n      display: none;\n    }\n  }\n}\n",
                    "styleUrl": "./select-input-simple.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-select-simple\">\n  <ng-select \n      [(ngModel)]=\"selectedItem\"\n      class=\"app-select-simple__input\" \n      [hideSelected]=\"true\"\n      [searchable]=\"false\"\n  >\n    <ng-option class=\"app-select-simple__option\" *ngFor=\"let item of items\" [value]=\"item\">\n      {{ item }}\n    </ng-option>\n  </ng-select>\n</div>\n\n  "
        },
        {
            "name": "SemicircleChartCardComponent",
            "id": "component-SemicircleChartCardComponent-f5416acfb3da5e1be54c7e6a2fe9a1b1",
            "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-semicircle-chart-card",
            "styleUrls": [
                "./semicircle-chart-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./semicircle-chart-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "percent",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "text",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "value",
                    "line": 13,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-semicircle-chart-card',\n  templateUrl: './semicircle-chart-card.component.html',\n  styleUrls: ['./semicircle-chart-card.component.scss'],\n})\n\nexport class SemicircleChartCardComponent {\n  @Input() title: string;\n  @Input() percent: number;\n  @Input() text: string;\n  @Input() value: number;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".semicircle-card {\n  width: 256px;\n  min-height: 152px;\n  overflow: hidden;\n  display: flex;\n\n  border-radius: 12px 30px;\n  color: var(--secondary-color);\n  background-color: var(--card-bg-color);\n\n  &:hover {\n    box-shadow: 0px 40px 70px rgba(var(--secondary-color-code), 0.3);\n  }\n\n  &__left {\n    width: 44.4%;\n    padding: 10px 16px;\n  }\n\n  &__right {\n    width: 55.6%;\n    padding: 43px 25px 8px 9px;\n    background-color: rgba(var(--secondary-color-code), 0.05);\n  }\n\n  &__value {\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-size: 38px;\n    line-height: 120%;\n    text-transform: capitalize;\n    color: var(--secondary-color);\n  }\n\n  &__title {\n    margin-bottom: 24px;\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 100%;\n  }\n\n  &__text {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 12px;\n  }\n}",
                    "styleUrl": "./semicircle-chart-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"semicircle-card card\">\n  <div class=\"semicircle-card__left\">\n    <p class=\"semicircle-card__title\">{{ title }}</p>\n    <app-semicircle-chart [percent]=\"[percent]\"></app-semicircle-chart>\n  </div>\n  <div class=\"semicircle-card__right\">\n    <span class=\"semicircle-card__value\">{{ value }}</span>\n    <p class=\"semicircle-card__text\">{{ text }}</p>\n  </div>\n</div>\n"
        },
        {
            "name": "SemicircleChartComponent",
            "id": "component-SemicircleChartComponent-4ea0af4b4c1aeedb29b4ca439c48cf0a",
            "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-semicircle-chart",
            "styleUrls": [
                "./semicircle-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./semicircle-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "percent",
                    "line": 10,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOptions",
                    "defaultValue": "{\n    chart: {\n      type: \"radialBar\",\n      offsetY: 0\n    },\n    plotOptions: {\n      radialBar: {\n        startAngle: -120,\n        endAngle: 120,\n        track: {\n          background: \"#D0DAEB\",\n          strokeWidth: \"97%\",\n        },\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n        }\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        type: \"diagonal2\",\n        shadeIntensity: 1,\n        opacityFrom: 0.7,\n        opacityTo: 0.9,\n        colorStops: [\n          {\n            offset: 0,\n            color: '',\n            opacity: 1\n          },\n          {\n            offset: 50,\n            color: '',\n            opacity: 1\n          },\n          {\n            offset: 100,\n            color: '',\n            opacity: 1\n          }\n        ]\n      }\n    }\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-semicircle-chart',\n  templateUrl: './semicircle-chart.component.html',\n  styleUrls: ['./semicircle-chart.component.scss'],\n})\n\nexport class SemicircleChartComponent implements OnChanges {\n  @Input() percent: number;\n\n  chartOptions = {\n    chart: {\n      type: \"radialBar\",\n      offsetY: 0\n    },\n    plotOptions: {\n      radialBar: {\n        startAngle: -120,\n        endAngle: 120,\n        track: {\n          background: \"#D0DAEB\",\n          strokeWidth: \"97%\",\n        },\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n        }\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        type: \"diagonal2\",\n        shadeIntensity: 1,\n        opacityFrom: 0.7,\n        opacityTo: 0.9,\n        colorStops: [\n          {\n            offset: 0,\n            color: '',\n            opacity: 1\n          },\n          {\n            offset: 50,\n            color: '',\n            opacity: 1\n          },\n          {\n            offset: 100,\n            color: '',\n            opacity: 1\n          }\n        ]\n      }\n    }\n  }\n\n  ngOnChanges () {\n    if (this.percent < 30) {\n      this.chartOptions.fill.gradient.colorStops.forEach(colorStop => colorStop.color = \"#EA2D2D\");\n    } else if (this.percent < 65) {\n      this.chartOptions.fill.gradient.colorStops[0].color = \"#F9BE5A\";\n      this.chartOptions.fill.gradient.colorStops[1].color = \"#F9BE5A\";\n      this.chartOptions.fill.gradient.colorStops[2].color = \"#FB5F47\";\n    } else {\n      this.chartOptions.fill.gradient.colorStops[0].color = \"#0263BC\";\n      this.chartOptions.fill.gradient.colorStops[1].color = \"#24B04B\";\n      this.chartOptions.fill.gradient.colorStops[2].color = \"#24B04B\";\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".semicircle-chart {\n  position: absolute;\n  top: -20px;\n  left: -33.5px;\n  width: 145px;\n  height: 80px;\n  background: var(--card-bg-color);\n\n  &__wrapper {\n    width: 80px;\n    height: 80px;\n    overflow: hidden;\n    position: relative;\n  }\n\n  &__value {\n    position: absolute;\n    top: 30px;\n    left: 22px;\n    z-index: 3;\n    color: var(--secondary-color);\n\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 100%;\n  }\n}\n\n.semicircle-chart__wrapper > .semicircle-chart {\n  ::ng-deep {\n    .apexcharts-pie-label, .apexcharts-datalabels, .apexcharts-datalabel, .apexcharts-datalabel-label, .apexcharts-datalabel-value {\n      display: none!important;\n    }\n  }\n}\n\n",
                    "styleUrl": "./semicircle-chart.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"semicircle-chart__wrapper\">\n  <div class=\"semicircle-chart\">\n    <apx-chart\n      [states]=\"chartOptions.states\"\n      [series]=\"percent\"\n      [chart]=\"chartOptions.chart\"\n      [plotOptions]=\"chartOptions.plotOptions\"\n      [fill]=\"chartOptions.fill\"\n    ></apx-chart>\n  </div>\n  <span class=\"semicircle-chart__value\">{{ percent[0] }}/100</span>\n</div>"
        },
        {
            "name": "SideMenuComponent",
            "id": "component-SideMenuComponent-298192f99808308ac20568445f2d2cb1",
            "file": "src/app/molecules/menu/side-menu/side-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-side-menu",
            "styleUrls": [
                "./side-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.scss']\n})\n\nexport class SideMenuComponent {\n  @Input() items: string[];\n\n  active: number = 0;\n  \n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-side-menu {\n  width: fit-content;\n  min-width: 260px;\n  padding: 32px 72px 12px 32px;\n  \n  border-radius: 12px 30px;\n  background-color: var(--text-color);\n  box-shadow: 0px 50px 70px rgba(44, 59, 82, 0.15);\n  \n  &__item {\n    width: fit-content;\n    margin-bottom: 20px;\n  }\n}",
                    "styleUrl": "./side-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"app-side-menu list\">\n  <li \n    class=\"app-side-menu__item\"\n    *ngFor=\"let item of items; let i = index\" \n  >   \n    <app-nav-link\n      [isActive]=\"active === i\"\n      [title]=\"item\" \n      classes=\"nav-link-secondary\"\n      (click)=\"handlClick($event, i)\"\n    >\n    </app-nav-link>\n  </li>\n</ul>\n\n  \n"
        },
        {
            "name": "simpleButtonComponent",
            "id": "component-simpleButtonComponent-27287134a2762ead6a4a5dd3546c93d4",
            "file": "src/app/atoms/buttons/simpleButton/simpleButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-simple-button",
            "styleUrls": [
                "simpleButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./simpleButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "classes",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "srcPath",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-simple-button',\n  templateUrl: './simpleButton.component.html',\n  styleUrls: ['simpleButton.component.scss'],\n})\n\nexport class simpleButtonComponent {\n  @Input() title: string;\n  @Input() classes: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n  @Input() srcPath?: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-danger {\n  color: var(--danger-color);\n  background: inherit;\n  outline: none;\n  border: 1px solid rgba(var(--danger-color-code), 0.2);\n\n  text-transform: uppercase;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 12px;\n\n  display: flex;\n  align-items: center;\n  height: 36px;\n  padding: 0 18px 0 18px;\n\n  transition: var(--transition);\n  border-radius: 8px;\n\n  &:hover {\n    cursor: pointer;\n    background: rgba(var(--danger-color-code), 0.3);\n  }\n\n  &:active {\n    background: rgba(var(--danger-color-code), 0.5);\n  }\n}\n\n.btn-danger-big {\n  color: var(--danger-color);\n  background: inherit;\n  outline: none;\n  border: 1px solid rgba(var(--danger-color-code), 0.2);\n\n  text-transform: uppercase;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 12px;\n\n  display: flex;\n  align-items: center;\n  height: 46px;\n  padding: 17px 37px;\n\n  transition: var(--transition);\n  border-radius: 8px;\n\n  &:hover {\n    cursor: pointer;\n    background: rgba(var(--danger-color-code), 0.3);\n  }\n\n  &:active {\n    background: rgba(var(--danger-color-code), 0.5);\n  }\n}\n\n.btn-transparent {\n  position: relative;\n  padding-left: 20px;\n\n  text-transform: uppercase;\n  color: rgba(var(--secondary-color-code), 0.75);\n  border: none;\n  background-color: transparent;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 100%;\n\n  &:hover {\n    &:after {\n      content: url('../../../../assets/images/back.svg');\n      position: absolute;\n      top: 0;\n      left: 0;\n    }\n  }\n}\n\n.btn-success {\n  position: relative;\n  z-index: 2;\n\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  text-transform: uppercase;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 12px;\n\n  display: flex;\n  align-items: center;\n  height: 36px;\n  padding: 0 18px 0 18px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 8px;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 8px;\n    opacity: 0;\n  }\n\n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n\n  &:active {\n    &::before {\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 0;\n    }\n  }\n}\n\n.btn-success-big {\n  position: relative;\n  z-index: 2;\n\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  text-transform: uppercase;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 12px;\n\n  display: flex;\n  align-items: center;\n  height: 46px;\n  padding: 17px 37px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 8px;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 8px;\n    opacity: 0;\n  }\n\n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n\n  &:active {\n    &::before {\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 0;\n    }\n  }\n}\n\n.btn-success-asimetric {\n  position: relative;\n  z-index: 2;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  border-radius: 20px 5px;\n  height: 52px;\n  padding: 18px 41px 18px 44px;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 16px;\n  text-transform: uppercase;\n  line-height: 100%;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 20px 5px;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 20px 5px;\n    opacity: 0;\n  }\n  \n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n  \n  &:active {\n    &::before {\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 0;\n    }\n  }\n}\n\n\n.app-button-success__image {\n  margin-left: 27px;\n}\n\n\n.btn-choose {\n  background-color: rgba(var(--secondary-color-code), 0.1);\n  border: none;\n  border-radius: 8px;\n  color: var(--secondary-color);\n  text-transform: uppercase;\n  transition: 0.3s;\n\n  height: 46px;\n  padding: 17px 45px;\n\n  font-family: 'Gramatica Bold', 'open-sans';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 100%;\n\n  &:hover {\n    background-color: rgba(var(--secondary-color-code), 1);\n    color: var(--text-color);\n  }\n\n  &:active {\n    background-color: rgba(var(--secondary-color-code), 0.1);\n    color: var(--secondary-color);\n  }\n}",
                    "styleUrl": "simpleButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor, 'color': color }\"\n>\n  {{ title }}\n  <img class=\"app-button-success__image\" *ngIf=\"srcPath\" [src]=\"srcPath\" [alt]=\"'title'\">\n</button>\n"
        },
        {
            "name": "SimpleCounterComponent",
            "id": "component-SimpleCounterComponent-beb942becdc1c4e268bc4b3f145fc06b",
            "file": "src/app/atoms/counters/simple-counter/simple-counter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-simple-counter",
            "styleUrls": [
                "./simple-counter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./simple-counter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialValue",
                    "line": 10,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "decreaseValue",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "increaseValue",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "value",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-simple-counter',\n  templateUrl: './simple-counter.component.html',\n  styleUrls: ['./simple-counter.component.scss'],\n})\n\nexport class SimpleCounterComponent implements OnInit {\n  @Input() initialValue?: number;\n  value = 1;\n\n  increaseValue = () => {\n    this.value = this.value + 1;\n  }\n\n  decreaseValue = () => {\n    if (this.value - 1 > 0) {\n      this.value = this.value - 1;\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.initialValue) {\n      this.value = this.initialValue;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-simple-counter {\n  display: flex;\n  width: 202px;\n\n  & * {\n    margin-right: 8px;\n  }\n\n  & :last-child {\n    margin-right: 0;\n  }\n\n  &__value-container {\n    width: 100%;\n    text-align: center;\n    height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  \n    border: none;\n    border-radius: 8px;\n    background: rgba(var(--secondary-color-code), 0.05);\n    color: var(--secondary-color);\n\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 100%;\n  }\n\n  &__next {\n    ::ng-deep {\n      app-light-button > .btn-light {\n        transform: rotate(180deg)!important;\n      }\n    }\n  }\n}\n\n\n\n\n",
                    "styleUrl": "./simple-counter.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-simple-counter\">\n  <app-light-button \n    [srcPath]=\"'assets/images/back.svg'\"\n    (click)=\"decreaseValue()\"\n  >\n  </app-light-button>\n  <div class=\"app-simple-counter__value-container\">\n    <p class=\"app-simple-counter__value\">\n      {{ value }}\n    </p>\n  </div>\n  <span class=\"app-simple-counter__next\">\n    <app-light-button \n      [srcPath]=\"'assets/images/back.svg'\"\n      (click)=\"increaseValue()\"\n    >\n    </app-light-button>\n  </span>\n</div>\n"
        },
        {
            "name": "SimplePolicyGeneratorButtonComponent",
            "id": "component-SimplePolicyGeneratorButtonComponent-8fd43ee3eb233db254908f7b9fc4b291",
            "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/simple-policy-generator-button/simple-policy-generator-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-simple-policy-generator-button",
            "styleUrls": [
                "./simple-policy-generator-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./simple-policy-generator-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-simple-policy-generator-button',\n  templateUrl: './simple-policy-generator-button.component.html',\n  styleUrls: ['./simple-policy-generator-button.component.scss']\n})\n\nexport class SimplePolicyGeneratorButtonComponent implements OnInit {\n  @Input() title: string;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".simple-policy-generator-button {\n  border: none;\n  outline: none;\n  padding: 13px 65px 10px 65px;\n  background: var(--dark-color);\n  color: var(--text-color);\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 16px;\n  text-transform: uppercase;\n  line-height: 28.8px;\n  letter-spacing: 0.1em;\n}",
                    "styleUrl": "./simple-policy-generator-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button class=\"simple-policy-generator-button\" type=\"button\">{{ title }}</button>\n"
        },
        {
            "name": "SimpleTextareaComponent",
            "id": "component-SimpleTextareaComponent-de4604caded468f20c1f0c5d993712c6",
            "file": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-simple-textarea",
            "styleUrls": [
                "./simple-textarea.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./simple-textarea.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "placeholderText",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-simple-textarea',\n  templateUrl: './simple-textarea.component.html',\n  styleUrls: ['./simple-textarea.component.scss']\n})\n\nexport class SimpleTextareaComponent {\n  @Input() placeholderText: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-textarea {\n  width: 100%;\n  height: 157px;\n  padding: 16px;\n  outline: none;\n  border: none;\n  border-radius: 8px;\n  background: rgba(var(--secondary-color-code), 0.05);\n  color: var(--secondary-color);\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 100%;\n\n  &::placeholder {\n    color: rgba(var(--secondary-color-code), 0.5);\n  }\n\n  &:hover {\n    background: rgba(var(--secondary-color-code), 0.2);\n  }\n}\n",
                    "styleUrl": "./simple-textarea.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<textarea\n  class=\"app-textarea\"\n  [placeholder]=\"placeholderText\"\n>\n</textarea>\n"
        },
        {
            "name": "StatusBarComponent",
            "id": "component-StatusBarComponent-3535f53f3647da99cbc39f7f72ac0266",
            "file": "src/app/molecules/status-bar/status-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-status-bar",
            "styleUrls": [
                "./status-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./status-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activePoints",
                    "defaultValue": "1",
                    "line": 10
                },
                {
                    "name": "totalSteps",
                    "defaultValue": "6",
                    "line": 11
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "moveToNext",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "moveToPrevious",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-status-bar',\n  templateUrl: './status-bar.component.html',\n  styleUrls: ['./status-bar.component.scss']\n})\n\nexport class StatusBarComponent implements OnInit {\n  @Input() activePoints = 1;\n  @Input() totalSteps = 6;\n\n  moveToNext = () => {\n    if (this.activePoints  <  this.totalSteps) {\n      this.activePoints = this.activePoints + 1;\n    }\n  }\n\n  moveToPrevious = () => {\n    if (this.activePoints  >  1) {\n      this.activePoints = this.activePoints - 1;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-status-bar {\n  display: flex;\n  justify-content: space-between; \n  align-items: center;\n  width: 100%;\n  padding: 20px 30px;\n  background: var(--status-bar-bg-color);\n  border-radius: 20px;\n\n  &__wrapper {\n    width: calc(100% - 260px);\n  }\n}\n",
                    "styleUrl": "./status-bar.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-status-bar\">\n  <app-light-assimetric-button\n    [srcPath]=\"'assets/images/back.svg'\" \n    (click)=\"moveToPrevious()\"\n  >\n  </app-light-assimetric-button>\n  <div class=\"app-status-bar__wrapper\">\n    <app-status-steps-dynamic\n      [activePoints]=\"activePoints\"\n      [totalNumber]=\"6\"\n      titles=\"\"\n    >\n    </app-status-steps-dynamic>\n  </div>\n  <app-simple-button\n    [title]=\"'next'\"\n    [classes]=\"'btn-success-asimetric'\"\n    [srcPath]=\"'assets/images/next.svg'\"\n    (click)=\"moveToNext()\"\n  >\n  </app-simple-button>\n</div>\n"
        },
        {
            "name": "StatusStepsDynamicComponent",
            "id": "component-StatusStepsDynamicComponent-d8eaaf87dc38394d0d52313be0d81bec",
            "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-status-steps-dynamic",
            "styleUrls": [
                "./status-steps-dynamic.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./status-steps-dynamic.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activePoints",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "background",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "titles",
                    "line": 13,
                    "type": "string[]"
                },
                {
                    "name": "totalNumber",
                    "line": 12,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classesDots",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "classesLines",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "list",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "sectionWidth",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnChanges, Input } from '@angular/core';\nimport { detectClasses } from './helpers';\n\n@Component({\n  selector: 'app-status-steps-dynamic',\n  templateUrl: './status-steps-dynamic.component.html',\n  styleUrls: ['./status-steps-dynamic.component.scss']\n})\n\nexport class StatusStepsDynamicComponent implements OnChanges {\n  @Input() activePoints: number;\n  @Input() totalNumber: number;\n  @Input() titles: string[];\n  @Input() background?: string;\n\n  list = [];\n  classesDots: string[] = [];\n  classesLines: string[] = [];\n  sectionWidth = '';\n\n  ngOnChanges(): void {\n    const newList = [];\n    for (let i = 0; i < this.totalNumber; i++) {\n      newList.push(i)\n    }\n    this.list = newList;\n    this.classesDots = detectClasses(this.totalNumber, this.activePoints, newList).classListDots;\n    this.classesLines = detectClasses(this.totalNumber, this.activePoints, newList).classListLines;\n    this.sectionWidth = `${(100 - 1) / (this.totalNumber - 1)}%`;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-steps {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n\n  width: 100%;\n  height: 10px;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n\n  &__wrapper {\n    width: 99%;\n    position: relative;\n  }\n\n  &__box {\n    display: flex;\n    align-items: center;\n  }\n\n  &__label {\n    position: absolute;\n    top: 200%;\n    &-last {\n      text-align: right;\n      left: -700%;\n    }\n  }\n\n  &__line {\n    height: 1px;\n    width: 100%;\n    z-index: 1;\n\n    position: absolute;\n    left: 3px;\n    top: 3px;\n\n    background-color: var(--text-color);\n  \n    &.active {\n      background: var(--success-grad-light);\n    }\n  }\n\n  &__circle {\n    position: relative;\n    z-index: 2;\n    height: 8px;\n    width: 8px;\n    border-radius: 50%;\n    color: rgba(var(--secondary-color-code), 0.5);\n\n    & > .app-steps__dot {\n      height: 8px;\n      width: 8px;\n      border-radius: 50%;\n      background: rgba(var(--secondary-color-code), 0.5);\n    }\n\n    &.active {\n      color: var(--secondary-color);\n  \n      & > .app-steps__dot {\n        background: var(--success-grad-light);\n      }\n    }\n\n    &::before {\n      content: \"\";\n      position: absolute;\n      top: -3px;\n      left: -3px;\n      z-index: -1;\n\n      height: 14px;\n      width: 14px;\n\n      border-radius: 50%;\n      background: var(--text-color)\n    }\n  }\n}",
                    "styleUrl": "./status-steps-dynamic.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"app-steps\" [style.backgroundColor]=\"background\">\n  <div \n    *ngFor=\"let number of list\" \n    class=\"app-steps__box\"\n    [style.width]=\"number !== list.length - 1 ? sectionWidth : '1%'\"\n  >\n    <div *ngIf=\"number !== (list.length - 1)\" class=\"app-steps__wrapper\">\n      <div [ngClass]=\"classesDots[number]\">\n        <div class=\"app-steps__dot\"></div>\n        <div \n          class=\"app-steps__label\"\n          [style.textAlign]=\"number !== 0 ? 'center' : 'left'\"\n          [style.left]=\"number !== 0 && '-300%'\"\n        >\n          {{ titles[number] }}\n        </div>\n      </div>\n      <div [ngClass]=\"classesLines[number]\"></div>\n    </div>\n    <div *ngIf=\"number == (list.length - 1)\" class=\"app-steps__wrapper\">\n      <div [ngClass]=\"classesDots[number]\">\n        <div class=\"app-steps__dot\"></div>\n        <div class=\"app-steps__label app-steps__label-last\">\n          {{ titles[number] }}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n"
        },
        {
            "name": "StepsComponent",
            "id": "component-StepsComponent-0ca1f66f74e881de4f64e09798a4066a",
            "file": "src/app/atoms/steps/steps.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-steps",
            "styleUrls": [
                "./steps.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./steps.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activePoints",
                    "line": 11,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\nimport { detectClasses } from './helpers';\n\n@Component({\n  selector: 'app-steps',\n  templateUrl: './steps.component.html',\n  styleUrls: ['./steps.component.scss']\n})\n\nexport class StepsComponent implements OnChanges {\n  @Input() activePoints: number;\n  classes: string[] = [];\n  \n  ngOnChanges(): void {\n    this.classes = detectClasses(this.activePoints);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-steps {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n\n  width: 100%;\n  height: 47px;\n\n  &__label {\n    position: absolute;\n    top: 200%;\n  }\n\n  &__line {\n    height: 1px;\n    width: 49%;\n    z-index: 3;\n    margin-top: 3px;\n    background-color: var(--text-color);\n  \n    &.active {\n      background: var(--success-grad-light);\n    }\n  }\n\n  &__circle {\n    position: relative;\n    z-index: 2;\n    height: 8px;\n    width: 8px;\n    border-radius: 50%;\n    color: rgba(var(--secondary-color-code), 0.5);\n\n    & > .app-steps__dot {\n      height: 8px;\n      width: 8px;\n      border-radius: 50%;\n      background: rgba(var(--secondary-color-code), 0.5);\n    }\n\n    &.active {\n      color: var(--secondary-color);\n  \n      & > .app-steps__dot {\n        background: var(--success-grad-light);\n      }\n    }\n\n    &::before {\n      content: \"\";\n      position: absolute;\n      top: -3px;\n      left: -3px;\n      z-index: -1;\n\n      height: 14px;\n      width: 14px;\n\n      border-radius: 50%;\n      background: var(--text-color)\n    }\n  }\n}\n\n.text-al-left {\n  text-align: left;\n}\n\n.text-al-center {\n  text-align: center;\n  left: -18px;\n}\n\n.text-al-right {\n  text-align: right;\n  left: -50px;\n}",
                    "styleUrl": "./steps.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"app-steps\">\n  <div [ngClass]=\"classes[0]\">\n    <div class=\"app-steps__dot\"></div>\n    <div class=\"app-steps__label text-al-left\">Add your information</div>\n  </div>\n  <div [ngClass]=\"classes[1]\"></div>\n  <div [ngClass]=\"classes[2]\">\n    <div class=\"app-steps__dot\"></div>\n    <div class=\"app-steps__label text-al-center\">Add domain</div>\n  </div>\n  <div [ngClass]=\"classes[3]\"></div>\n  <div [ngClass]=\"classes[4]\">\n    <div class=\"app-steps__dot\"></div>\n    <div class=\"app-steps__label text-al-right\">Select coverage</div>\n  </div>\n</div>\n"
        },
        {
            "name": "TabMenuComponent",
            "id": "component-TabMenuComponent-63ce9882c7c6a05ca95d9914412c9105",
            "file": "src/app/molecules/menu/tab-menu/tab-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab-menu",
            "styleUrls": [
                "./tab-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "titles",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "setActive",
                    "args": [
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-tab-menu',\n  templateUrl: './tab-menu.component.html',\n  styleUrls: ['./tab-menu.component.scss']\n})\n\nexport class TabMenuComponent {\n  @Input() titles: string[];\n  active = 0;\n\n  setActive(i: number) {\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".tab-menu {\n  display: flex;\n  justify-content: flex-start;\n  position: relative;\n  z-index: 1;\n\n  &__item {\n    width: 199px;\n    height: 38px;\n    padding: 12px 0;\n    position: relative;\n    \n    font-family: 'Gramatica Bold', 'open-sans';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 100%;\n\n    text-align: center;\n    border-radius: 0px 12px 0px 0px;\n    background-color: var(--asimetric-bg-color);\n    box-shadow: 4px 0px 24px rgba(28, 28, 28, 0.1);\n    color: rgba(var(--secondary-color-code), 0.7);\n\n    &:hover {\n      cursor: pointer;\n      color: rgba(var(--secondary-color-code), 1);\n    }\n\n    &.active {\n      background-color: var(--text-color);\n      color: var(--secondary-color);\n      box-shadow: none;\n \n      &:after {\n        content: url('../../../../assets/images/Subtract.png');\n        position: absolute;\n        width: 15px;\n        height: 15px;\n        bottom: 0;\n        right: -14px;\n        z-index: 3;\n        border-radius: 0px 0px 0px 12px;\n      }\n    }\n  }\n}",
                    "styleUrl": "./tab-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"tab-menu\">\n  <li\n    *ngFor=\"let title of titles; let i = index;\"\n    (click)=\"setActive(i)\"\n    [style.left]=\"-i * 11 + 'px'\"\n    [style.zIndex]=\"10/(i + 1)\"\n    [ngClass]=\"i===active ? 'tab-menu__item active' : 'tab-menu__item'\"\n  >\n    {{ title }}\n  </li>\n</ul>\n"
        },
        {
            "name": "TeamsCardComponent",
            "id": "component-TeamsCardComponent-be70d2b806fbb177570bcd3442c6422e",
            "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-teams-card",
            "styleUrls": [
                "./teams-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "email",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "id",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "isSelected",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "name",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "position",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "tip",
                    "line": 21,
                    "type": "literal type"
                }
            ],
            "outputsClass": [
                {
                    "name": "delete",
                    "defaultValue": "new EventEmitter()",
                    "line": 23,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "duplicate",
                    "defaultValue": "new EventEmitter()",
                    "line": 26,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "edit",
                    "defaultValue": "new EventEmitter()",
                    "line": 24,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter()",
                    "line": 25,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "block",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'block'"
                        }
                    ]
                },
                {
                    "name": "cardColor",
                    "defaultValue": "this.onActive ? HIGHLITED_COLOR : STATIC_COLOR",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "handleDelete",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "handleEdit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "isSmallMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "isTipsVisible",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "isVisibleOptions",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "onActive",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "setIsVisibleOptions",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "setOnActive",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "textColor",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "textDirection",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methodsClass": [
                {
                    "name": "checkCheckboxStyle",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 111
                },
                {
                    "name": "handleDuplicate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127
                },
                {
                    "name": "setColors",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98
                },
                {
                    "name": "setTipsVisibility",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        },
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 92
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 77
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild, ElementRef, OnChanges, HostListener, EventEmitter, Output, AfterViewInit } from '@angular/core';\n\nconst HIGHLITED_COLOR = 'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)';\nconst STATIC_COLOR = 'rgb(255, 255, 255)';\nconst TEXT_STATIC_COLOR = '#011949';\nconst SMALL_MOBILE_VIEW = 509;\nconst BIG_MOBILE_VIEW = 760;\n\n@Component({\n  selector: 'app-teams-card',\n  templateUrl: './teams-card.component.html',\n  styleUrls: ['./teams-card.component.scss']\n})\n\nexport class TeamsCardComponent implements OnChanges, AfterViewInit {\n  @Input() isSelected: boolean;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() position: string;\n  @Input() id: string;\n  @Input() tip: { text: string, title: string };\n  \n  @Output() delete: EventEmitter<any> = new EventEmitter();\n  @Output() edit: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() duplicate: EventEmitter<any> = new EventEmitter();\n\n  onActive = false;\n  isMobile: boolean;\n  isSmallMobile: boolean;\n  isVisibleOptions = false;\n  isTipsVisible = false;\n  cardColor = this.onActive ? HIGHLITED_COLOR : STATIC_COLOR;\n  textColor = '';\n  textDirection = '';\n\n  handleDelete = () => {\n    if (this.isMobile) {\n      this.isVisibleOptions = false;\n    }\n    this.delete.emit(this.id);\n  }\n\n  handleEdit = () => {\n    if (this.isMobile) {\n      this.isVisibleOptions = false;\n    }\n    this.edit.emit(this.id);\n  }\n\n  handleDuplicate() {\n    if (this.isMobile) {\n      this.isVisibleOptions = false;\n    }\n    this.duplicate.emit(this.id);\n  }\n  \n  setIsVisibleOptions = () => {\n    this.isVisibleOptions = !this.isVisibleOptions;\n  }\n\n  setOnActive = (event, value: boolean) => {\n    if (!this.isMobile) {\n      if (this.isSelected && !this.isMobile) {\n        this.cardColor = HIGHLITED_COLOR;\n        this.textColor = STATIC_COLOR;\n      } else {\n        this.cardColor = value ? HIGHLITED_COLOR : STATIC_COLOR;\n        this.textColor = value ? STATIC_COLOR : TEXT_STATIC_COLOR;\n      }\n    }\n    this.onActive = value;\n  }\n\n  @ViewChild('block') block: ElementRef;\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    const width = this.block.nativeElement.clientWidth;\n    this.isMobile = width < BIG_MOBILE_VIEW;\n    this.isSmallMobile = width < SMALL_MOBILE_VIEW;\n\n    if (this.isSelected && !this.isMobile && !this.isSmallMobile) {\n      this.cardColor = HIGHLITED_COLOR;\n      this.textColor = STATIC_COLOR;\n    } else {\n      this.cardColor = STATIC_COLOR;\n      this.textColor = TEXT_STATIC_COLOR;\n    }\n  }\n\n  @HostListener('document:click', ['$event'])\n\tonClick(event: Event) {\n    if (!this.block.nativeElement.contains(event.target)) {\n      this.isVisibleOptions = false;\n    }\n  }\n\n  setColors() {\n    const width = document.querySelector('.app-teams-card').clientWidth;\n    this.isMobile = width < BIG_MOBILE_VIEW;\n    this.isSmallMobile = width < SMALL_MOBILE_VIEW;\n    if ((this.isSelected || this.onActive) && !this.isMobile) {\n      this.cardColor = HIGHLITED_COLOR;\n      this.textColor = STATIC_COLOR;\n    } else {\n      this.cardColor = STATIC_COLOR;\n      this.textColor = TEXT_STATIC_COLOR;\n    }\n  }\n\n  checkCheckboxStyle() {\n    if (this.isMobile) {\n      return false;\n    } else {\n      return this.onActive ? this.onActive : this.isSelected;\n    }\n  }\n\n  setTipsVisibility(event, value) {\n    this.isTipsVisible = value;\n  }\n\n  ngAfterViewInit() {\n    this.setColors();\n  }\n\n  ngOnChanges() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-teams-card {\n  display: grid;\n  grid-template-columns: 2fr 1fr 204px;\n  align-items: center;\n  justify-content: start;\n  grid-column-gap: 5px;\n  position: relative;\n  width: 100%;\n  min-height: 72px;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  line-height: 100%;\n\n  color: var(--secondary-color);\n  background: transparent;\n  border: 1px solid rgba(var(--secondary-color-code), 0.15);\n  border-radius: 12px;\n\n  &.mobile {\n    grid-template-columns: 1fr 1fr 18px;\n  }\n\n  &__tips {\n    z-index: 10;\n    position: absolute;\n    width: fit-content;\n    top: -80px;\n    left: calc(50% - 106px);\n  }\n\n  &__wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    width: 324px;\n  }\n\n  &__wrapper-button {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    ::ng-deep {\n      app-teams-mutable-primary-button  {\n        margin-right: 16px;\n      }\n      \n      app-teams-mutable-gradient-icon-button {\n        margin-right: 14px;\n      }\n    }\n  }\n\n  &__text-box {\n    display: flex;\n    align-items: center;\n    margin-left: 26px;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background: var(--success-grad-light);\n    color: var(--text-color);\n  }\n\n  &__name,\n  &__text,\n  &__position {\n    line-height: 20px;\n  }\n\n  &__name {\n    margin-right: 16px;\n    font-weight: 600;\n    font-size: 18px;\n  }\n\n  &__text {\n    opacity: 0.6;\n    font-weight: 300;\n    font-size: 16px;\n  }\n\n  &__position {\n    opacity: 0.5;\n    font-weight: 600;\n    font-size: 16px;\n  }\n\n  &__mobile-box {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 10px 20px;\n\n    position: absolute;\n    right: 0;\n    top: calc(100% + 2px);\n    z-index: 2;\n\n    background-color: rgba(var(--text-color-code), 1);\n    border: 1px solid rgba(var(--secondary-color-code), 0.15);\n    border-radius: 12px;\n  }\n\n  &__mobile-button {\n    padding: 5px;\n    border: none;\n    background-color: transparent;\n    color: rgba(var(--secondary-color-code), 0.7);\n\n    font-family: 'Gramatica Bold', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    text-transform: uppercase;\n    font-size: 12px;\n    line-height: 100%;\n\n    &:active {\n      background: var(--success-grad-light);\n      background-clip: text;\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n\n  &__toggler {\n    display: flex;\n    align-items: center;\n    border: none;\n    background-color: transparent;\n  }\n}",
                    "styleUrl": "./teams-card.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges",
                "AfterViewInit"
            ],
            "templateData": "<div\n  [ngClass]=\"{ 'app-teams-card': true, 'mobile': isMobile }\"\n  (mouseenter)=\"setOnActive($event, true)\"\n  (mouseleave)=\"setOnActive($event, false)\"\n  [style.background]=\"cardColor\"\n  [style.padding]=\"isSmallMobile ? '5px' : '15px 24px 13px'\"\n  #block\n>\n  <div class=\"app-teams-card__tips\" *ngIf=\"!isMobile && isTipsVisible\">\n    <app-teams-tips [title]=\"tip.title\" [text]=\"tip.text\"></app-teams-tips>\n  </div>\n  <div \n    class=\"app-teams-card__wrapper\"\n    [ngStyle]=\"isMobile && { 'width': 'fit-content' }\"\n  >\n    <app-teams-checkbox-mutable-gradient\n      [onActive]=\"checkCheckboxStyle()\"\n      [isChecked]=\"isSelected\"\n      [id]=\"id\"\n      (handleChange)=\"select.emit($event)\"\n    >\n    </app-teams-checkbox-mutable-gradient>\n    <div class=\"app-teams-card__text-box\"\n      [style.flexDirection] = \"isMobile ? 'column' : 'row'\"\n      [style.marginLeft] = \"isSmallMobile ? '10px' : '26px'\"\n      [style.alignItems] = \"isMobile ? 'flex-start' : 'center'\"\n    >\n      <p \n        [style.color] = \"textColor\"\n        [style.fontSize] = \"isSmallMobile ? '12px' : '16px'\"\n        class=\"app-teams-card__name\"\n      >\n        {{ name }}\n      </p>\n      <p \n        [style.color] = \"textColor\"\n        [style.fontSize] = \"isSmallMobile ? '12px' : '16px'\"\n        class=\"app-teams-card__text\"\n      >\n        {{ email }}\n      </p>\n    </div>\n  </div>\n  <p \n    [style.color] = \"textColor\"\n    [style.fontSize] = \"isSmallMobile ? '12px' : '16px'\"\n    (mouseenter)=\"setTipsVisibility($event, true)\"\n    (mouseleave)=\"setTipsVisibility($event, false)\"\n    class=\"app-teams-card__position\"\n  >\n    {{ position }}\n  </p>\n  <div class=\"app-ondoarding-card__wrapper\" *ngIf=\"isMobile\">\n    <button \n      type=\"button\"\n      class=\"app-teams-card__toggler\"\n      (click)=\"setIsVisibleOptions()\"\n    >\n      <svg-icon \n        [src]=\"'assets/images/menu/Options.svg'\"\n        [svgStyle]=\"{ 'fill': '#011949' }\"\n      >\n      </svg-icon>\n    </button>\n    <div class=\"app-teams-card__mobile-box\" *ngIf=\"isVisibleOptions\">\n      <button \n        class=\"app-teams-card__mobile-button\" \n        type=\"button\"\n        (click)=\"handleEdit()\"\n      >\n        Edit\n      </button>\n      <button \n        class=\"app-teams-card__mobile-button\" \n        type=\"button\"\n        (click)=\"handleDuplicate()\"\n      > \n        Copy\n      </button>\n      <button \n        class=\"app-teams-card__mobile-button\" \n        type=\"button\"\n        (click)=\"handleDelete()\"\n      >\n        Delete\n      </button>\n    </div>\n  </div>\n  <div class=\"app-teams-card__wrapper-button\" *ngIf=\"!isMobile\" [style.opacity]=\"(!isMobile && (onActive || isSelected)) ? '1' : '0'\">\n    <app-teams-mutable-primary-button [title]=\"'edit'\" (click)=\"handleEdit()\"></app-teams-mutable-primary-button>\n    <app-teams-mutable-gradient-icon-button [svgPath]=\"'assets/images/copy.svg'\" (click)=\"handleDuplicate()\"></app-teams-mutable-gradient-icon-button>\n    <teams-app-mutable-danger-button [svgPath]=\"'assets/images/basket.svg'\" (click)=\"handleDelete()\"></teams-app-mutable-danger-button>\n  </div>\n</div>\n\n\n\n"
        },
        {
            "name": "TeamsCardsListComponent",
            "id": "component-TeamsCardsListComponent-f28b5b06f3b53088924c43cf89091c2c",
            "file": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-teams-cards-list",
            "styleUrls": [
                "./teams-cards-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams-cards-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialUsersList",
                    "line": 37,
                    "type": "User[]"
                },
                {
                    "name": "selected",
                    "line": 36,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeEmail",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "activeId",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "activePosition",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "activeTitle",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "addModalContent",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'addModalContent'"
                        }
                    ]
                },
                {
                    "name": "changeSelectedList",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "container",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'containerList'"
                        }
                    ]
                },
                {
                    "name": "ctx",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "deleteModalContent",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'deleteModalContent'"
                        }
                    ]
                },
                {
                    "name": "editModalContent",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'editModalContent'"
                        }
                    ]
                },
                {
                    "name": "handleFilter",
                    "defaultValue": "debounce(function(...args) {\n    this.query = args[0].toLowerCase();\n  }, 500, false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 223
                },
                {
                    "name": "isMobile",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "isModalVisible",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "isSmallMobile",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "modalComponent",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "modalDangerButtonFunction",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "modalDangerButtonTitle",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "modalPrimaryButtonFunction",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "modalPrimaryButtonTitle",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "modalTitle",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "newUserEmail",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "newUserName",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "newUserPosition",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "positions",
                    "defaultValue": "['Account owner', 'Account manager', 'Account user']",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "positionsAndRights",
                    "defaultValue": "{\n      'Account owner': 'Has access to all domains and all settings.', \n      'Account manager': 'Has access to some domains and some settings.',\n      'Account user': 'Has no access to all domains and all settings.'\n    }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "query",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "users",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "methodsClass": [
                {
                    "name": "addUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150
                },
                {
                    "name": "checkIsSelected",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 89,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 176
                },
                {
                    "name": "deleteSelectedusers",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117
                },
                {
                    "name": "deleteUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102
                },
                {
                    "name": "detectMobileView",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227
                },
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "duplicateUser",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 210,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137
                },
                {
                    "name": "handleAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145
                },
                {
                    "name": "handleDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleDeleteSeveral",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108
                },
                {
                    "name": "handleEdit",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 232
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 236
                },
                {
                    "name": "selectAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79
                },
                {
                    "name": "setModalVariables",
                    "args": [
                        {
                            "name": "modalTitle",
                            "type": ""
                        },
                        {
                            "name": "modalPrimaryButtonTitle",
                            "type": ""
                        },
                        {
                            "name": "modalDangerButtonTitle",
                            "type": ""
                        },
                        {
                            "name": "modalPrimaryButtonFunction",
                            "type": ""
                        },
                        {
                            "name": "modalDangerButtonFunction",
                            "type": ""
                        },
                        {
                            "name": "modalComponent",
                            "type": ""
                        },
                        {
                            "name": "modalVisibility",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "jsdoctags": [
                        {
                            "name": "modalTitle",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modalPrimaryButtonTitle",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modalDangerButtonTitle",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modalPrimaryButtonFunction",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modalDangerButtonFunction",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modalComponent",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modalVisibility",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string"
                        },
                        {
                            "name": "type",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 75
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\nfunction debounce(func, wait, immediate) {\n  var timeout;\n  return function() {\n    var context = this, args = arguments;\n    var later = function() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nconst MOBILE_VIEW = 574;\nconst SMALL_MOBILE_VIEW = 400;\n\ninterface User {\n  name: string,\n  email: string,\n  position: string,\n  id: string | number\n}\n\n@Component({\n  selector: 'app-teams-cards-list',\n  templateUrl: './teams-cards-list.component.html',\n  styleUrls: ['./teams-cards-list.component.scss']\n})\n\nexport class TeamsCardsListComponent implements OnInit {\n  @Input() selected: string[];\n  @Input() initialUsersList: User[];\n\n  @ViewChild('deleteModalContent')deleteModalContent: ElementRef;\n  @ViewChild('editModalContent')editModalContent: ElementRef;\n  @ViewChild('addModalContent')addModalContent: ElementRef;\n  @ViewChild('containerList') container: ElementRef;\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.users, event.previousIndex, event.currentIndex);\n  }\n  \n  positionsAndRights = {\n      'Account owner': 'Has access to all domains and all settings.', \n      'Account manager': 'Has access to some domains and some settings.',\n      'Account user': 'Has no access to all domains and all settings.'\n    }\n  positions = ['Account owner', 'Account manager', 'Account user']\n  users = [];\n  isModalVisible = false;\n  query = '';\n  newUserName = '';\n  newUserEmail = '';\n  newUserPosition = '';\n  activeTitle = '';\n  activeEmail = '';\n  activePosition = '';\n  activeId='';\n  modalTitle='';\n  modalPrimaryButtonTitle = '';\n  modalDangerButtonTitle = '';\n  modalPrimaryButtonFunction=(args: any) => {};\n  modalDangerButtonFunction=(args: any) => {};\n  modalComponent;\n  ctx;\n  isMobile;\n  isSmallMobile;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.detectMobileView();\n  }\n\n  selectAll() {\n    this.selected = this.selected.length === this.users.length\n      ? []\n      : this.users.map(user => user.id)\n  }\n\n  changeSelectedList = (id: string) => {\n    this.selected = (this.selected.includes(id)) ? this.selected.filter(user => user !== id) : [...this.selected, id];\n  }\n\n  checkIsSelected(id: string) {\n    return this.selected.includes(id);\n  }\n\n  /// show modal with props\n\n  handleDelete(id: string) {\n    this.activeTitle = this.users.find(user => user.id === id).name;\n    this.ctx = { titleActiveUser: this.activeTitle };\n    this.activeId = id;\n    this.setModalVariables('Are you sure?', '', 'delete user', this.closeModal, this.deleteUser, this.deleteModalContent, true);\n  }\n\n  deleteUser() {\n    this.users = this.users.filter(user => user.id !== this.activeId);\n    this.isModalVisible = false;\n    this.selected = this.selected.filter(user => user !== this.activeId);\n  }\n\n  handleDeleteSeveral() {\n    this.activeTitle = this.users\n      .filter(user => this.selected.includes(user.id))\n      .map(user => user.name).join(', ');\n      console.log(this.activeTitle)\n    this.ctx = { titleActiveUser: this.activeTitle };\n    this.setModalVariables( 'Are you sure?', '', 'delete users', this.closeModal, this.deleteSelectedusers, this.deleteModalContent, true);\n  }\n\n  deleteSelectedusers() {\n    this.users = this.users.filter(user => {\n      if(!this.selected.includes(user.id)) {\n        return user\n      }\n    })\n    this.selected = [];\n    this.closeModal();\n  }\n\n  handleEdit(id: string) {\n    const activeUser = this.users.find(user => user.id === id);\n    this.activeTitle = activeUser.name;\n    this.activeEmail = activeUser.email;\n    this.activePosition = activeUser.position\n    this.activeId = id;\n    this.ctx = { initialValue: this.activeTitle };\n    this.setModalVariables('Edit user', 'Save', 'Cancel', this.editUser, this.closeModal, this.editModalContent, true);\n  }\n\n  editUser() {\n    const activeIndex = this.users.findIndex(user => user.id === this.activeId);\n    this.users[activeIndex].name = this.activeTitle;\n    this.users[activeIndex].email = this.activeEmail;\n    this.users[activeIndex].position = this.activePosition;\n    this.closeModal();\n  }\n\n  handleAdd() {\n    this.ctx = { initialValue: '' };\n    this.setModalVariables('Add user', 'add', 'cancel', this.addUser, this.closeModal, this.addModalContent, true);\n  }\n\n  addUser() {\n    const newUser = {\n      id: `${Date.now()}`, \n      name: this.newUserName, \n      email: this.newUserEmail,\n      position: this.newUserPosition\n    }\n\n    this.users = [...this.users, newUser];\n    this.closeModal()\n  }\n\n\n  setModalVariables(\n    modalTitle, modalPrimaryButtonTitle, modalDangerButtonTitle, modalPrimaryButtonFunction,\n    modalDangerButtonFunction, modalComponent, modalVisibility\n  ) {\n    this.modalTitle = modalTitle;\n    this.modalPrimaryButtonTitle = modalPrimaryButtonTitle;\n    this.modalDangerButtonTitle = modalDangerButtonTitle;\n    this.modalPrimaryButtonFunction = modalPrimaryButtonFunction;\n    this.modalDangerButtonFunction = modalDangerButtonFunction;\n    this.modalComponent = modalComponent;\n    this.isModalVisible = modalVisibility;\n  }\n\n  closeModal() {\n    this.newUserEmail = '';\n    this.newUserName = '';\n    this.newUserPosition = '';\n    this.activePosition = '';\n    this.activeTitle = '';\n    this.activeEmail = '';\n    this.activeId = '';\n    this.isModalVisible = false;\n  }\n\n  setValue(value: string, type: string) {\n    switch(type) {\n      case 'editTitle':\n        this.activeTitle = value;\n        break;\n      case 'editEmail':\n        this.activeEmail= value;\n        break;\n      case 'editPosition':\n        this.activePosition = value;\n        break;\n      case 'addTitle':\n        this.newUserName = value;\n        break;\n      case 'addEmail':\n        this.newUserEmail = value;\n        break;\n      case 'addPosition':\n        this.newUserPosition = value;\n        break;\n    }\n  }\n\n  duplicateUser(id: string) {\n    const index = this.users.findIndex(user => user.id === id);\n    const userToDuplicate = this.users[index];\n    const newUser = {\n      id: `${Date.now()}`, \n      name: userToDuplicate.name, \n      email: userToDuplicate.email,\n      position: userToDuplicate.position,\n    }\n\n    this.users.splice(index, 0, newUser);\n  }\n\n  handleFilter = debounce(function(...args) {\n    this.query = args[0].toLowerCase();\n  }, 500, false)\n\n  detectMobileView() {\n    this.isMobile = this.container.nativeElement.clientWidth <= MOBILE_VIEW;\n    this.isSmallMobile = this.container.nativeElement.clientWidth <= SMALL_MOBILE_VIEW;\n  }\n\n  ngAfterViewInit() {\n    this.detectMobileView();\n  }\n\n  ngOnInit() {\n    this.users = this.initialUsersList;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".teams-cards-list {\n  width: 100%;\n  padding: 32px;\n  position: relative;\n  background: var(--text-color);\n  box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n  border-radius: 20px;\n  \n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  color: var(--secondary-color);\n\n  &__separator {\n    width: 16px;\n  }\n\n  &__top {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    margin-bottom: 28px;\n  }\n\n  &__middle {\n    margin-bottom: 24px;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  &__filter-wrapper {\n    width: 100%;\n  }\n\n  &__modal-text {\n    margin: 16px 0 8px;\n    text-align: center;\n    color: rgba(var(--secondary-color-code), 1);\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 150%;\n  }\n\n  &__selected {\n    font-weight: 600;\n    font-size: 18px;\n    line-height: 100%;\n  }\n\n  &__input-title {\n    margin: 16px 0 8px;\n    text-align: left;\n    color: rgba(var(--secondary-color-code), 0.5);\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 150%;\n  }\n\n  &__list {\n    display: flex;\n    flex-direction: column;\n    \n    & * {\n      margin-bottom: 23px;\n    }\n  \n    & :last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  &__buttons {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    height: 72px;\n    padding: 0 24px 14px 24px;\n    margin-bottom: 24px;\n    border-bottom: 1px solid var(--asimetric-bg-color);\n\n    &.mobile {\n      padding: 0 5px 14px 5px;\n\n      & > .teams-cards-list__buttons--left > p {\n        margin-left: 10px;\n        font-size: 14px;\n      }\n    }\n\n    &--left {\n      display: flex;\n      align-items: center;\n\n      & > p {\n        margin-left: 26px;\n      }\n    }\n\n    &--right {\n      width: 100px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n  }\n}\n",
                    "styleUrl": "./teams-cards-list.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div \n  class=\"teams-cards-list\" \n  #containerList \n  [ngStyle]=\"isSmallMobile && { 'padding': '10px 3px' }\"\n>\n<!-- template for delete modal -->\n  <ng-template #deleteModalContent let-titleActiveUser=\"titleActiveUser\">\n    <p class=\"teams-cards-list__modal-text\">\n      Are you sure you want to remove a team member <strong>{{ titleActiveUser }}</strong> from the administrators list?\n  </p>\n  </ng-template>\n<!-- template for edit modal -->\n  <ng-template #editModalContent let-initialValue=\"initialValue\">\n    <p class=\"teams-cards-list__input-title\">Name</p>\n    <app-teams-input\n      [placeholderText]=\"''\"\n      [initialValue]=\"initialValue\"\n      [name]=\"initialValue\"\n      (changeValueParentFunction)=\"setValue($event, 'editTitle')\"\n    >\n    </app-teams-input>\n    <p class=\"teams-cards-list__input-title\">Email</p>\n    <app-teams-input\n      [placeholderText]=\"''\"\n      [initialValue]=\"activeEmail\"\n      [name]=\"initialValue\"\n      (changeValueParentFunction)=\"setValue($event, 'editEmail')\"\n    >\n    </app-teams-input>\n    <p class=\"teams-cards-list__input-title\">Access</p>\n    <teams-select-input\n      [initialValue]=\"activePosition\"\n      [items]=\"positions\"\n      [id]=\"'position'\"\n      (changeValueParentFunction)=\"setValue($event, 'editPosition')\"\n    >\n    </teams-select-input>\n  </ng-template>\n<!-- template for add modal -->\n  <ng-template #addModalContent let-initialValue=\"initialValue\">\n    <p class=\"teams-cards-list__input-title\">Name</p>\n    <app-teams-input\n      [placeholderText]=\"''\"\n      [initialValue]=\"''\"\n      [name]=\"initialValue\"\n      (changeValueParentFunction)=\"setValue($event, 'addTitle')\"\n    >\n    </app-teams-input>\n    <p class=\"teams-cards-list__input-title\">Email</p>\n    <app-teams-input\n      [placeholderText]=\"''\"\n      [initialValue]=\"''\"\n      [name]=\"initialValue\"\n      (changeValueParentFunction)=\"setValue($event, 'addEmail')\"\n    >\n    </app-teams-input>\n    <p class=\"teams-cards-list__input-title\">Access</p>\n    <teams-select-input\n      [initialValue]=\"''\"\n      [items]=\"positions\"\n      [id]=\"'position'\"\n      (changeValueParentFunction)=\"setValue($event, 'addPosition')\"\n    >\n    </teams-select-input>\n  </ng-template>\n\n  <div class=\"teams-cards-list__top\">\n    <app-teams-secondary-button [title]=\"'Audit Log'\"></app-teams-secondary-button>\n    <div class=\"teams-cards-list__separator\"></div>\n    <app-teams-simple-button\n      [classes]=\"'btn-success-asimetric'\"\n      [title]=\"isMobile ? '+' :' Add new user'\"\n      (click)=\"handleAdd()\"\n    >\n    </app-teams-simple-button>\n  </div>\n  <div class=\"teams-cards-list__middle\">\n    <div class=\"teams-cards-list__filter-wrapper\">\n      <app-teams-search-input\n        [placeholderText]=\"'Enter a query'\"\n        [initialValue]=\"''\"\n        (changeValueParentFunction)=\"handleFilter($event)\"\n      >\n      </app-teams-search-input>\n    </div>\n  </div>\n  <div \n    [ngClass]=\"{ 'teams-cards-list__buttons': true, 'mobile': isMobile }\"\n    *ngIf=\"selected.length > 1\"\n  >\n    <div class=\"teams-cards-list__buttons--left\">\n      <app-teams-checkbox-mutable-gradient\n        [onActive]=\"false\"\n        [isChecked]=\"users.length === selected.length\"\n        [id]=\"selectAll\"\n        (handleChange)=\"selectAll()\"\n      >\n      </app-teams-checkbox-mutable-gradient>\n<<<<<<< HEAD\n      <p \n        *ngIf=\"selected.length\" \n        class=\"fs-18-sofia-600\" \n        [ngStyle]=\"isMobile && { 'margin-left': '10px', 'font-size': '14px' }\"\n      >\n        Seletcted {{ selected.length }} user{{ selected.length > 1 ? 's' : '' }}\n=======\n      <p *ngIf=\"selected.length\" class=\"teams-cards-list__selected\">\n        Seletcted {{ selected.length }} users\n>>>>>>> developments/angular-components\n      </p>\n    </div>\n    <div class=\"teams-cards-list__buttons--right\">\n      <app-teams-svg-button\n        [svgPath]=\"'assets/images/download.svg'\"\n        [borderColor]=\"'#D0DAEB'\"\n        [bgColor]=\"'transparent'\"\n        [bgColorHover]=\"'#D0DAEB'\"\n        [svgColor]=\"'url(#paint0_linear)'\"\n        [isStroke]=\"false\"\n      >\n      </app-teams-svg-button>\n      <app-teams-svg-button\n        [svgPath]=\"'assets/images/basket.svg'\"\n        [borderColor]=\"''\"\n        [bgColor]=\"'rgb(234, 45, 45, 0.1)'\"\n        [bgColorHover]=\"'rgb(234, 45, 45, 0.3)'\"\n        [svgColor]=\"'rgb(234, 45, 45, 1)'\"\n        [isStroke]=\"true\"\n        (click)=\"handleDeleteSeveral()\"\n      >\n      </app-teams-svg-button>\n    </div>\n  </div>\n  <ul class=\"teams-cards-list__list\">\n    <div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\n      <div class=\"example-box\" *ngFor=\"let user of users\" cdkDrag>\n        <li \n          class=\"teams-cards-list__item\" \n          *ngIf=\"user.name.toLowerCase().includes(query) || user.email.toLowerCase().includes(query)\"\n        >\n          <app-teams-card\n            [name]=\"user.name\"\n            [email]=\"user.email\"\n            [tip]=\"{ title: user.position, text: positionsAndRights[user.position] }\"\n            [position]=\"user.position\"\n            [isSelected]=\"checkIsSelected(user.id)\"\n            (delete)=\"handleDelete($event)\"\n            (edit)=\"handleEdit($event)\"\n            (select)=\"changeSelectedList($event)\"\n            (duplicate)=\"duplicateUser($event)\"\n            [id]=\"user.id\"\n          >\n          </app-teams-card>\n        </li>\n      </div>\n    </div>\n  </ul>\n  <div *ngIf=\"isModalVisible\">\n    <app-teams-modal\n      [title]=\"modalTitle\"\n      [dangerButtonTitle]=\"modalDangerButtonTitle\"\n      [primaryButtonTitle]=\"modalPrimaryButtonTitle\"\n      (closeModal)=\"closeModal()\"\n      (primaryButtonFunction)=\"modalPrimaryButtonFunction()\"\n      (dangerButtonFunction)=\"modalDangerButtonFunction()\"\n    >\n    <ng-container \n      *ngTemplateOutlet=\"modalComponent;context:ctx\">\n    </ng-container>\n    </app-teams-modal>\n  </div>\n</div>"
        },
        {
            "name": "TeamsCheckboxMutableGradientComponent",
            "id": "component-TeamsCheckboxMutableGradientComponent-6effc3208276954b9f5498a4ce34f603",
            "file": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-teams-checkbox-mutable-gradient",
            "styleUrls": [
                "./teams-checkbox-mutable-gradient.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams-checkbox-mutable-gradient.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "isChecked",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "onActive",
                    "line": 13,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "handleChange",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "onToggle",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, Output, EventEmitter } from '@angular/core';\n\nconst ACTIVE_CLASS = 'app-checkbox-input-gradient__container active';\nconst INACTIVE_CLASS = 'app-checkbox-input-gradient__container';\n\n@Component({\n  selector: 'app-teams-checkbox-mutable-gradient',\n  templateUrl: './teams-checkbox-mutable-gradient.component.html',\n  styleUrls: ['./teams-checkbox-mutable-gradient.component.scss']\n})\n\nexport class TeamsCheckboxMutableGradientComponent implements OnChanges {\n  @Input() onActive: boolean;\n  @Input() isChecked: boolean;\n  @Input() id: string;\n\n  @Output() handleChange: EventEmitter<any> = new EventEmitter();\n  \n  classes='';\n\n  onToggle = () => {\n    this.handleChange.emit(this.id)\n  }\n\n  ngOnChanges(): void {\n    this.classes = this.onActive ? ACTIVE_CLASS : INACTIVE_CLASS;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-input-gradient__container {\n  width: 24px;\n  height: 24px;\n\n  & > .app-checkbox-input-gradient {\n    display: none;\n  \n    &__label {\n      display: block;\n      position: relative;\n  \n      &:after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n  \n        box-sizing: border-box;\n        width: 24px;\n        height: 24px;\n        border-radius: 4px;\n        border: 1px solid rgba(var(--secondary-color-code), 0.3);\n      }\n    }\n  }\n  \n  & > .app-checkbox-input-gradient:checked + .app-checkbox-input-gradient__label {\n    &:after {\n      background: var(--success-grad-light);\n      border: none;\n    }\n  \n    &:before {\n      content: \"\";\n      position: absolute;\n      top: 4px;\n      left: 4px;\n      z-index: 2;\n  \n      box-sizing: border-box;\n      width: 16px;\n      height: 16px;\n      background: center no-repeat url('../../../../../../assets/images/checkbox.svg');\n      background-size: contain;\n    }\n  }\n}\n\n.app-checkbox-input-gradient__container.active {\n  & > .app-checkbox-input-gradient {\n\n    &__label {\n      &:after {\n        border: 1px solid rgba(var(--text-color-code), 0.5);\n      }\n  \n      &:hover {\n        &:after {\n          border: 1px solid rgba(var(--text-color-code), 1);\n        }\n      }\n    }\n  }\n\n  & > .app-checkbox-input-gradient:checked + .app-checkbox-input-gradient__label {\n    &:after {\n      background: var(--text-color);\n    }\n\n    &:before {\n      background: center no-repeat url('../../../../../../assets/images/checkboxGradient.svg');\n    }\n  }\n}\n",
                    "styleUrl": "./teams-checkbox-mutable-gradient.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div [ngClass]=\"classes\">\n  <input\n    type=\"checkbox\" \n    [id]=\"id\"\n    name=\"app-checkbox-input-gradient\" \n    class=\"app-checkbox-input-gradient\"\n    [checked]=\"isChecked\"\n    (change)=\"onToggle()\"\n  >\n  <label [for]=\"id\" class=\"app-checkbox-input-gradient__label\"></label>\n</div>\n\n"
        },
        {
            "name": "TeamsInputComponent",
            "id": "component-TeamsInputComponent-02dd0e6a841c74238e45b710e8f0dd75",
            "file": "src/app/pages-components/Teams/Atoms/inputs/teams-input/teams-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-teams-input",
            "styleUrls": [
                "teams-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Math.random()",
                    "line": 13,
                    "type": "number"
                },
                {
                    "name": "initialValue",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "placeholderText",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "changeValueParentFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChangeValue",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-teams-input',\n  templateUrl: './teams-input.component.html',\n  styleUrls: ['teams-input.component.scss'],\n})\n\nexport class TeamsInputComponent implements OnInit {\n  @Input() placeholderText: string;\n  @Input() name?: string = '';\n  @Input() initialValue?: string;\n  @Input() id?: number = Math.random();\n\n  @Output() changeValueParentFunction?: EventEmitter<any> = new EventEmitter();\n\n  classes='';\n  value='';\n\n  handleChangeValue(event) {\n   this.changeValueParentFunction.emit(event.target.value)\n  }\n\n  ngOnInit() {\n    if (this.initialValue) {\n      this.value = this.initialValue;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-input-field {\n  width: 100%;\n  padding: 15px 16px 15px 16px;\n  height: 48px;\n\n  border: none;\n  border-radius: 8px;\n  background: rgba(var(--secondary-color-code), 0.05);\n  color: var(--secondary-color);\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 100%;\n\n  &::placeholder {\n    color: rgba(var(--secondary-color-code), 0.5);\n  }\n\n  &:hover {\n    background: rgba(var(--secondary-color-code), 0.2);\n  }\n\n  &::placeholder {\n    font-weight: 300;\n  }\n}",
                    "styleUrl": "teams-input.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<input \n  class=\"app-form-input-field\"\n  [placeholder]=\"placeholderText\"\n  type=\"text\"\n  [name]=\"name\"\n  [value]=\"value\"\n  (input)=\"handleChangeValue($event)\"\n  [id]=\"id\"\n/>\n"
        },
        {
            "name": "TeamsModalComponent",
            "id": "component-TeamsModalComponent-6a9936fc933a42961c40fcc171113118",
            "file": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-teams-modal",
            "styleUrls": [
                "./teams-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dangerButtonTitle",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "primaryButtonTitle",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "closeModal",
                    "defaultValue": "new EventEmitter()",
                    "line": 18,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "dangerButtonFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "primaryButtonFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 16,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "modal",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'modal'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output, Input, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-teams-modal',\n  templateUrl: './teams-modal.component.html',\n  styleUrls: ['./teams-modal.component.scss']\n})\n\nexport class TeamsModalComponent {\n  @Input() title: string;\n  @Input() primaryButtonTitle: string;\n  @Input() dangerButtonTitle: string;\n\n  @ViewChild('modal') modal: ElementRef;\n\n  @Output() primaryButtonFunction: EventEmitter<any> = new EventEmitter();\n  @Output() dangerButtonFunction: EventEmitter<any> = new EventEmitter();\n  @Output() closeModal: EventEmitter<any> = new EventEmitter();\n\n  handleClick(event) {\n    const element = event.target;\n    if (element.closest('.teams-modal__form') || element.classList.contains('ng-option') || element.closest('.ng-option')) {\n      return\n    }\n    this.handleClose();\n  }\n\n  handleClose() {\n    this.closeModal.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".teams-modal {\n  width: 100vw;\n  height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 3;\n\n  background-color: rgba(var(--secondary-color-code), 0.5);\n  color: var(--secondary-color);\n  text-align: center;\n\n  &__title {\n    margin-bottom: 32px;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    color: var(--secondary-color);\n  }\n\n  &__form {\n    min-width: 588px;\n    max-width: 800px;\n    padding: 32px 64px;\n\n    position: relative;\n    margin: auto;\n    background: var(--card-bg-color);\n    border-radius: 12px 30px;\n  }\n\n  &__buttons {\n    display: flex;\n    justify-content: center;\n    margin-top: 24px;\n\n    & * {\n      margin-right: 30px;;\n    }\n  \n    & :last-child {\n      margin-right: 0;\n    }\n  }\n\n  &__close {\n    position: absolute;\n    right: 28px;\n    top: 24px;\n    \n    background-color: transparent;\n    border: none;\n    outline: none;\n  }\n}\n\n@media screen and (max-width: 600px) {\n  .teams-modal {\n    &__form {\n      min-width: 90%;\n      max-width: 90%;\n      padding: 20px;\n    }\n  }\n}",
                    "styleUrl": "./teams-modal.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"teams-modal\" (click)=\"handleClick($event)\" #modal>\n  <div class=\"teams-modal__form\">\n    <button \n      type=\"button\" \n      class=\"teams-modal__close\" \n      (click)=\"handleClose()\"\n    >\n      <img src=\"assets/images/deleteX.png\" alt=\"delete\">\n    </button>\n    <p class=\"teams-modal__title\">{{ title }}</p>\n    <ng-content></ng-content>\n    <div class=\"teams-modal__buttons\">\n      <app-teams-simple-button\n        *ngIf=\"dangerButtonTitle!==''\" \n        [classes]=\"'btn-danger'\"\n        [title]=\"dangerButtonTitle\"\n        (click)=\"dangerButtonFunction.emit()\"\n      >\n      </app-teams-simple-button>\n      <app-teams-simple-button \n        *ngIf=\"primaryButtonTitle!==''\" \n        [classes]=\"'btn-success'\"\n        [title]=\"primaryButtonTitle\"\n        (click)=\"primaryButtonFunction.emit()\"\n      >\n      </app-teams-simple-button>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "TeamsMutableDangerButtonComponent",
            "id": "component-TeamsMutableDangerButtonComponent-8b6e20e97f6c6eca9be99e461e735b47",
            "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "teams-app-mutable-danger-button",
            "styleUrls": [
                "./teams-mutable-danger-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams-mutable-danger-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "svgPath",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "changeToActiveColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "changeToStaticColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "color",
                    "defaultValue": "STATIC_COLOR",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\nconst HOVER_COLOR = 'red';\nconst STATIC_COLOR = 'white';\n\n@Component({\n  selector: 'teams-app-mutable-danger-button',\n  templateUrl: './teams-mutable-danger-button.component.html',\n  styleUrls: ['./teams-mutable-danger-button.component.scss']\n})\n\nexport class TeamsMutableDangerButtonComponent implements OnChanges {\n  @Input() svgPath: string;\n\n  color = STATIC_COLOR;\n\n  changeToActiveColor = () => {\n    this.color = HOVER_COLOR;\n  }\n\n  changeToStaticColor = () => {\n    this.color = STATIC_COLOR;\n  }\n\n  ngOnChanges(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-mutable-danger-button {\n  height: 44px;\n  padding: 11px 14px;\n  border-radius: 8px;\n  border: none;\n  background-color: rgba(var(--text-color-code), 0.1);\n\n  &:hover {\n    background-color: rgba(var(--text-color-code), 1);\n  }\n\n  &:active {\n    background-color: rgba(var(--text-color-code), 0.1);\n  }\n}\n\n",
                    "styleUrl": "./teams-mutable-danger-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<button \n  class=\"app-mutable-danger-button\"\n  (mousedown)=\"changeToStaticColor()\"\n  (mouseup)=\"changeToActiveColor()\"\n  (mouseenter)=\"changeToActiveColor()\"\n  (mouseleave)=\"changeToStaticColor()\"\n>\n  <svg-icon \n    [src]=\"svgPath\"\n    [svgStyle]=\"{ 'stroke': color }\"\n  >\n  </svg-icon>\n</button>\n"
        },
        {
            "name": "TeamsMutableGradientIconButtonComponent",
            "id": "component-TeamsMutableGradientIconButtonComponent-772b6a12344cf166f3e279b788e85260",
            "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-teams-mutable-gradient-icon-button",
            "styleUrls": [
                "./teams-mutable-gradient-icon-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams-mutable-gradient-icon-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "svgPath",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "changeToActiveColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "changeToStaticColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "color",
                    "defaultValue": "STATIC_COLOR",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnChanges, Input } from '@angular/core';\n\nconst STATIC_COLOR = 'rgb(255, 255, 255)';\nconst HOVER_COLOR = 'url(#paint0_linear)';\n\n@Component({\n  selector: 'app-teams-mutable-gradient-icon-button',\n  templateUrl: './teams-mutable-gradient-icon-button.component.html',\n  styleUrls: ['./teams-mutable-gradient-icon-button.component.scss']\n})\n\nexport class TeamsMutableGradientIconButtonComponent implements OnChanges {\n  @Input() svgPath: string;\n  \n  color = STATIC_COLOR;\n\n  changeToActiveColor = () => {\n    this.color = HOVER_COLOR;\n  }\n\n  changeToStaticColor = () => {\n    this.color = STATIC_COLOR;\n  }\n\n  ngOnChanges(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-mutable-gradient-icon-button {\n  height: 44px;\n  padding: 11px 14px;\n  border-radius: 8px;\n  border: none;\n  background-color: rgba(var(--text-color-code), 0.1);\n\n  &:hover {\n    background-color: rgba(var(--text-color-code), 1);\n  }\n\n  &:active {\n    background-color: rgba(var(--text-color-code), 0.1);\n  }\n\n  &__tip {\n    display: none;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 100%;\n  }\n\n  &__container {\n    position: relative;\n    height: 44px;\n    width: fit-content;\n\n    &:hover > .app-mutable-gradient-icon-button__tip {\n      display: block;\n      width: 212px;\n      height: 48px;\n      box-sizing: border-box;\n\n      position: absolute;\n      right: 0;\n      top: -48px;\n\n      background: var(--text-color);\n      border: 1px solid var(--info-color-code);\n      color: var(--secondary-color);\n      box-shadow: 0px 8px 12px rgba(28, 28, 28, 0.2);\n      border-radius: 8px;\n\n      line-height: 48px;\n      text-align: center;\n\n      &:hover {\n        display: none;\n      }\n    }\n  }\n}",
                    "styleUrl": "./teams-mutable-gradient-icon-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"app-mutable-gradient-icon-button__container\">\n  <div class=\"app-mutable-gradient-icon-button__tip\">Dupliate this domains</div>\n  <button \n    class=\"app-mutable-gradient-icon-button\"\n    (mousedown)=\"changeToStaticColor()\"\n    (mouseup)=\"changeToActiveColor()\"\n    (mouseenter)=\"changeToActiveColor()\"\n    (mouseleave)=\"changeToStaticColor()\"\n  >\n    <svg-icon \n      [src]=\"svgPath\"\n      [svgStyle]=\"{ 'stroke': color }\"\n    >\n    </svg-icon>\n  </button>\n</div>\n\n"
        },
        {
            "name": "TeamsMutablePrimaryButtonComponent",
            "id": "component-TeamsMutablePrimaryButtonComponent-30fcad07432981312b7ed503cf6b9604",
            "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-primary-button/teams-mutable-primary-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-teams-mutable-primary-button",
            "styleUrls": [
                "./teams-mutable-primary-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams-mutable-primary-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-teams-mutable-primary-button',\n  templateUrl: './teams-mutable-primary-button.component.html',\n  styleUrls: ['./teams-mutable-primary-button.component.scss']\n})\n\nexport class TeamsMutablePrimaryButtonComponent implements OnChanges {\n  @Input() title: string;\n\n  ngOnChanges() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-mutable-primary-button {\n  padding: 16px 29px;\n  border-radius: 8px;\n  border: none;\n  background: rgba(var(--text-color-code), 0.15);\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  &__title {\n    text-transform: uppercase;\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 800;\n    font-size: 12px;\n  }\n\n  &:hover {\n    background-color: var(--text-color);\n\n    & .app-mutable-primary-button__title {\n      background: var(--success-grad-light);\n      background-clip: text;\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n\n  &:active {\n    background: rgba(var(--secondary-color-code), 0.15);\n\n    & .app-mutable-primary-button__title {\n      background: var(--text-color);\n      background-clip: text;\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n}\n",
                    "styleUrl": "./teams-mutable-primary-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<button type=\"button\" class=\"app-mutable-primary-button\">\n  <p class=\"app-mutable-primary-button__title\">{{ title }}</p>\n</button>\n\n"
        },
        {
            "name": "TeamsSearchInputComponent",
            "id": "component-TeamsSearchInputComponent-c1d288866af2aa6dbf450fe66f84c5f3",
            "file": "src/app/pages-components/Teams/Atoms/inputs/teams-search-input/teams-search-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-teams-search-input",
            "styleUrls": [
                "./teams-search-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams-search-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Math.random()",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "initialValue",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "placeholderText",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "changeValueParentFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "value",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChangeValue",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-teams-search-input',\n  templateUrl: './teams-search-input.component.html',\n  styleUrls: ['./teams-search-input.component.scss']\n})\nexport class TeamsSearchInputComponent implements OnInit {\n  @Input() placeholderText: string;\n  @Input() name?: string = '';\n  @Input() initialValue?: string;\n  @Input() id?: number = Math.random();\n\n  @Output() changeValueParentFunction?: EventEmitter<any> = new EventEmitter();\n\n  value='';\n\n  handleChangeValue(event) {\n   this.changeValueParentFunction.emit(event.target.value);\n  }\n\n  ngOnInit() {\n    if (this.initialValue) {\n      this.value = this.initialValue;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-teams-search {\n  position: relative;\n  width: 100%;\n  \n  &::after {\n    content: '';\n    height: 20px;\n    width: 20px;\n\n    position: absolute;\n    top: 14px;\n    left: 16px;\n    \n    background: url('../../../../../../assets/images/Search.png') no-repeat center;\n    background-size: contain;\n    opacity: 0.5;\n  }\n\n  &__input {\n    width: 100%;\n    padding: 15px 16px 16px 53px;\n    height: 48px;\n\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 100%;\n  \n    border: none;\n    border-radius: 8px;\n    background: rgba(var(--secondary-color-code), 0.05);\n    color: var(--secondary-color);\n  \n    &::placeholder {\n      color: rgba(var(--secondary-color-code), 0.5);\n    }\n  \n    &:hover {\n      background: rgba(var(--secondary-color-code), 0.2);\n    }\n  \n    &::placeholder {\n      font-weight: 300;\n    }\n  }\n}",
                    "styleUrl": "./teams-search-input.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-teams-search\">\n  <input \n    class=\"app-teams-search__input\"\n    [placeholder]=\"placeholderText\"\n    type=\"text\"\n    [name]=\"name+''\"\n    [value]=\"value\"\n    (input)=\"handleChangeValue($event)\"\n    [id]=\"id+''\"\n    spellcheck=\"false\"\n  />\n</div>\n"
        },
        {
            "name": "TeamsSecondaryButtonComponent",
            "id": "component-TeamsSecondaryButtonComponent-c133f5e885b0a9194cf2599d76f22a6e",
            "file": "src/app/pages-components/Teams/Atoms/buttons/teams-secondary-button/teams-secondary-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-teams-secondary-button",
            "styleUrls": [
                "./teams-secondary-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams-secondary-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-teams-secondary-button',\n  templateUrl: './teams-secondary-button.component.html',\n  styleUrls: ['./teams-secondary-button.component.scss']\n})\nexport class TeamsSecondaryButtonComponent implements OnInit {\n\n  @Input() title: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".teams-secondary-button {\n  padding: 14px 26px;\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n  border-radius: 8px;\n  background-color: transparent;\n  color: var(--secondary-color);\n  text-transform: capitalize;\n  transition: 0.3s;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 100%;\n\n  &:hover {\n    border: 1px solid rgba(var(--secondary-color-code), 1);\n  }\n\n  &:active {\n    border: 1px solid rgba(var(--secondary-color-code), 0.3);\n  }\n}",
                    "styleUrl": "./teams-secondary-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button class=\"teams-secondary-button\" type=\"button\">\n  {{ title }}\n</button>\n"
        },
        {
            "name": "TeamsSelectInput",
            "id": "component-TeamsSelectInput-65d738763ae76204a740d145f795fda4",
            "file": "src/app/pages-components/Teams/Atoms/inputs/teams-select-input/teams-select-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "teams-select-input",
            "styleUrls": [
                "./teams-select-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams-select-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "initialValue",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "changeValueParentFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'teams-select-input',\n  templateUrl: './teams-select-input.component.html',\n  styleUrls: ['./teams-select-input.component.scss']\n})\n\nexport class TeamsSelectInput implements OnInit {\n  @Input() items: string[];\n  @Input() initialValue: string;\n  @Input() id: string;\n  \n  @Output() changeValueParentFunction?: EventEmitter<any> = new EventEmitter();\n\n  selectedItem: string;\n  \n  handleChange(value) {\n    this.changeValueParentFunction.emit(value);\n  }\n\n  ngOnInit(): void {\n    this.selectedItem = this.initialValue;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".teams-select {\n\n  &__input {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 100%;\n  }\n\n  ::ng-deep {\n    .ng-select {\n      position: relative;\n      box-sizing: border-box;\n      height: 48px; \n      width: 100%;\n    \n      background: rgba(var(--secondary-color-code), 0.05);\n      border-radius: 8px;\n      color: rgba(var(--secondary-color-code), 1);\n    \n      &:hover {\n        background: rgba(var(--secondary-color-code), 0.1);\n      }\n    \n      &:after {\n        content: url('../../../../../../assets/images/select.png');\n        position: absolute;\n        top: calc(50% - 11px);\n        right: 21px;\n      }\n    \n      &.ng-select-opened{\n        &:after {\n          content: url('../../../../../../assets/images/select.png');\n          position: absolute;\n          top: calc(50% - 11px);\n          right: 21px;\n          transform: rotate(180deg);\n        }\n      }\n    \n      &-container {\n        width: 100%;\n        height: 46px;\n        padding: 15px 21px 15px 16px;\n        margin-bottom: 4px;\n      }\n    }\n    \n    .ng-option {\n      background-color: var(--input-bg-color);\n      padding: 17px 21px 15px 16px;  \n    \n    \n      &:hover {\n        background-color: var(--light-btn-hover);\n        font-weight: bold;\n      }\n    }\n    \n    .ng-dropdown-panel {\n      position: absolute;\n      left: 0;\n      text-align: left;\n    }\n    \n    .scroll-host{\n      color: rgba(var(--secondary-color-code), 1);\n      position: absolute;\n      box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n      border-radius: 8px;\n    }\n    \n    .ng-clear-wrapper {\n      display: none;\n    }\n    \n    .ng-dropdown-panel-items.scroll-host {\n      width: 100%;\n    }\n  }\n}\n",
                    "styleUrl": "./teams-select-input.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"teams-select\">\n  <ng-select \n      [(ngModel)]=\"selectedItem\"\n      class=\"teams-select__input\" \n      [hideSelected]=\"true\"\n      [searchable]=\"false\"\n      [id]=\"id\"\n      (change)=\"handleChange($event)\"\n  >\n    <ng-option class=\"teams-select__option\" *ngFor=\"let item of items\" [value]=\"item\">\n      {{ item }}\n    </ng-option>\n  </ng-select>\n</div>\n\n  "
        },
        {
            "name": "TeamsSimpleButtonComponent",
            "id": "component-TeamsSimpleButtonComponent-911002920c61f8a160bef22fccccb6e3",
            "file": "src/app/pages-components/Teams/Atoms/buttons/teams-simple-button/teams-simple-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-teams-simple-button",
            "styleUrls": [
                "teams-simple-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams-simple-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "classes",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "srcPath",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-teams-simple-button',\n  templateUrl: './teams-simple-button.component.html',\n  styleUrls: ['teams-simple-button.component.scss'],\n})\n\nexport class TeamsSimpleButtonComponent {\n  @Input() title: string;\n  @Input() classes: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n  @Input() srcPath?: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-danger {\n  color: var(--danger-color);\n  background: inherit;\n  outline: none;\n  border: 1px solid rgba(var(--danger-color-code), 0.2);\n\n  height: 46px;\n  padding: 17px 5px;\n  width: 120px;\n  border-radius: 8px;\n  transition: var(--transition);\n\n  text-transform: uppercase;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 12px;\n\n  &:hover {\n    cursor: pointer;\n    background: rgba(var(--danger-color-code), 0.3);\n  }\n\n  &:active {\n    background: rgba(var(--danger-color-code), 0.5);\n  }\n}\n\n.btn-success {\n  position: relative;\n  z-index: 2;\n\n  text-transform: uppercase;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 12px;\n  text-transform: uppercase;\n  text-align: center;\n  color: var(--text-color);\n\n  background: transparent;\n  border: none;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 46px;\n  padding: 17px 5px;\n  width: 120px;\n  border-radius: 8px;\n  transition: var(--transition);\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 8px;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 8px;\n    opacity: 0;\n  }\n\n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n\n  &:active {\n    &::before {\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 0;\n    }\n  }\n}\n\n.btn-success-asimetric {\n  border-radius: 20px 5px;\n  height: 46px;\n  padding: 15px 36px 15px 39px;\n\n  font-family: 'Gramatica Bold', 'open-sans';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 100%;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  position: relative;\n  z-index: 2;\n\n  background: transparent;\n  border: none;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 20px 5px;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 20px 5px;\n    opacity: 0;\n  }\n  \n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n  \n  &:active {\n    &::before {\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 0;\n    }\n  }\n}\n",
                    "styleUrl": "teams-simple-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button\n  [ngClass]=\"classes\"\n>\n  {{ title }}\n  <img class=\"app-button-success__image\" *ngIf=\"srcPath\" [src]=\"srcPath\" [alt]=\"'title'\">\n</button>\n"
        },
        {
            "name": "TeamsSvgButtonComponent",
            "id": "component-TeamsSvgButtonComponent-62a525b258562fd4e39735b091b21f4c",
            "file": "src/app/pages-components/Teams/Atoms/buttons/teams-svg-button/teams-svg-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-teams-svg-button",
            "styleUrls": [
                "./teams-svg-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams-svg-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "bgColorHover",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "borderColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "isStroke",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "svgColor",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "svgPath",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "background",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "border",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "changeToActiveColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "changeToStaticColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-teams-svg-button',\n  templateUrl: './teams-svg-button.component.html',\n  styleUrls: ['./teams-svg-button.component.scss']\n})\n\nexport class TeamsSvgButtonComponent implements OnInit {\n  @Input() svgPath: string;\n  @Input() borderColor: string;\n  @Input() bgColor: string;\n  @Input() bgColorHover: string;\n  @Input() svgColor: string;\n  @Input() isStroke: boolean;\n\n  background = '';\n  border = '';\n\n  changeToActiveColor = () => {\n    this.border = this.borderColor !== '' ? this.borderColor : 'transparent';\n    this.background = this.bgColorHover;\n  }\n\n  changeToStaticColor = () => {\n    this.border = this.borderColor !== '' ? this.borderColor : 'transparent';\n    this.background = this.bgColor;\n  }\n\n  ngOnInit(): void {\n    this.background = this.bgColor;\n    this.border = this.borderColor !== '' ? this.borderColor : 'transparent';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".domains-svg-button {\n  width: 44px;\n  height: 44px;\n  border-radius: 8px;\n  transition: 0.3s;\n}",
                    "styleUrl": "./teams-svg-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button \n  class=\"domains-svg-button\"\n  [ngStyle]=\"{ 'background-color': background, 'border': '1px solid '+border }\"\n  (mousedown)=\"changeToStaticColor()\"\n  (mouseup)=\"changeToActiveColor()\"\n  (mouseenter)=\"changeToActiveColor()\"\n  (mouseleave)=\"changeToStaticColor()\"\n>\n  <svg-icon \n    [src]=\"svgPath\"\n    [svgStyle]=\"isStroke ? { 'stroke': svgColor } : { 'fill': svgColor }\"\n  >\n  </svg-icon>\n</button>\n\n"
        },
        {
            "name": "TeamsTipsComponent",
            "id": "component-TeamsTipsComponent-c8dfd25dfbf3ecfd2e8e6fcb3457394e",
            "file": "src/app/pages-components/Teams/Atoms/teams-tips/teams-tips.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-teams-tips",
            "styleUrls": [
                "./teams-tips.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams-tips.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "text",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-teams-tips',\n  templateUrl: './teams-tips.component.html',\n  styleUrls: ['./teams-tips.component.scss']\n})\n\nexport class TeamsTipsComponent implements OnInit {\n  @Input() title: string;\n  @Input() text: string;\n\n  ngOnInit(): void {\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-teams-tips {\n  width: 212px;\n  padding: 12px 16px;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  line-height: 100%;\n  \n  border-radius: 8px;\n  border: 1px solid var(--info-color);\n  color: var(--secondary-color);\n  background-color: var(--text-color);\n  box-shadow: 0px 8px 12px rgba(var(--dark-color-code), 0.2);\n\n  &__title {\n    margin-bottom: 4px;\n    font-weight: 600;\n    font-size: 16px;\n  }\n\n  &__text {\n    line-height: 21px;\n    opacity: 0.7;\n    font-weight: 300;\n    font-size: 14px;\n  }\n}",
                    "styleUrl": "./teams-tips.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-teams-tips\">\n  <p class=\"app-teams-tips__title\">{{ title }}</p>\n  <p class=\"app-teams-tips__text\">{{ text }}</p>\n</div>\n"
        },
        {
            "name": "TemplateItemComponent",
            "id": "component-TemplateItemComponent-11d6e2406069f77a4e8293490cecccd5",
            "file": "src/app/pages-components/Data_Request_Form/Atoms/template-item/template-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-template-item",
            "styleUrls": [
                "./template-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./template-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "value",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-template-item',\n  templateUrl: './template-item.component.html',\n  styleUrls: ['./template-item.component.scss']\n})\n\nexport class TemplateItemComponent implements OnInit {\n  @Input() title: string;\n  @Input() value: string;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-template-item {\n  color: var(--secondary-color);\n  line-height: 19px;\n  white-space: pre-wrap;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-size: 12px;\n\n  &__title {\n    font-weight: 300;\n  }\n\n  &__value {\n    font-weight: 600;\n  }\n}",
                    "styleUrl": "./template-item.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-template-item\">\n  <p class=\"app-template-item__title\">{{ title }}</p>\n  <p class=\"app-template-item__value\">##{{ value }}##</p>\n</div>\n"
        },
        {
            "name": "TemplatesListComponent",
            "id": "component-TemplatesListComponent-bdf735018a40ea61ad49cbbeb62c1d93",
            "file": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-templates-list",
            "styleUrls": [
                "./templates-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./templates-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "list",
                    "line": 15,
                    "type": "literal type[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "element",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'element'"
                        }
                    ]
                },
                {
                    "name": "gridColumnsNumber",
                    "defaultValue": "3",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "defineColumnsNumber",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 20
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\n\nconst MIN_GRID_COLUMN_WIDTH = 170;\nconst MAX_GRID_COLUMN_NUMBER = 3;\nconst GRID_GAP = 16;\nconst PADDING = 32;\n\n@Component({\n  selector: 'app-templates-list',\n  templateUrl: './templates-list.component.html',\n  styleUrls: ['./templates-list.component.scss']\n})\n\nexport class TemplatesListComponent implements OnInit, AfterViewInit {\n  @Input() list: { title: string, value: string }[];\n  gridColumnsNumber = 3;\n  @ViewChild('element') element: ElementRef;\n  \n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.defineColumnsNumber();\n  }\n\n  defineColumnsNumber() {\n    const columns = (this.element.nativeElement.clientWidth - PADDING * 2) / (MIN_GRID_COLUMN_WIDTH + GRID_GAP);\n    this.gridColumnsNumber = columns > MAX_GRID_COLUMN_NUMBER ? MAX_GRID_COLUMN_NUMBER : Math.floor(columns);\n  }\n\n  ngAfterViewInit() {\n    this.defineColumnsNumber();\n  }\n\n  ngOnInit(): void {\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-templates-list {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 16px;\n  background-color: rgba(var(--secondary-color-code), 0.05);\n  border-radius: 22px;\n  padding: 32px;\n  width: 100%;\n}",
                    "styleUrl": "./templates-list.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<ul \n  class=\"app-templates-list\" \n  #element\n  [ngStyle]=\"{ 'grid-template-columns': 'repeat(' + gridColumnsNumber + ', 1fr)' }\"\n>\n  <li class=\"app-templates-list__item\" *ngFor=\"let item of list\">\n    <app-template-item [title]=\"item.title\" [value]=\"item.value\"></app-template-item>\n  </li>\n</ul>\n"
        },
        {
            "name": "TextareaCopyToClipboardComponent",
            "id": "component-TextareaCopyToClipboardComponent-4012570f4127a53a1001f9e40ea275b9",
            "file": "src/app/atoms/inputs/textarea/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-textarea-copy-to-clipboard",
            "styleUrls": [
                "./textarea-copy-to-clipboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./textarea-copy-to-clipboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialValue",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "placeholderText",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isButtonVisible",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "textarea",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'textarea'"
                        }
                    ]
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "copyToClipboard",
                    "args": [
                        {
                            "name": "inputElement",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "inputElement",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                },
                {
                    "name": "setVisibleButton",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-textarea-copy-to-clipboard',\n  templateUrl: './textarea-copy-to-clipboard.component.html',\n  styleUrls: ['./textarea-copy-to-clipboard.component.scss']\n})\n\nexport class TextareaCopyToClipboardComponent implements OnInit {\n  @Input() placeholderText: string;\n  @Input() initialValue: string;\n\n  isButtonVisible: boolean = false;\n\n  @ViewChild('textarea') textarea: HTMLElement;\n\n  value = '';\n\n  setVisibleButton(value: boolean) {\n    this.isButtonVisible = value;\n  }\n\n  copyToClipboard (inputElement) {\n    inputElement.select();\n    document.execCommand('copy');\n    inputElement.setSelectionRange(0, 0);\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".text-area-copy-to-clipboard {\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  background-color: var(--text-color);\n  transition: 0.3s;\n  border-radius: 12px;\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n\n  &:hover {\n    background-color: rgba(var(--info-color-code), 0.2);\n  }\n\n  &__button {\n    height: 40px;\n    padding: 0 12px 0 16px;\n\n    position: absolute;\n    top: calc(50% - 20px);\n    left: calc(50% - 110px);\n\n    display: flex;\n    align-items: center;\n\n    background: rgba(var(--info-color-code), 0.3);\n    color: var(--info-color);\n    border-radius: 8px;\n    border: none;\n    transition: 0.3s;\n\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: normal;\n    font-size: 14px;\n\n    & > svg-icon {\n      margin-right: 13px;\n    }\n\n    &:hover {\n      background: rgba(var(--info-color-code), 0.4);\n    }\n\n    &:active {\n      background: rgba(var(--info-color-code), 0.3);\n    }\n  }\n\n  &__textarea {\n    box-sizing: border-box;\n    width: calc(100% + 16px);\n    padding: 12px 41px 12px 32px;\n\n    background-color: transparent;\n    border: none;\n    border-radius: 12px;\n\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 14px;\n    color: var(--secondary-color);\n    letter-spacing: 0.03em;\n    line-height: 150%;\n  }\n}",
                    "styleUrl": "./textarea-copy-to-clipboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 27
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div \n  class=\"text-area-copy-to-clipboard\"\n  (mouseenter)=\"setVisibleButton(true)\"\n  (mouseleave)=\"setVisibleButton(false)\"\n>\n  <textarea \n    #textarea\n    class=\"text-area-copy-to-clipboard__textarea\" \n    [value]=\"initialValue\"\n    rows=\"10\"\n    spellcheck=\"false\"\n  >\n  </textarea>\n  <button \n    *ngIf=\"isButtonVisible\"\n    class=\"text-area-copy-to-clipboard__button\" \n    type=\"button\" \n    (click)=\"copyToClipboard(textarea)\"\n  >\n    <svg-icon \n      [src]=\"'assets/images/copy.svg'\"\n      [svgStyle]=\"{ 'stroke': '#24B04B' }\"\n    >\n    </svg-icon>\n    Copy code to clipboard\n  </button>\n</div>\n"
        },
        {
            "name": "TextEditorComponent",
            "id": "component-TextEditorComponent-1c0bb10c2834091287b30a49e9761553",
            "file": "src/app/pages-components/Data_Request_Form/Atoms/text-editor/text-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text-editor",
            "styleUrls": [
                "./text-editor.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-editor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "htmlContent",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-text-editor',\n  templateUrl: './text-editor.component.html',\n  styleUrls: ['./text-editor.component.scss']\n})\n\nexport class TextEditorComponent implements OnInit {\n  @Input() htmlContent: string;\n\n  onChange(event) {\n    console.log('changed', event);\n  }\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-text-editor {\n  width: 100%;\n\n  ::ng-deep {\n    .angular-editor-button,\n    .ae-picker-label,\n    .ae-picker-item {\n      font-family: 'Montserrat', 'open-sans'!important;\n      font-weight: 500;\n      font-size: 16px;\n      line-height: 100%;\n    }\n    \n    #italic- {\n      font-family: 'Montserrat Italic', 'open-sans'!important;\n      font-weight: 700;\n    }\n    \n    #bold- {\n      font-weight: 900;\n    }\n    \n    #null {\n      display: none;\n    }\n    \n    .angular-editor-toolbar-set {\n      margin-bottom: 5px;\n    }\n    \n    .angular-editor-button {\n      width: 32px;\n      height: 28px;\n      border-radius: 3px;\n      color: var(--secondary-color);\n      border: none!important;\n      background: transparent!important;\n      font-weight: 700;\n      transition: 0.3s;\n      margin: 0 5px 5px 0;\n    \n      &:hover {\n        background: var(--asimetric-bg-color)!important;\n      }\n    \n      &.active {\n        background: var(--asimetric-bg-color)!important;\n      }\n    }\n    \n    /// change icons for buttons\n    angular-editor-toolbar > div > {\n      & div:nth-child(2) {\n        .angular-editor-button {\n          &:nth-child(1),\n          &:nth-child(2),\n          &:nth-child(3),\n          &:nth-child(4),\n          &:nth-child(5),\n          &:nth-child(6) {\n            & > i {\n              display: none;\n            }\n          }\n      \n          &:nth-child(1):before {\n            content: 'B';\n          }\n    \n          &:nth-child(2):before {\n            content: 'I';\n          }\n    \n          &:nth-child(3):before {\n            content: 'U';\n            text-decoration: underline;\n          }\n    \n          &:nth-child(4):before {\n            content: 'S';\n            text-decoration: line-through;\n          }\n    \n          &:nth-child(5) {\n            position: relative;\n            &:before {\n              content: 'x';\n            }\n            &::after {\n              content: '2';\n              font-size: 6px;\n              position: absolute;\n              top: 0;\n            }\n          }\n    \n          &:nth-child(6) {\n            position: relative;\n            &:before {\n              content: 'x';\n            }\n            &::after {\n              content: '2';\n              font-size: 6px;\n            }\n          }\n        }\n      }\n    \n      & div:nth-child(3) {\n        .angular-editor-button {\n          &:nth-child(1),\n          &:nth-child(2),\n          &:nth-child(3),\n          &:nth-child(4) {\n            & > i {\n              display: none;\n            }\n          }\n    \n          &:nth-child(1):before {\n            content: url('../../../../../assets/images/text-editior/align-left.svg');\n          }\n    \n          &:nth-child(2):before {\n            content: url('../../../../../assets/images/text-editior/align-center.svg');\n          }\n    \n          &:nth-child(3):before {\n            content: url('../../../../../assets/images/text-editior/align-right.svg');\n          }\n    \n          &:nth-child(4):before {\n            content: url('../../../../../assets/images/text-editior/align-stretch.svg');\n          }\n        }\n      }\n    \n      & div:nth-child(4) {\n        .angular-editor-button {\n          &:nth-child(1),\n          &:nth-child(2) {\n            position: relative;\n            & > i {\n              display: none;\n            }\n          }\n      \n          &:nth-child(1):before {\n            content: url('../../../../../assets/images/text-editior/arrow-left.svg');\n            position: absolute;\n            bottom: 0.5px;\n            left: calc(50% - 10px);\n          }\n    \n          &:nth-child(2):before {\n            content: url('../../../../../assets/images/text-editior/arrow-right.svg');\n            position: absolute;\n            bottom: 0.5px;\n            left: calc(50% - 10px);\n          }\n        }\n      }\n    \n      & div:nth-child(5) {\n        .angular-editor-button {\n          &:nth-child(1),\n          &:nth-child(2) {\n            position: relative;\n            & > i {\n              display: none;\n            }\n          }\n      \n          &:nth-child(1):before {\n            content: url('../../../../../assets/images/text-editior/list-dots.svg');\n            position: absolute;\n            bottom: 0.5px;\n            left: calc(50% - 10px);\n          }\n      \n          &:nth-child(2):before {\n            content: url('../../../../../assets/images/text-editior/list-numbers.svg');\n            position: absolute;\n            bottom: 0.5px;\n            left: calc(50% - 10px);\n          }\n        }\n      }\n    \n      & div:nth-child(9) {\n        .angular-editor-button {\n          &:nth-child(2),\n          &:nth-child(4) {\n            position: relative;\n            & > span {\n              display: none;\n            }\n          }\n      \n          &:nth-child(2)::before {\n            content: 'A';\n            text-decoration: underline;\n          } \n      \n          &:nth-child(4):before {\n            content: 'A';\n            position: absolute;\n            top: 0;\n            left: 0;\n    \n            background-color: var(--asimetric-bg-color);\n            line-height: 28px;\n            width: 32px;\n            height: 28px;\n            border-radius: 3px;\n          } \n        }\n      }\n    }\n    \n    angular-editor-toolbar > div > div:nth-child(7) > ae-select {\n      width: 170px!important;\n    }\n    \n    angular-editor-toolbar > div > div:nth-child(6) > ae-select {\n      width: 120px!important;\n    }\n    \n    .ae-picker {\n      display: block;\n      height: 100%;\n      \n      &-label {\n        border-radius: 3px;\n        background: var(--asimetric-bg-color)!important;\n        color: var(--secondary-color)!important;\n        font-size: 14px!important;\n      \n        &::before {\n          background: var(--asimetric-bg-color)!important;\n        }\n      }\n    \n      &-options {\n        background: var(--asimetric-bg-color)!important;\n        border-radius: 3px;\n        border: none!important;\n      }\n    \n      &-item {\n        color: var(--secondary-color)!important;\n        font-size: 14px!important;\n      \n        &:hover {\n          background-color: var(--light-highlited-gray-color)!important;\n        }\n      \n        &.selected.focused {\n          background-color: var(--light-gray-color)!important;\n          color: var(--secondary-color)!important;\n        }\n      }\n    }\n    \n    .angular-editor-toolbar {\n      display: flex;\n      flex-wrap: wrap;\n      background: var(--status-bar-bg-color);\n      border: 1px solid var(--light-gray2-color);\n      border-radius: 12px 12px 0px 0px;\n      padding: 13px 37px 7px 42px!important;\n    \n      &-set {\n        display: contents!important;\n      }\n    }\n    \n    angular-editor-toolbar > div > div:nth-child(1) > button:nth-child(1),\n    angular-editor-toolbar > div > div:nth-child(1) > button:nth-child(2),\n    angular-editor-toolbar > div > div:nth-child(1) {\n      margin-right: 0!important;\n      display: none;\n    }\n    \n    .angular-editor-textarea {\n      background: var(--text-color);\n      border: 1px solid var(--secondary-color);\n      border-top: none!important;\n      border-radius: 0px 0px 12px 12px;\n      padding: 17px!important;\n      margin-top: 0!important;\n      outline: none!important;\n      white-space: pre-wrap;\n    \n      font-family: 'Sofia pro', 'open-sans';\n      font-style: normal;\n      font-weight: 300;\n      font-size: 16px;\n      line-height: 28px;\n    }\n    \n    ae-select > span > button > svg > polygon {\n      stroke: var(--secondary-color)!important;\n    }\n    \n    .ng-pristine {\n      margin: 0 5px 5px 0;\n    }\n  }\n}\n\n@media screen and (max-width: 800px) {\n  .app-text-editor {\n    ::ng-deep {\n      .angular-editor-toolbar {\n        padding: 8px 15px 3px 15px!important;\n      }\n    }\n  }\n}",
                    "styleUrl": "./text-editor.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-text-editor\">\n  <angular-editor \n    [placeholder]=\"' '\"\n    [(ngModel)]=\"htmlContent\" \n    (ngModelChange)=\"onChange($event)\"\n  >\n  </angular-editor>\n</div>\n\n"
        },
        {
            "name": "TextWithAfterGradientLineComponent",
            "id": "component-TextWithAfterGradientLineComponent-f778796c31e5c4b37b2f304d6a24dfb4",
            "file": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text-with-after-gradient-line",
            "styleUrls": [
                "./text-with-after-gradient-line.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-with-after-gradient-line.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-text-with-after-gradient-line',\n  templateUrl: './text-with-after-gradient-line.component.html',\n  styleUrls: ['./text-with-after-gradient-line.component.scss']\n})\n\nexport class TextWithAfterGradientLineComponent {\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-text-with-after-gradient-line {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 90px;\n\n  &__title {\n    flex: 0 0 150px;  \n    font-family: 'Gramatica Bold', 'open-sans';\n    font-size: 14px;\n    line-height: 150%;\n    text-transform: uppercase;\n    background: var(--success-grad-light);\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n\n  &__line {\n    height: 1px;\n    width: 80%;\n    background: var(--success-grad-light);\n    opacity: 0.1;\n  }\n}\n",
                    "styleUrl": "./text-with-after-gradient-line.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-text-with-after-gradient-line\">\n  <h4 class=\"app-text-with-after-gradient-line__title\">{{ title }}</h4> \n  <div class=\"app-text-with-after-gradient-line__line\"></div>\n</div>\n"
        },
        {
            "name": "TextWithGradientBackComponent",
            "id": "component-TextWithGradientBackComponent-573d6d4c08bd5d9f6f87117c9919d70b",
            "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text-with-gradient-back",
            "styleUrls": [
                "./text-with-gradient-back.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-with-gradient-back.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "titles",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-text-with-gradient-back',\n  templateUrl: './text-with-gradient-back.component.html',\n  styleUrls: ['./text-with-gradient-back.component.scss']\n})\n\nexport class TextWithGradientBackComponent {\n  @Input() titles: string[];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".text-with-gradient-back {\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 12px;\n\n  &__wrapper {\n    background: var(--success-grad-light);\n    color: var(--text-color);\n    height: auto;\n    border-radius: 21px;\n    padding: 3.5px 8px 3.5px 8px;\n    text-align: center;\n    width: fit-content;\n  }\n}",
                    "styleUrl": "./text-with-gradient-back.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"text-with-gradient-back\">\n  <div class=\"text-with-gradient-back__wrapper\" *ngFor=\"let title of titles; let i = index\">\n    {{ title }}\n  </div>\n</div>\n\n"
        },
        {
            "name": "TransparentTableComponent",
            "id": "component-TransparentTableComponent-d7184caa2d68277d6a8396ae692967d2",
            "file": "src/app/atoms/tables/transparent-table/transparent-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-transparent-table",
            "styleUrls": [
                "./transparent-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./transparent-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 11,
                    "type": "any[]"
                },
                {
                    "name": "heads",
                    "line": 10,
                    "type": "string[]"
                },
                {
                    "name": "mainColumn",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeColumn",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "headsListWithoutMain",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "checkType",
                    "args": [
                        {
                            "name": "value",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 35,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46
                },
                {
                    "name": "showNext",
                    "args": [
                        {
                            "name": "direction",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "direction",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 19
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, HostListener, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-transparent-table',\n  templateUrl: './transparent-table.component.html',\n  styleUrls: ['./transparent-table.component.scss']\n})\n\nexport class TransparentTableComponent implements OnInit {\n  @Input() heads: string[];\n  @Input() data: any[];\n  @Input() mainColumn: string;\n  \n  isMobile: boolean;\n  activeColumn: string;\n  headsListWithoutMain: string[];\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = (event.target.innerWidth < 800) ? true : false;\n  }\n\n  showNext(direction: string) {\n    const currentIndex = this.headsListWithoutMain.findIndex(head => head === this.activeColumn);\n    let nextIndex;\n    \n    if (direction =='forward') {\n      nextIndex = (currentIndex + 1 > this.headsListWithoutMain.length - 1) ? 0 : currentIndex + 1; \n    } else if (direction =='back') {\n      nextIndex = (currentIndex - 1 < 0) ? this.headsListWithoutMain.length - 1 : currentIndex - 1; \n    }\n    this.activeColumn = this.headsListWithoutMain[nextIndex]\n  }\n\n  checkType (value: any) {\n    switch (typeof value) {\n      case 'boolean':\n        return 'boolean';\n      case 'string':\n        return 'string';\n      case 'object': \n        return value.type\n    }\n  }\n\n  ngOnInit(): void {\n    this.headsListWithoutMain = this.heads.filter(head => head !== this.mainColumn);\n    this.activeColumn = this.headsListWithoutMain[0];\n    this.isMobile = (window.innerWidth < 800) ? true : false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-transparent-table {\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  \n  border-radius: 12px;\n  color: var(--secondary-color);\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n  border-spacing: 0;\n  transition: margin 3s;\n\n  font-family: 'Sofia pro', 'open-sans';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n\n  &__head {\n    position: relative;\n    padding: 13px 16px;\n    height: 38px;\n    text-transform: capitalize;\n    color: rgba(var(--secondary-color-code), 0.75);\n    background-color: rgba(var(--secondary-color-code), 0.2);\n  }\n\n  &__head-item {\n    margin-left: 24px;\n  }\n\n  &__row {\n    margin-bottom: 20px;\n    padding: 13px 16px;\n\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-weight: 300;\n    font-size: 12px;\n  }\n \n  &__main-column {\n    width: 30%;\n  }\n}\n\ntd, th {\n  padding: 10px;\n  text-align: left;;\n}\n\n.text-with-gradient-back__wrapper {\n  margin: 0 5px 5px 0;\n}\n\n.app-transparent-table__button {\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background-color: rgba(var(--secondary-color-code), 1);\n  border: none;\n  position: absolute;\n  top: 7px;\n  z-index: 2;\n}\n\n.prev {\n  left: 25%;\n  transform: rotate(180deg);\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0px;\n    left: 1px;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    background: center no-repeat url('../../../../assets/images/next.svg');\n  }\n}\n\n.next {\n  right: 40px;\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 1px;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    background: center no-repeat url('../../../../assets/images/next.svg');\n  }\n}",
                    "styleUrl": "./transparent-table.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- !!!!!!!!!mobile version of table!!!!!!!!!!!!  -->\n<table \n  id=\"table\" \n  *ngIf=\"isMobile\" \n  class=\"app-transparent-table\"\n>\n  <tr class=\"app-transparent-table__head\">\n   <th class=\"app-transparent-table__head-item app-transparent-table__main-column\">\n     {{ mainColumn }}\n   </th>\n   <th  class=\"app-transparent-table__head-item\">\n     {{ activeColumn }}\n   </th>\n  </tr>\n  <tr \n    class=\"app-transparent-table__row\" \n    *ngFor=\"let item of data; let i = index\"\n  >\n    <td>\n      <p *ngIf=\"checkType(item[mainColumn])==='string'\">\n        {{ item[mainColumn] }}\n      </p>\n      <app-text-with-gradient-back \n        [titles]=\"item[mainColumn].data\"\n        *ngIf=\"checkType(item[mainColumn])==='gradientText'\"\n      >\n      </app-text-with-gradient-back>\n      <img [src]=\"item[mainColumn].path\" *ngIf=\"checkType(item[mainColumn])==='image'\">\n      <span *ngIf=\"checkType(item[mainColumn])==='boolean'\">\n        <app-round-icon\n          [classes]=\"item[mainColumn] ? 'app-round-icon app-round-icon__positive' : 'app-round-icon app-round-icon__negative'\"\n          [ngStyle]=\"{'display': 'flex', 'justify-content': 'center'}\"\n        ></app-round-icon>\n      </span>\n    </td>\n    <td>\n      <p *ngIf=\"checkType(item[activeColumn])==='string'\">\n        {{ item[activeColumn] }}\n      </p>\n      <img [src]=\"item[activeColumn].path\" *ngIf=\"checkType(item[activeColumn])==='image'\" >\n      <app-text-with-gradient-back \n        [titles]=\"item[activeColumn].data\"\n        *ngIf=\"checkType(item[activeColumn])==='gradientText'\"\n      >\n      </app-text-with-gradient-back>\n      <span *ngIf=\"checkType(item[activeColumn])==='boolean'\">\n        <app-round-icon\n          [classes]=\"item[activeColumn] ? 'app-round-icon app-round-icon__positive' : 'app-round-icon app-round-icon__negative'\"\n        ></app-round-icon>\n      </span>\n    </td>\n  </tr>\n  <button class=\"prev app-transparent-table__button\" type=\"button\" (click)=\"showNext('back')\"></button>\n  <button class=\"next app-transparent-table__button\"type=\"button\" (click)=\"showNext('forward')\"></button>\n</table> \n\n\n<!-- !!!!!!!!!desktop version of table!!!!!!!!!!!!  -->\n<table id=\"table\" class=\"app-transparent-table\"  *ngIf=\"!isMobile\">\n  <tr class=\"app-transparent-table__head\">\n   <th \n      class=\"app-transparent-table__head-item\"\n      *ngFor=\"let head of heads; let i = index\"\n    >\n     {{ head }}\n   </th>\n  </tr>\n  <tr class=\"app-transparent-table__row\" *ngFor=\"let item of data; let i = index\">\n    <td *ngFor=\"let head of heads; let j = index\">\n      <p *ngIf=\"checkType(item[head])==='string'\">\n        {{ item[head] }}\n      </p>\n      <app-text-with-gradient-back \n        [titles]=\"item[head].data\"\n        *ngIf=\"checkType(item[head])==='gradientText'\"\n      >\n      </app-text-with-gradient-back>\n      <img [src]=\"item[head].path\" *ngIf=\"checkType(item[head])==='image'\">\n      <span *ngIf=\"checkType(item[head])=='boolean'\">\n        <app-round-icon\n          [classes]=\"item[head] ? 'app-round-icon app-round-icon__positive' : 'app-round-icon app-round-icon__negative'\"\n          [ngStyle]=\"{'display': 'flex', 'justify-content': 'center'}\"\n        ></app-round-icon>\n      </span>\n    </td>\n  </tr>\n</table>"
        },
        {
            "name": "WhiteRoundedLayoutComponent",
            "id": "component-WhiteRoundedLayoutComponent-1c45bd667f15f7722d47edc1aa332be8",
            "file": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-white-rounded-layout",
            "styleUrls": [
                "./white-rounded-layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./white-rounded-layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "titles",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-white-rounded-layout',\n  templateUrl: './white-rounded-layout.component.html',\n  styleUrls: ['./white-rounded-layout.component.scss']\n})\n\nexport class WhiteRoundedLayoutComponent {\n  @Input() titles: string[];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-white-rounded-layout {\n  width: 100%;\n  z-index: 2;\n\n  &__content {\n    width: 100%;\n    position: relative;\n    top: -2px;\n    padding: 32px 30px;\n    border-radius: 0px 20px 20px 20px;\n    background-color: var(--text-color);\n  }\n}",
                    "styleUrl": "./white-rounded-layout.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-white-rounded-layout\">\n  <app-tab-menu\n    [titles]=\"titles\"\n  >\n  </app-tab-menu>\n  <div class=\"app-white-rounded-layout__content\">\n    <ng-content></ng-content>\n  </div>\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AddService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddComponent"
                        },
                        {
                            "name": "AddDirective"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BillingCardComponent"
                        },
                        {
                            "name": "BillingDangerButtonComponent"
                        },
                        {
                            "name": "BillingInputComponent"
                        },
                        {
                            "name": "BillingInvoicesComponent"
                        },
                        {
                            "name": "BillingModalComponent"
                        },
                        {
                            "name": "BillingPaymentComponent"
                        },
                        {
                            "name": "BillingPaymentTableComponent"
                        },
                        {
                            "name": "BillingPlanComponent"
                        },
                        {
                            "name": "BillingPrimaryAsymmetricalButtonComponent"
                        },
                        {
                            "name": "BillingPrimaryButtonComponent"
                        },
                        {
                            "name": "BillingSecondaryButtonComponent"
                        },
                        {
                            "name": "BillingSelectComponent"
                        },
                        {
                            "name": "BillingTitleComponent"
                        },
                        {
                            "name": "BillingWarningComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CardReportStatusComponent"
                        },
                        {
                            "name": "CardReportsComponent"
                        },
                        {
                            "name": "CardRowComponent"
                        },
                        {
                            "name": "CardWithCenterTextComponent"
                        },
                        {
                            "name": "CardWithColumnsTextComponent"
                        },
                        {
                            "name": "CardWithDonutChartComponent"
                        },
                        {
                            "name": "CheckboxCircleInputComponent"
                        },
                        {
                            "name": "CheckboxInputDarkComponent"
                        },
                        {
                            "name": "CheckboxInputSimpleComponent"
                        },
                        {
                            "name": "CheckboxInputSwitchComponent"
                        },
                        {
                            "name": "ColumnChartComponent"
                        },
                        {
                            "name": "CompositeMenuComponent"
                        },
                        {
                            "name": "CookieColorPickerComponent"
                        },
                        {
                            "name": "CookieDesignCardComponent"
                        },
                        {
                            "name": "CookieDesignCardRowComponent"
                        },
                        {
                            "name": "CookieEditorComponent"
                        },
                        {
                            "name": "CookieLayoutCardComponent"
                        },
                        {
                            "name": "CookieLayoutCardRowComponent"
                        },
                        {
                            "name": "CookiePrimaryButtonComponent"
                        },
                        {
                            "name": "CookieReloadButtonComponent"
                        },
                        {
                            "name": "CookieSecondaryButtonComponent"
                        },
                        {
                            "name": "CookieSelectInputComponent"
                        },
                        {
                            "name": "CookieTitleComponent"
                        },
                        {
                            "name": "CookieUploadComponent"
                        },
                        {
                            "name": "DateMenuComponent"
                        },
                        {
                            "name": "DomainsApproveModalComponent"
                        },
                        {
                            "name": "DomainsCheckboxMutableGradientComponent"
                        },
                        {
                            "name": "DomainsMutableDangerButtonComponent"
                        },
                        {
                            "name": "DomainsMutableGradientIconButtonComponent"
                        },
                        {
                            "name": "DomainsMutableLightButtonComponent"
                        },
                        {
                            "name": "DomainsMutablePrimaryButtonComponent"
                        },
                        {
                            "name": "DomainsOnboardingCardComponent"
                        },
                        {
                            "name": "DomainsOnboardingListComponent"
                        },
                        {
                            "name": "DomainsSearchInputComponent"
                        },
                        {
                            "name": "DomainsSimpleButtonComponent"
                        },
                        {
                            "name": "DomainsSvgButtonComponent"
                        },
                        {
                            "name": "FormScreenFifthComponent"
                        },
                        {
                            "name": "FormScreenFirstComponent"
                        },
                        {
                            "name": "FormScreenFourthComponent"
                        },
                        {
                            "name": "FormScreenSecondComponent"
                        },
                        {
                            "name": "FormScreenThirdComponent"
                        },
                        {
                            "name": "GradientBorderContainerComponent"
                        },
                        {
                            "name": "GradientTextComponent"
                        },
                        {
                            "name": "IconContainerComponent"
                        },
                        {
                            "name": "IconLinksComponent"
                        },
                        {
                            "name": "LightAssimetricButtonComponent"
                        },
                        {
                            "name": "LinearChartComponent"
                        },
                        {
                            "name": "MainNavigationMenuComponent"
                        },
                        {
                            "name": "MapChartComponent"
                        },
                        {
                            "name": "MobileButtonComponent"
                        },
                        {
                            "name": "MobileMainNavigationMenuComponent"
                        },
                        {
                            "name": "PlanBuilderCardComponent"
                        },
                        {
                            "name": "PlanBuilderCardsListComponent"
                        },
                        {
                            "name": "PlanBuilderCheckboxComponent"
                        },
                        {
                            "name": "PlanBuilderContactUsComponent"
                        },
                        {
                            "name": "PlanBuilderDomainsSelectComponent"
                        },
                        {
                            "name": "PlanBuilderPlanComponent"
                        },
                        {
                            "name": "PlanBuilderPrimaryButtonComponent"
                        },
                        {
                            "name": "PlanBuilderRangeComponent"
                        },
                        {
                            "name": "PlanBuilderSecondaryButtonComponent"
                        },
                        {
                            "name": "PlanBuilderTogglerComponent"
                        },
                        {
                            "name": "PoliciesButtonComponent"
                        },
                        {
                            "name": "PoliciesCheckboxInputDarkComponent"
                        },
                        {
                            "name": "PoliciesColorPickerComponent"
                        },
                        {
                            "name": "PoliciesCustomizedElementComponent"
                        },
                        {
                            "name": "PoliciesDarkAddButtonComponent"
                        },
                        {
                            "name": "PoliciesDynamicListComponent"
                        },
                        {
                            "name": "PoliciesDynamicSectionsListComponent"
                        },
                        {
                            "name": "PoliciesDynamicTableComponent"
                        },
                        {
                            "name": "PoliciesDynamicTextComponent"
                        },
                        {
                            "name": "PoliciesGradientBorderContainerComponent"
                        },
                        {
                            "name": "PoliciesPreviewContainerComponent"
                        },
                        {
                            "name": "PoliciesSelectInputWithInitialValueComponent"
                        },
                        {
                            "name": "PoliciesSmallLightAddButtonComponent"
                        },
                        {
                            "name": "PoliciesTextareaCopyToClipboardComponent"
                        },
                        {
                            "name": "PreviewContainerComponent"
                        },
                        {
                            "name": "RegistrationFormComponent"
                        },
                        {
                            "name": "ReportModalComponent"
                        },
                        {
                            "name": "ReportStatusComponent"
                        },
                        {
                            "name": "ReportTableComponent"
                        },
                        {
                            "name": "ReportsButtonComponent"
                        },
                        {
                            "name": "ReportsCheckboxInput"
                        },
                        {
                            "name": "ReportsDateMenuComponent"
                        },
                        {
                            "name": "ReportsIconLinkComponent"
                        },
                        {
                            "name": "ReportsInfoButtonComponent"
                        },
                        {
                            "name": "ReportsLightButtonComponent"
                        },
                        {
                            "name": "ReportsMenuComponent"
                        },
                        {
                            "name": "ReportsMobileMenuComponent"
                        },
                        {
                            "name": "ReportsPrimaryButtonComponent"
                        },
                        {
                            "name": "ReportsSearchInputComponent"
                        },
                        {
                            "name": "ReportsSecondaryButtonComponent"
                        },
                        {
                            "name": "ReportsSelectInput"
                        },
                        {
                            "name": "ReportsSelectInputSearchComponent"
                        },
                        {
                            "name": "ReportsSelectWithInitialValueComponent"
                        },
                        {
                            "name": "ReportsTextLinkComponent"
                        },
                        {
                            "name": "RequestFormComponent"
                        },
                        {
                            "name": "RequestInputBlockComponent"
                        },
                        {
                            "name": "RequestPrimaryButtonComponent"
                        },
                        {
                            "name": "RequestSecondaryButtonComponent"
                        },
                        {
                            "name": "RequestSelectInputComponent"
                        },
                        {
                            "name": "RequestTextAreaComponent"
                        },
                        {
                            "name": "RequestTextInputComponent"
                        },
                        {
                            "name": "RollUpComponent"
                        },
                        {
                            "name": "RoundChartComponent"
                        },
                        {
                            "name": "RoundIconComponent"
                        },
                        {
                            "name": "ScanAnimationComponent"
                        },
                        {
                            "name": "ScanReportComponent"
                        },
                        {
                            "name": "ScanScreensComponent"
                        },
                        {
                            "name": "SecondaryBorderButtonComponent"
                        },
                        {
                            "name": "SelectInputSearchComponent"
                        },
                        {
                            "name": "SelectInputSimpleComponent"
                        },
                        {
                            "name": "SelectedItemComponent"
                        },
                        {
                            "name": "SemicircleChartCardComponent"
                        },
                        {
                            "name": "SemicircleChartComponent"
                        },
                        {
                            "name": "SideMenuComponent"
                        },
                        {
                            "name": "SimpleCounterComponent"
                        },
                        {
                            "name": "SimplePolicyGeneratorButtonComponent"
                        },
                        {
                            "name": "SimpleTextareaComponent"
                        },
                        {
                            "name": "StatusBarComponent"
                        },
                        {
                            "name": "StatusStepsDynamicComponent"
                        },
                        {
                            "name": "StepsComponent"
                        },
                        {
                            "name": "TabMenuComponent"
                        },
                        {
                            "name": "TeamsCardComponent"
                        },
                        {
                            "name": "TeamsCardsListComponent"
                        },
                        {
                            "name": "TeamsCheckboxMutableGradientComponent"
                        },
                        {
                            "name": "TeamsInputComponent"
                        },
                        {
                            "name": "TeamsModalComponent"
                        },
                        {
                            "name": "TeamsMutableDangerButtonComponent"
                        },
                        {
                            "name": "TeamsMutableGradientIconButtonComponent"
                        },
                        {
                            "name": "TeamsMutablePrimaryButtonComponent"
                        },
                        {
                            "name": "TeamsSearchInputComponent"
                        },
                        {
                            "name": "TeamsSecondaryButtonComponent"
                        },
                        {
                            "name": "TeamsSelectInput"
                        },
                        {
                            "name": "TeamsSimpleButtonComponent"
                        },
                        {
                            "name": "TeamsTipsComponent"
                        },
                        {
                            "name": "TemplateItemComponent"
                        },
                        {
                            "name": "TemplatesListComponent"
                        },
                        {
                            "name": "TextEditorComponent"
                        },
                        {
                            "name": "TextWithAfterGradientLineComponent"
                        },
                        {
                            "name": "TextWithGradientBackComponent"
                        },
                        {
                            "name": "TextareaCopyToClipboardComponent"
                        },
                        {
                            "name": "TransparentTableComponent"
                        },
                        {
                            "name": "WhiteRoundedLayoutComponent"
                        },
                        {
                            "name": "formInputComponent"
                        },
                        {
                            "name": "gradientButtonComponent"
                        },
                        {
                            "name": "infoButtonComponent"
                        },
                        {
                            "name": "largeButtonComponent"
                        },
                        {
                            "name": "lightButtonComponent"
                        },
                        {
                            "name": "navLinkComponent"
                        },
                        {
                            "name": "primaryButtonComponent"
                        },
                        {
                            "name": "secondaryButtonComponent"
                        },
                        {
                            "name": "simpleButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Accept",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ACCEPT_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.ts",
                "type": "string",
                "defaultValue": "'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)'"
            },
            {
                "name": "ACTIVE_CLASS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.ts",
                "type": "string",
                "defaultValue": "'app-checkbox-input-gradient__container active'"
            },
            {
                "name": "ACTIVE_CLASS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.ts",
                "type": "string",
                "defaultValue": "'app-checkbox-input-gradient__container active'"
            },
            {
                "name": "ACTIVE_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.ts",
                "type": "string",
                "defaultValue": "'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)'"
            },
            {
                "name": "ACTIVE_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.ts",
                "type": "string",
                "defaultValue": "'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)'"
            },
            {
                "name": "ACTIVE_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                "type": "string",
                "defaultValue": "'rgba(1, 25, 73, 1)'"
            },
            {
                "name": "ACTIVE_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.ts",
                "type": "string",
                "defaultValue": "'#24B04B'"
            },
            {
                "name": "Add",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Add",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "",
                "defaultValue": "Template2.bind({})"
            },
            {
                "name": "Add",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                "type": "",
                "defaultValue": "Template2.bind({})"
            },
            {
                "name": "AfricaCodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                "type": "[]",
                "defaultValue": "[\"AO\", \"BF\", \"BI\", \"BJ\", \"BW\", \"CD\", \"CF\", \"CG\", \"CI\", \"CM\", \"CV\", \"DJ\", \"DZ\", \"EG\", \"EH\", \n\"ER\", \"ET\", \"GA\", \"GH\", \"GM\", \"GN\", \"GQ\", \"GW\", \"KE\", \"KM\", \"LR\", \"LS\", \"LY\", \"MA\", \"MG\", \"ML\", \"MR\", \"MU\", \n\"MW\", \"MZ\", \"NA\", \"NE\", \"NG\", \"RE\", \"RW\", \"SC\", \"SD\", \"SH\", \"SL\", \"SN\", \"SO\", \"SS\", \"ST\", \"SZ\", \"TD\", \"TG\", \n\"TN\", \"TZ\", \"UG\", \"YT\", \"ZA\", \"ZM\", \"ZW\"]"
            },
            {
                "name": "Approve",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-modal/billing-modal.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Approve",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AsiaCodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                "type": "[]",
                "defaultValue": "[\"AE\", \"AF\", \"BD\", \"BH\", \"BN\", \"BT\", \"CC\", \"CN\", \"CX\", \"HK\", \"ID\", \"IL\", \"IN\", \"IO\", \"IQ\", \n\"IR\", \"JO\", \"JP\", \"KG\", \"KH\", \"KP\", \"KR\", \"KT\", \"KW\", \"KZ\", \"LA\", \"LB\", \"LK\", \"MM\", \"MN\", \"MO\", \"MV\", \"MY\", \"NP\", \n\"OM\", \"PH\", \"PK\", \"PS\", \"RU\", \"QA\", \"SA\", \"SG\", \"SY\", \"TH\", \"TJ\", \"TL\", \"TM\", \"TW\", \"UZ\", \"VN\", \"YE\"]"
            },
            {
                "name": "Asymmetrical",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-asymmetrical-button/billing-primary-asymmetrical-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AustraliaCodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                "type": "[]",
                "defaultValue": "[\"AS\", \"AU\", \"CK\", \"FJ\", \"FM\", \"GU\", \"KI\", \"MH\", \"MP\", \"NC\", \"NF\", \"NR\", \"NU\", \"NZ\", \n\"PF\", \"PG\", \"PN\", \"PW\", \"SB\", \"TK\", \"TO\", \"TV\", \"UM\", \"VU\", \"WF\", \"WS\"]"
            },
            {
                "name": "AXIS_LABEL_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.ts",
                "type": "string",
                "defaultValue": "'rgba(1, 25, 73, 0.3)'"
            },
            {
                "name": "Back",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Back",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Back",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-light-button/reports-light-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BIG_MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                "type": "number",
                "defaultValue": "760"
            },
            {
                "name": "BIG_MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                "type": "number",
                "defaultValue": "760"
            },
            {
                "name": "BigDarkSelected",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BigDarkStatic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BigLight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BORDER_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.ts",
                "type": "string",
                "defaultValue": "'rgba(1, 25, 73, 0.1)'"
            },
            {
                "name": "Bottom",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BusinessOneDomain",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BusinessSeveralDomains",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Card",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-card/billing-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Card",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Card",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Card",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CARD_MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.ts",
                "type": "number",
                "defaultValue": "415"
            },
            {
                "name": "CARD_WIDTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                "type": "number",
                "defaultValue": "163"
            },
            {
                "name": "CardList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CardReports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CardsList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CardWithCenterText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CardWithColumns",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Center",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Checkbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Checkbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Checkbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-checkbox-input/reports-checkbox-input.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CheckboxOnActiveCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CheckboxOnInactiveCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Choose",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ChooseLanguage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ChoosePosition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ChooseShape",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-select-input/cookie-select-input.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ChooseShape",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Circle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ColorPicker",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ColorPicker",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/color-picker/color-picker.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Column",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CompositeMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ContactUs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-contact-us/plan-builder-contact-us.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CONTAINER_BOTTOM_PADDING",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.ts",
                "type": "number",
                "defaultValue": "32"
            },
            {
                "name": "CONTAINER_LEFT_PADDING",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.ts",
                "type": "number",
                "defaultValue": "47"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "CopyToClipboard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/textarea/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CopyToClipboardTextarea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "COUNTRY_HOVER_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts",
                "type": "string",
                "defaultValue": "\"rgb(22, 97, 60)\""
            },
            {
                "name": "CVV",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-input/billing-input.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-danger-button/billing-danger-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerBig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerBig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerBig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerShort",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-danger-button/billing-danger-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DarkSelected",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DarkStatic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Date",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Date",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/menu/reports-date-menu/reports-date-menu.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Decline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DECLINE_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.ts",
                "type": "string",
                "defaultValue": "'#EA2D2D'"
            },
            {
                "name": "Delete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/domains-svg-button/domains-svg-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Delete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Delete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-svg-button/teams-svg-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Delete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Design",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DESKTOP_WIDTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.ts",
                "type": "number",
                "defaultValue": "376"
            },
            {
                "name": "DonutChartCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DynamicSection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/customized-element.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Edit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Editor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-modal/billing-modal.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EuropeCodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                "type": "[]",
                "defaultValue": "[\"AD\", \"AL\", \"AM\", \"AT\", \"AX\", \"AZ\", \"BA\", \"BE\", \"BG\", \"BY\", \"CH\", \"CY\", \"CZ\", \"DE\", \n\"DK\", \"EE\", \"ES\", \"FI\", \"FO\", \"FR\", \"GB\", \"GB-CHA\", \"GE\", \"GG\", \"GI\", \"GR\", \"HR\", \"HU\", \"IE\", \"IM\", \"IS\", \n\"IT\", \"JE\", \"LI\", \"LT\", \"LU\", \"LV\", \"MC\", \"MD\", \"ME\", \"MK\", \"MT\", \"NL\", \"NO\", \"PL\", \"PT\", \"RO\", \"RS\",\n\"SE\", \"SI\", \"SJ\", \"SK\", \"SM\", \"TR\", \"UA\", \"VA\", \"XK\"]"
            },
            {
                "name": "Fifth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Filter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Filter2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "First",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "First",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "First",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "First",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FivePoints",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Form",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "formatDate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/report-table/helpers.ts",
                "type": "",
                "defaultValue": "(date: number) => {\n  const monthNames = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ];\n  const dateObject = new Date(date);\n\n  const getDateProperty = (dateFunction) => {\n    const property = `${dateObject[dateFunction]()}`.length < 2 ? `0${dateObject[dateFunction]()}` : `${dateObject[dateFunction]()}`;\n    return property;\n  }\n\n  let hours: string | number = +getDateProperty('getHours');\n  hours = hours % 12;\n  hours = hours ? hours : 12;\n  hours = hours < 10 ? `0${hours}` : `${hours}`\n  const ampm = +hours >= 12 ? 'PM' : 'AM';\n  const minutes = getDateProperty('getMinutes');\n  const seconds = getDateProperty('getSeconds');\n  const day = getDateProperty('getDate');\n  const month = monthNames[dateObject.getMonth()];\n  const year = getDateProperty('getFullYear');\n  const dateString = `${month} ${day}, ${year} \\n ${hours}:${minutes}:${seconds} ${ampm}`;\n  \n  return dateString;\n}"
            },
            {
                "name": "FourPoints",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Fourth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Freemium",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "getEditedDataByType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/helpers.ts",
                "type": "",
                "defaultValue": "(type: string, props: any) => {\n  let editedData;\n    if (type === 'table') {\n      editedData = { heads: props.heads, tableData: props.tableData }\n    } else if (type === 'list') {\n      editedData = { listTitle: props.listTitle, titles: props.titles }\n    } else if (type === 'text') {\n      editedData = { title: props.title }\n    }\n  return editedData\n}"
            },
            {
                "name": "getInitialDataByType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/helpers.ts",
                "type": "",
                "defaultValue": "(type: string) => {\n  let initialData;\n    if (type === 'table') {\n      initialData = { heads: ['text 1'], tableData: [{ 'text 1' : '1.1. Text', }, { 'text 1' : '1.1. Text', }] }\n    } else if (type === 'list') {\n      initialData = { listTitle: 'Put list title', titles: ['Type text here'] }\n    } else if (type === 'text') {\n      initialData = { title: 'Your new paragraph' }\n    }\n  return initialData\n}"
            },
            {
                "name": "Gradient",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Green",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Green",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Green",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Green",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "GRID_GAP",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.ts",
                "type": "number",
                "defaultValue": "16"
            },
            {
                "name": "Highlited",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Highlited",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HIGHLITED_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                "type": "string",
                "defaultValue": "'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)'"
            },
            {
                "name": "HIGHLITED_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                "type": "string",
                "defaultValue": "'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)'"
            },
            {
                "name": "HOVER_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.ts",
                "type": "string",
                "defaultValue": "'url(#paint0_linear)'"
            },
            {
                "name": "HOVER_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.ts",
                "type": "string",
                "defaultValue": "'red'"
            },
            {
                "name": "HOVER_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.ts",
                "type": "string",
                "defaultValue": "'url(#paint0_linear)'"
            },
            {
                "name": "HOVER_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.ts",
                "type": "string",
                "defaultValue": "'red'"
            },
            {
                "name": "HOVER_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.ts",
                "type": "string",
                "defaultValue": "'rgba(1, 25, 73, 1)'"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "INACTIVE_CLASS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.ts",
                "type": "string",
                "defaultValue": "'app-checkbox-input-gradient__container'"
            },
            {
                "name": "INACTIVE_CLASS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.ts",
                "type": "string",
                "defaultValue": "'app-checkbox-input-gradient__container'"
            },
            {
                "name": "INACTIVE_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.ts",
                "type": "string",
                "defaultValue": "'#EA2D2D'"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-info-button/reports-info-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "INITIAL_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.ts",
                "type": "string",
                "defaultValue": "'red'"
            },
            {
                "name": "Invoices",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Layout",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-layout-card-row/cookie-layout-card-row.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Left",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LeftCorner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LEGEND_LABEL_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.ts",
                "type": "string",
                "defaultValue": "'rgba(1, 25, 73, 0.75)'"
            },
            {
                "name": "Linear",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "List",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-list/dynamic-list.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Main",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Map",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MAP_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts",
                "type": "string",
                "defaultValue": "\"rgba(1, 25, 73, 0.2)\""
            },
            {
                "name": "MARGIN_RIGHT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                "type": "number",
                "defaultValue": "16"
            },
            {
                "name": "MARKER_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.ts",
                "type": "string",
                "defaultValue": "'rgb(1, 25, 73)'"
            },
            {
                "name": "MAX_GRID_COLUMN_NUMBER",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.ts",
                "type": "number",
                "defaultValue": "3"
            },
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/menu/reports-menu/reports-menu.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MIN_GRID_COLUMN_WIDTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.ts",
                "type": "number",
                "defaultValue": "170"
            },
            {
                "name": "Mobile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Mobile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/menu/reports-mobile-menu/reports-mobile-menu.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.ts",
                "type": "number",
                "defaultValue": "680"
            },
            {
                "name": "MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.ts",
                "type": "number",
                "defaultValue": "800"
            },
            {
                "name": "MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.ts",
                "type": "number",
                "defaultValue": "680"
            },
            {
                "name": "MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.ts",
                "type": "number",
                "defaultValue": "680"
            },
            {
                "name": "MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.ts",
                "type": "number",
                "defaultValue": "680"
            },
            {
                "name": "MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.ts",
                "type": "number",
                "defaultValue": "600"
            },
            {
                "name": "MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.ts",
                "type": "number",
                "defaultValue": "574"
            },
            {
                "name": "MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.ts",
                "type": "number",
                "defaultValue": "798"
            },
            {
                "name": "MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.ts",
                "type": "number",
                "defaultValue": "725"
            },
            {
                "name": "MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.ts",
                "type": "number",
                "defaultValue": "574"
            },
            {
                "name": "MOBILE_WIDTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.ts",
                "type": "number",
                "defaultValue": "850"
            },
            {
                "name": "MOBILE_WIDTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.ts",
                "type": "number",
                "defaultValue": "270"
            },
            {
                "name": "MOBILE_WIDTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                "type": "number",
                "defaultValue": "620"
            },
            {
                "name": "MobileNavigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MONTHES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.ts",
                "type": "[]",
                "defaultValue": "['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']"
            },
            {
                "name": "MutableDanger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MutableDanger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MutableGradientIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MutableGradientIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Navigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Negative",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NON_SELECTED_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.ts",
                "type": "string",
                "defaultValue": "'#F6BC59'"
            },
            {
                "name": "NonSelected",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NorthAmericaCodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                "type": "[]",
                "defaultValue": "[\"AG\", \"AI\", \"AW\", \"BB\", \"BL\", \"BM\", \"BQ\", \"BS\", \"BZ\", \"CA\", \"CR\", \"CU\", \"CW\", \n\"DM\", \"DO\", \"GD\", \"GL\", \"GP\", \"GT\", \"HN\", \"HT\", \"JM\", \"KN\", \"KY\", \"LC\", \"MF\", \"MQ\", \"MS\", \"MX\", \"NI\", \"PA\", \n\"PM\", \"PR\", \"SV\", \"SX\", \"TC\", \"TT\", \"US\", \"VC\", \"VG\", \"VI\"]"
            },
            {
                "name": "OnboardingList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Options",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PADDING",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.ts",
                "type": "number",
                "defaultValue": "32"
            },
            {
                "name": "Payment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PaymentForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Plan",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-plan/plan-builder-plan.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Plus",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Positive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/containers/preview-container/preview-container.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/preview-container/preview-container.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-primary-button/plan-builder-primary-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-button/billing-primary-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-primary-button/cookie-primary-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-primary-button/request-primary-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-primary-button/teams-mutable-primary-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-primary-button/reports-primary-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/card-row/card-row.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  src: { control: 'text' },\n  title: { control: 'text' },\n  text: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  percent: { control: 'array' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  activePoints: { control: 'number' },\n  background: { control: 'color' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/steps/steps.stories.ts",
                "type": "object",
                "defaultValue": "{\n  activePoints: { control: 'number' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "object",
                "defaultValue": "{\n  items: { control: 'object' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  items: { control: 'object' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  items: { control: 'object' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isOpen: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/containers/preview-container/preview-container.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isOpen: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n  value: { control: 'text' },\n  text: { control: 'text' },\n  iconSrc: { control: 'text' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isOpen: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n  value: { control: 'text' },\n  text: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "object",
                "defaultValue": "{\n  placeholder: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  titles: { control: 'array' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/textarea/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "object",
                "defaultValue": "{\n  initialValue: { control: 'text' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-card/billing-card.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-title/billing-title.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-modal/billing-modal.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-select-input/cookie-select-input.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-title/cookie-title.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-upload/cookie-upload.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/template-item/template-item.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/text-editor/text-editor.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  onActive: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/domains-search-input/domains-search-input.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/formInput/formInput.stories.ts",
                "type": "object",
                "defaultValue": "{\n  placeholder: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-checkbox/plan-builder-checkbox.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  items: { control: 'object' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-secondary-button/plan-builder-secondary-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-primary-button/plan-builder-primary-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-toggler/plan-builder-toggler.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-contact-us/plan-builder-contact-us.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-domains-select/plan-builder-domains-select.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-plan/plan-builder-plan.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-list/dynamic-list.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-table/dynamic-table.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-text/dynamic-text.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/color-picker/color-picker.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isOpen: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/preview-container/preview-container.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isOpen: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/customized-element.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/teams-tips/teams-tips.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/report-table/report-table.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-button/billing-primary-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-danger-button/billing-danger-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-asymmetrical-button/billing-primary-asymmetrical-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-secondary-button/billing-secondary-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-input/billing-input.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-select/billing-select.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  initialValue: { control: 'text' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-layout-card-row/cookie-layout-card-row.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-primary-button/cookie-primary-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-reload-button/cookie-reload-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-secondary-button/cookie-secondary-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-primary-button/request-primary-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-secondary-button/request-secondary-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-input/request-text-input.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-select-input/request-select-input.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-area/request-text-area.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/domains-svg-button/domains-svg-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  onActive: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/dark-add-button/dark-add-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/simple-policy-generator-button/simple-policy-generator-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-secondary-button/teams-secondary-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  onActive: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-primary-button/teams-mutable-primary-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  onActive: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-simple-button/teams-simple-button.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-svg-button/teams-svg-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  onActive: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/inputs/teams-input/teams-input.stories.ts",
                "type": "object",
                "defaultValue": "{\n  placeholder: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/inputs/teams-search-input/teams-search-input.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/inputs/teams-select-input/teams-select-input.stories.ts",
                "type": "object",
                "defaultValue": "{\n  initialValue: { control: 'text' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/menu/reports-date-menu/reports-date-menu.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/menu/reports-menu/reports-menu.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/menu/reports-mobile-menu/reports-mobile-menu.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  items: { control: 'object' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-info-button/reports-info-button.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-light-button/reports-light-button.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-primary-button/reports-primary-button.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-secondary-button/reports-secondary-button.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-search-input/reports-search-input.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input-search/reports-select-input-search.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-checkbox-input/reports-checkbox-input.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input/reports-select-input.stories.ts",
                "type": "object",
                "defaultValue": "{\n  initialValue: { control: 'text' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-with-initial-value/reports-select-with-initial-value.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
            },
            {
                "name": "Range",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RegistrationForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Reload",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-reload-button/cookie-reload-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Rename",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                "type": "",
                "defaultValue": "Template2.bind({})"
            },
            {
                "name": "Reports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ReportStatus",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "test.ts",
                "type": "literal type"
            },
            {
                "name": "Round",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Row",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/card-row/card-row.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Save",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/domains-svg-button/domains-svg-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Save",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-svg-button/teams-svg-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Scan",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ScanReport",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SCROLL_STEP",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                "type": "number",
                "defaultValue": "30"
            },
            {
                "name": "Search",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Search",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/domains-search-input/domains-search-input.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Search",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/inputs/teams-search-input/teams-search-input.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Search",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-search-input/reports-search-input.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SearchIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SearchSelect",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input-search/reports-select-input-search.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SearchSelectIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input-search/reports-select-input-search.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Second",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Second",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Second",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-secondary-button/plan-builder-secondary-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-secondary-button/billing-secondary-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-secondary-button/cookie-secondary-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-secondary-button/request-secondary-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-secondary-button/teams-secondary-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-secondary-button/reports-secondary-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SectionsList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Select",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-select-input/request-select-input.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Select",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/inputs/teams-select-input/teams-select-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Select",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input/reports-select-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SelectDomains",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-domains-select/plan-builder-domains-select.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Selected",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Selected",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SELECTED_COUNTRY_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts",
                "type": "string",
                "defaultValue": "\"rgba(1, 25, 73, 0.75)\""
            },
            {
                "name": "SelectMonth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-select/billing-select.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SelectWithInitialValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-with-initial-value/reports-select-with-initial-value.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SelectYear",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-select/billing-select.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Semicirce",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SemicircleChart",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Side",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/steps/steps.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/simple-policy-generator-button/simple-policy-generator-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SMALL_MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.ts",
                "type": "number",
                "defaultValue": "680"
            },
            {
                "name": "SMALL_MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                "type": "number",
                "defaultValue": "509"
            },
            {
                "name": "SMALL_MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.ts",
                "type": "number",
                "defaultValue": "400"
            },
            {
                "name": "SMALL_MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                "type": "number",
                "defaultValue": "509"
            },
            {
                "name": "SMALL_MOBILE_VIEW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.ts",
                "type": "number",
                "defaultValue": "400"
            },
            {
                "name": "SmallDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/dark-add-button/dark-add-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SmallLight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SouthAmericaCodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                "type": "[]",
                "defaultValue": "[\"AR\", \"BO\", \"BR\", \"CL\", \"CO\", \"EC\", \"FK\", \"GF\", \"GY\", \"PE\", \"PY\", \"SR\", \"UY\", \"VE\"]"
            },
            {
                "name": "Static",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Static",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Static",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "STATIC_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                "type": "string",
                "defaultValue": "'rgb(255, 255, 255)'"
            },
            {
                "name": "STATIC_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.ts",
                "type": "string",
                "defaultValue": "'rgba(1, 25, 73, 0.15)'"
            },
            {
                "name": "STATIC_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                "type": "string",
                "defaultValue": "'rgb(255, 255, 255)'"
            },
            {
                "name": "STATIC_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                "type": "string",
                "defaultValue": "'rgba(1, 25, 73, 0.3)'"
            },
            {
                "name": "STATIC_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.ts",
                "type": "string",
                "defaultValue": "'rgb(255, 255, 255)'"
            },
            {
                "name": "STATIC_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.ts",
                "type": "string",
                "defaultValue": "'white'"
            },
            {
                "name": "STATIC_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.ts",
                "type": "string",
                "defaultValue": "'rgb(255, 255, 255)'"
            },
            {
                "name": "STATIC_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.ts",
                "type": "string",
                "defaultValue": "'white'"
            },
            {
                "name": "STATIC_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.ts",
                "type": "string",
                "defaultValue": "'rgba(1, 25, 73, 0.5)'"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-simple-button/teams-simple-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessAsimetric",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessAsimetric",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessAsimetric",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-simple-button/teams-simple-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessAsimetricBig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessAsimetricSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessAsimetricWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessBig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessBig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessBig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Switch",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Switch",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-checkbox/plan-builder-checkbox.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Tab",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Table",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-table/dynamic-table.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Table",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/report-table/report-table.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.component.stories.ts",
                "type": "Story<AppComponent>",
                "defaultValue": "(args: AppComponent) => ({\n  component: AppComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/card-row/card-row.component.stories.ts",
                "type": "Story<CardRowComponent>",
                "defaultValue": "(args: CardRowComponent) => ({\n  component: CardRowComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "Story<RollUpComponent>",
                "defaultValue": "(args: RollUpComponent) => ({\n  component: RollUpComponent,\n  props: args,\n  template: `\n  <app-roll-up [title]=\"title\" [number]=\"number\">\n    <app-transparent-table \n      [mainColumn]=\"mainColumn\"\n      [data]=\"data\"\n      [heads]=\"heads\"\n    >\n      </app-transparent-table>\n  </app-roll-up>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                "type": "Story<StatusBarComponent>",
                "defaultValue": "(args: StatusBarComponent) => ({\n  component: StatusBarComponent,\n  props: args\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "Story<ScanScreensComponent>",
                "defaultValue": "(args: ScanScreensComponent) => ({\n  component: ScanScreensComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "Story<RegistrationFormComponent>",
                "defaultValue": "(args: RegistrationFormComponent) => ({\n  component: RegistrationFormComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "Story<ScanReportComponent>",
                "defaultValue": "(args: ScanReportComponent) => ({\n  component: ScanReportComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card.stories.ts",
                "type": "Story<CardComponent>",
                "defaultValue": "(args: CardComponent) => ({\n  component: CardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "Story<IconContainerComponent>",
                "defaultValue": "(args: IconContainerComponent) => ({\n  component: IconContainerComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "Story<ScanAnimationComponent>",
                "defaultValue": "(args: ScanAnimationComponent) => ({\n  component: ScanAnimationComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "Story<searchItemComponent>",
                "defaultValue": "(args: searchItemComponent) => ({\n  component: searchItemComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "Story<SemicircleChartComponent>",
                "defaultValue": "(args: SemicircleChartComponent) => ({\n  component: SemicircleChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "Story<StatusStepsDynamicComponent>",
                "defaultValue": "(args: StatusStepsDynamicComponent) => ({\n  component: StatusStepsDynamicComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/steps/steps.stories.ts",
                "type": "Story<StepsComponent>",
                "defaultValue": "(args: StepsComponent) => ({\n  component: StepsComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "Story<MainNavigationMenuComponent>",
                "defaultValue": "(args: MainNavigationMenuComponent) => ({\n  component: MainNavigationMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "Story<CompositeMenuComponent>",
                "defaultValue": "(args: CompositeMenuComponent) => ({\n  component: CompositeMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "Story<DateMenuComponent>",
                "defaultValue": "(args: DateMenuComponent) => ({\n  component: DateMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                "type": "Story<TabMenuComponent>",
                "defaultValue": "(args: TabMenuComponent) => ({\n  component: TabMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "Story<FormScreenFifthComponent>",
                "defaultValue": "(args: FormScreenFifthComponent) => ({\n    component: FormScreenFifthComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "Story<MobileMainNavigationMenuComponent>",
                "defaultValue": "(args: MobileMainNavigationMenuComponent) => ({\n  component: MobileMainNavigationMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "Story<SideMenuComponent>",
                "defaultValue": "(args: SideMenuComponent) => ({\n  component: SideMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "Story<FormScreenFirstComponent>",
                "defaultValue": "(args: FormScreenFirstComponent) => ({\n  component: FormScreenFirstComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "Story<FormScreenSecondComponent>",
                "defaultValue": "(args: FormScreenSecondComponent) => ({\n  component: FormScreenSecondComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "Story<FormScreenThirdComponent>",
                "defaultValue": "(args: FormScreenThirdComponent) => ({\n  component: FormScreenThirdComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "Story<FormScreenFourthComponent>",
                "defaultValue": "(args: FormScreenFourthComponent) => ({\n  component: FormScreenFourthComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                "type": "Story<WhiteRoundedLayoutComponent>",
                "defaultValue": "(args: WhiteRoundedLayoutComponent) => ({\n  component: WhiteRoundedLayoutComponent,\n  props: args,\n  template: `\n  <app-white-rounded-layout [titles]=\"titles\">\n    <app-text-with-after-gradient-line [title]=\"'scan report'\"></app-text-with-after-gradient-line>\n  </app-white-rounded-layout>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "Story<infoButtonComponent>",
                "defaultValue": "(args: infoButtonComponent) => ({\n  component: infoButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "Story<gradientButtonComponent>",
                "defaultValue": "(args: gradientButtonComponent) => ({\n  component: gradientButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "Story<largeButtonComponent>",
                "defaultValue": "(args: largeButtonComponent) => ({\n  component: largeButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "Story<primaryButtonComponent>",
                "defaultValue": "(args: primaryButtonComponent) => ({\n  component: primaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "Story<lightButtonComponent>",
                "defaultValue": "(args: lightButtonComponent) => ({\n  component: lightButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                "type": "Story<LightAssimetricButtonComponent>",
                "defaultValue": "(args: LightAssimetricButtonComponent) => ({\n  component: LightAssimetricButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "Story<SecondaryBorderButtonComponent>",
                "defaultValue": "(args: SecondaryBorderButtonComponent) => ({\n  component: SecondaryBorderButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "Story<secondaryButtonComponent>",
                "defaultValue": "(args: secondaryButtonComponent) => ({\n  component: secondaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "Story<simpleButtonComponent>",
                "defaultValue": "(args: simpleButtonComponent) => ({\n  component: simpleButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "Story<GradientBorderContainerComponent>",
                "defaultValue": "(args: GradientBorderContainerComponent) => ({\n  component: GradientBorderContainerComponent,\n  props: args,\n  template: `\n  <app-gradient-border-container [isSelected]=\"isSelected\" [contentBgColor]=\"contentBgColor\" [height]=\"height\">\n    <img src='assets/images/policyButtonImages/type1.png'>\n  </app-gradient-border-container>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/containers/preview-container/preview-container.component.stories.ts",
                "type": "Story<PreviewContainerComponent>",
                "defaultValue": "(args: PreviewContainerComponent) => ({\n  component: PreviewContainerComponent,\n  props: args,\n  template: `\n  <app-preview-container>\n    <img src='assets/images/policyButtonImages/type1.png'>\n  </app-preview-container>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                "type": "Story<SimpleCounterComponent>",
                "defaultValue": "(args: SimpleCounterComponent) => ({\n  component: SimpleCounterComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                "type": "Story<CardReportStatusComponent>",
                "defaultValue": "(args: CardReportStatusComponent) => ({\n  component: CardReportStatusComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                "type": "Story<SelectedItemComponent>",
                "defaultValue": "(args: SelectedItemComponent) => ({\n  component: SelectedItemComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                "type": "Story<CardReportsComponent>",
                "defaultValue": "(args: CardReportsComponent) => ({\n  component: CardReportsComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "Story<MobileButtonComponent>",
                "defaultValue": "(args: MobileButtonComponent) => ({\n  component: MobileButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "Story<CardWithCenterTextComponent>",
                "defaultValue": "(args: CardWithCenterTextComponent) => ({\n  component: CardWithCenterTextComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "Story<CardWithDonutChartComponent>",
                "defaultValue": "(args: CardWithDonutChartComponent) => ({\n  component: CardWithDonutChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "Story<CardWithColumnsTextComponent>",
                "defaultValue": "(args: CardWithColumnsTextComponent) => ({\n  component: CardWithColumnsTextComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "Story<SemicircleChartCardComponent>",
                "defaultValue": "(args: SemicircleChartCardComponent) => ({\n  component: SemicircleChartCardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "Story<RoundIconComponent>",
                "defaultValue": "(args: RoundIconComponent) => ({\n  component: RoundIconComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "Story<IconLinksComponent>",
                "defaultValue": "(args: IconLinksComponent) => ({\n  component: IconLinksComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "Story<formInputComponent>",
                "defaultValue": "(args: formInputComponent) => ({\n  component: formInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "Story<navLinkComponent>",
                "defaultValue": "(args: navLinkComponent) => ({\n  component: navLinkComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "Story<TransparentTableComponent>",
                "defaultValue": "(args: TransparentTableComponent) => ({\n  component: TransparentTableComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                "type": "Story<GradientTextComponent>",
                "defaultValue": "(args: GradientTextComponent) => ({\n  component: GradientTextComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "Story<TextWithGradientBackComponent>",
                "defaultValue": "(args: TextWithGradientBackComponent) => ({\n  component: TextWithGradientBackComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                "type": "Story<TextWithAfterGradientLineComponent>",
                "defaultValue": "(args: TextWithAfterGradientLineComponent) => ({\n  component: TextWithAfterGradientLineComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "Story<CheckboxInputDarkComponent>",
                "defaultValue": "(args: CheckboxInputDarkComponent) => ({\n  component: CheckboxInputDarkComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                "type": "Story<CheckboxCircleInputComponent>",
                "defaultValue": "(args: CheckboxCircleInputComponent) => ({\n  component: CheckboxCircleInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "Story<CheckboxInputSwitchComponent>",
                "defaultValue": "(args: CheckboxInputSwitchComponent) => ({\n  component: CheckboxInputSwitchComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "Story<CheckboxInputSimpleComponent>",
                "defaultValue": "(args: CheckboxInputSimpleComponent) => ({\n  component: CheckboxInputSimpleComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "Story<SelectInputSearchComponent>",
                "defaultValue": "(args: SelectInputSearchComponent) => ({\n  component: SelectInputSearchComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/textarea/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                "type": "Story<TextareaCopyToClipboardComponent>",
                "defaultValue": "(args: TextareaCopyToClipboardComponent) => ({\n  component: TextareaCopyToClipboardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "Story<SelectInputSimpleComponent>",
                "defaultValue": "(args: SelectInputSimpleComponent) => ({\n  component: SelectInputSimpleComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                "type": "Story<SimpleTextareaComponent>",
                "defaultValue": "(args: SimpleTextareaComponent) => ({\n  component: SimpleTextareaComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-card/billing-card.component.stories.ts",
                "type": "Story<BillingCardComponent>",
                "defaultValue": "(args: BillingCardComponent) => ({\n  component: BillingCardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-title/billing-title.component.stories.ts",
                "type": "Story<BillingTitleComponent>",
                "defaultValue": "(args: BillingTitleComponent) => ({\n  component: BillingTitleComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-modal/billing-modal.component.stories.ts",
                "type": "Story<BillingModalComponent>",
                "defaultValue": "(args: BillingModalComponent) => ({\n  component: BillingModalComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts",
                "type": "Story<BillingPlanComponent>",
                "defaultValue": "(args: BillingPlanComponent) => ({\n  component: BillingPlanComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.stories.ts",
                "type": "Story<BillingPaymentComponent>",
                "defaultValue": "(args: BillingPaymentComponent) => ({\n  component: BillingPaymentComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.stories.ts",
                "type": "Story<BillingWarningComponent>",
                "defaultValue": "(args: BillingWarningComponent) => ({\n  component: BillingWarningComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.stories.ts",
                "type": "Story<BillingInvoicesComponent>",
                "defaultValue": "(args: BillingInvoicesComponent) => ({\n  component: BillingInvoicesComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.stories.ts",
                "type": "Story<CookieEditorComponent>",
                "defaultValue": "(args: CookieEditorComponent) => ({\n  component: CookieEditorComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.stories.ts",
                "type": "Story<CookieColorPickerComponent>",
                "defaultValue": "(args: CookieColorPickerComponent) => ({\n  component: CookieColorPickerComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                "type": "Story<CookieLayoutCardComponent>",
                "defaultValue": "(args: CookieLayoutCardComponent) => ({\n  component: CookieLayoutCardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                "type": "Story<CookieDesignCardComponent>",
                "defaultValue": "(args: CookieDesignCardComponent) => ({\n  component: CookieDesignCardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-select-input/cookie-select-input.component.stories.ts",
                "type": "Story<CookieSelectInputComponent>",
                "defaultValue": "(args: CookieSelectInputComponent) => ({\n  component: CookieSelectInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-title/cookie-title.component.stories.ts",
                "type": "Story<CookieTitleComponent>",
                "defaultValue": "(args: CookieTitleComponent) => ({\n  component: CookieTitleComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-upload/cookie-upload.component.stories.ts",
                "type": "Story<CookieUploadComponent>",
                "defaultValue": "(args: CookieUploadComponent) => ({\n  component: CookieUploadComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.stories.ts",
                "type": "Story<TemplatesListComponent>",
                "defaultValue": "(args: TemplatesListComponent) => ({\n  component: TemplatesListComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts",
                "type": "Story<RequestInputBlockComponent>",
                "defaultValue": "(args: RequestInputBlockComponent) => ({\n  component: RequestInputBlockComponent,\n  props: args,\n  template: `\n  <app-request-input-block [title]=\"title\" [isRequired]=\"isRequired\">\n    <app-request-text-input \n      [data]=\"{ id: '1', placeholderText: '', initialValue: 'Matvey Dunuk' }\"\n    >\n    </app-request-text-input>\n  </app-request-input-block>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/template-item/template-item.component.stories.ts",
                "type": "Story<TemplateItemComponent>",
                "defaultValue": "(args: TemplateItemComponent) => ({\n  component: TemplateItemComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/text-editor/text-editor.component.stories.ts",
                "type": "Story<TextEditorComponent>",
                "defaultValue": "(args: TextEditorComponent) => ({\n  component: TextEditorComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                "type": "Story<DomainsCheckboxMutableGradientComponent>",
                "defaultValue": "(args: DomainsCheckboxMutableGradientComponent) => ({\n  component: DomainsCheckboxMutableGradientComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/domains-search-input/domains-search-input.component.stories.ts",
                "type": "Story<DomainsSearchInputComponent>",
                "defaultValue": "(args: DomainsSearchInputComponent) => ({\n  component: DomainsSearchInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.stories.ts",
                "type": "Story<RequestFormComponent>",
                "defaultValue": "(args: RequestFormComponent) => ({\n  component: RequestFormComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/formInput/formInput.stories.ts",
                "type": "Story<DomainsFormInputComponent>",
                "defaultValue": "(args: DomainsFormInputComponent) => ({\n  component: DomainsFormInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.stories.ts",
                "type": "Story<DomainsOnboardingCardComponent>",
                "defaultValue": "(args: DomainsOnboardingCardComponent) => ({\n  component: DomainsOnboardingCardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-checkbox/plan-builder-checkbox.component.stories.ts",
                "type": "Story<PlanBuilderCheckboxComponent>",
                "defaultValue": "(args: PlanBuilderCheckboxComponent) => ({\n  component: PlanBuilderCheckboxComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.stories.ts",
                "type": "Story<DomainsOnboardingListComponent>",
                "defaultValue": "(args: DomainsOnboardingListComponent) => ({\n  component: DomainsOnboardingListComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.stories.ts",
                "type": "Story<PlanBuilderRangeComponent>",
                "defaultValue": "(args: PlanBuilderRangeComponent) => ({\n  component: PlanBuilderRangeComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-secondary-button/plan-builder-secondary-button.component.stories.ts",
                "type": "Story<PlanBuilderSecondaryButtonComponent>",
                "defaultValue": "(args: PlanBuilderSecondaryButtonComponent) => ({\n  component: PlanBuilderSecondaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-primary-button/plan-builder-primary-button.component.stories.ts",
                "type": "Story<PlanBuilderPrimaryButtonComponent>",
                "defaultValue": "(args: PlanBuilderPrimaryButtonComponent) => ({\n  component: PlanBuilderPrimaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.stories.ts",
                "type": "Story<PlanBuilderCardComponent>",
                "defaultValue": "(args: PlanBuilderCardComponent) => ({\n  component: PlanBuilderCardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-toggler/plan-builder-toggler.component.stories.ts",
                "type": "Story<PlanBuilderTogglerComponent>",
                "defaultValue": "(args: PlanBuilderTogglerComponent) => ({\n  component: PlanBuilderTogglerComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-contact-us/plan-builder-contact-us.component.stories.ts",
                "type": "Story<PlanBuilderContactUsComponent>",
                "defaultValue": "(args: PlanBuilderContactUsComponent) => ({\n  component: PlanBuilderContactUsComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-domains-select/plan-builder-domains-select.component.stories.ts",
                "type": "Story<PlanBuilderDomainsSelectComponent>",
                "defaultValue": "(args: PlanBuilderDomainsSelectComponent) => ({\n  component: PlanBuilderDomainsSelectComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-plan/plan-builder-plan.component.stories.ts",
                "type": "Story<PlanBuilderPlanComponent>",
                "defaultValue": "(args: PlanBuilderPlanComponent) => ({\n  component: PlanBuilderPlanComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-list/dynamic-list.component.stories.ts",
                "type": "Story<PoliciesDynamicListComponent>",
                "defaultValue": "(args: PoliciesDynamicListComponent) => ({\n  component: PoliciesDynamicListComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-table/dynamic-table.component.stories.ts",
                "type": "Story<PoliciesDynamicTableComponent>",
                "defaultValue": "(args: PoliciesDynamicTableComponent) => ({\n  component: PoliciesDynamicTableComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-text/dynamic-text.component.stories.ts",
                "type": "Story<PoliciesDynamicTextComponent>",
                "defaultValue": "(args: PoliciesDynamicTextComponent) => ({\n  component: PoliciesDynamicTextComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts",
                "type": "Story<PoliciesButtonComponent>",
                "defaultValue": "(args: PoliciesButtonComponent) => ({\n  component: PoliciesButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "Story<PoliciesCheckboxInputDarkComponent>",
                "defaultValue": "(args: PoliciesCheckboxInputDarkComponent) => ({\n  component: PoliciesCheckboxInputDarkComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.stories.ts",
                "type": "Story<PlanBuilderCardsListComponent>",
                "defaultValue": "(args: PlanBuilderCardsListComponent) => ({\n  component: PlanBuilderCardsListComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/color-picker/color-picker.component.stories.ts",
                "type": "Story<PoliciesColorPickerComponent>",
                "defaultValue": "(args: PoliciesColorPickerComponent) => ({\n  component: PoliciesColorPickerComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "Story<PoliciesGradientBorderContainerComponent>",
                "defaultValue": "(args: PoliciesGradientBorderContainerComponent) => ({\n  component: PoliciesGradientBorderContainerComponent,\n  props: args,\n  template: `\n  <app-gradient-border-container [isSelected]=\"isSelected\" [contentBgColor]=\"contentBgColor\" [height]=\"height\">\n    <img src='assets/images/policyButtonImages/type1.png'>\n  </app-gradient-border-container>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/preview-container/preview-container.component.stories.ts",
                "type": "Story<PoliciesPreviewContainerComponent>",
                "defaultValue": "(args: PoliciesPreviewContainerComponent) => ({\n  component: PoliciesPreviewContainerComponent,\n  props: args,\n  template: `\n  <app-preview-container>\n    <img src='assets/images/policyButtonImages/type1.png'>\n  </app-preview-container>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                "type": "Story<PoliciesTextareaCopyToClipboardComponent>",
                "defaultValue": "(args: PoliciesTextareaCopyToClipboardComponent) => ({\n  component: PoliciesTextareaCopyToClipboardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/customized-element.component.stories.ts",
                "type": "Story<PoliciesCustomizedElementComponent>",
                "defaultValue": "(args: PoliciesCustomizedElementComponent) => ({\n  component: PoliciesCustomizedElementComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "Story<PoliciesDynamicSectionsListComponent>",
                "defaultValue": "(args: PoliciesDynamicSectionsListComponent) => ({\n  component: PoliciesDynamicSectionsListComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/teams-tips/teams-tips.component.stories.ts",
                "type": "Story<TeamsTipsComponent>",
                "defaultValue": "(args: TeamsTipsComponent) => ({\n  component: TeamsTipsComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.stories.ts",
                "type": "Story<TeamsCardComponent>",
                "defaultValue": "(args: TeamsCardComponent) => ({\n  component: TeamsCardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/report-table/report-table.component.stories.ts",
                "type": "Story<ReportTableComponent>",
                "defaultValue": "(args: ReportTableComponent) => ({\n  component: ReportTableComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.stories.ts",
                "type": "Story<TeamsCardsListComponent>",
                "defaultValue": "(args: TeamsCardsListComponent) => ({\n  component: TeamsCardsListComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.stories.ts",
                "type": "Story<ReportModalComponent>",
                "defaultValue": "(args: ReportModalComponent) => ({\n  component: ReportModalComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts",
                "type": "Story<ReportStatusComponent>",
                "defaultValue": "(args: ReportStatusComponent) => ({\n  component: ReportStatusComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-button/billing-primary-button.component.stories.ts",
                "type": "Story<BillingPrimaryButtonComponent>",
                "defaultValue": "(args: BillingPrimaryButtonComponent) => ({\n  component: BillingPrimaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-danger-button/billing-danger-button.component.stories.ts",
                "type": "Story<BillingDangerButtonComponent>",
                "defaultValue": "(args: BillingDangerButtonComponent) => ({\n  component: BillingDangerButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-asymmetrical-button/billing-primary-asymmetrical-button.component.stories.ts",
                "type": "Story<BillingPrimaryAsymmetricalButtonComponent>",
                "defaultValue": "(args: BillingPrimaryAsymmetricalButtonComponent) => ({\n  component: BillingPrimaryAsymmetricalButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-secondary-button/billing-secondary-button.component.stories.ts",
                "type": "Story<BillingSecondaryButtonComponent>",
                "defaultValue": "(args: BillingSecondaryButtonComponent) => ({\n  component: BillingSecondaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-input/billing-input.component.stories.ts",
                "type": "Story<BillingInputComponent>",
                "defaultValue": "(args: BillingInputComponent) => ({\n  component: BillingInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-select/billing-select.component.stories.ts",
                "type": "Story<BillingSelectComponent>",
                "defaultValue": "(args: BillingSelectComponent) => ({\n  component: BillingSelectComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.stories.ts",
                "type": "Story<BillingPaymentTableComponent>",
                "defaultValue": "(args: BillingPaymentTableComponent) => ({\n  component: BillingPaymentTableComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.stories.ts",
                "type": "Story<CookieDesignCardRowComponent>",
                "defaultValue": "(args: CookieDesignCardRowComponent) => ({\n  component: CookieDesignCardRowComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-layout-card-row/cookie-layout-card-row.component.stories.ts",
                "type": "Story<CookieLayoutCardRowComponent>",
                "defaultValue": "(args: CookieLayoutCardRowComponent) => ({\n  component: CookieLayoutCardRowComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-primary-button/cookie-primary-button.component.stories.ts",
                "type": "Story<CookiePrimaryButtonComponent>",
                "defaultValue": "(args: CookiePrimaryButtonComponent) => ({\n  component: CookiePrimaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-reload-button/cookie-reload-button.component.stories.ts",
                "type": "Story<CookieReloadButtonComponent>",
                "defaultValue": "(args: CookieReloadButtonComponent) => ({\n  component: CookieReloadButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-secondary-button/cookie-secondary-button.component.stories.ts",
                "type": "Story<CookieSecondaryButtonComponent>",
                "defaultValue": "(args: CookieSecondaryButtonComponent) => ({\n  component: CookieSecondaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-primary-button/request-primary-button.component.stories.ts",
                "type": "Story<RequestPrimaryButtonComponent>",
                "defaultValue": "(args: RequestPrimaryButtonComponent) => ({\n  component: RequestPrimaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-secondary-button/request-secondary-button.component.stories.ts",
                "type": "Story<RequestSecondaryButtonComponent>",
                "defaultValue": "(args: RequestSecondaryButtonComponent) => ({\n  component: RequestSecondaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-input/request-text-input.component.stories.ts",
                "type": "Story<RequestTextInputComponent>",
                "defaultValue": "(args: RequestTextInputComponent) => ({\n  component: RequestTextInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-select-input/request-select-input.component.stories.ts",
                "type": "Story<RequestSelectInputComponent>",
                "defaultValue": "(args: RequestSelectInputComponent) => ({\n  component: RequestSelectInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-area/request-text-area.component.stories.ts",
                "type": "Story<RequestTextAreaComponent>",
                "defaultValue": "(args: RequestTextAreaComponent) => ({\n  component: RequestTextAreaComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                "type": "Story<DomainsMutableGradientIconButtonComponent>",
                "defaultValue": "(args: DomainsMutableGradientIconButtonComponent) => ({\n  component: DomainsMutableGradientIconButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                "type": "Story<DomainsMutableLightButtonComponent>",
                "defaultValue": "(args: DomainsMutableLightButtonComponent) => ({\n  component: DomainsMutableLightButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                "type": "Story<DomainsMutableDangerButtonComponent>",
                "defaultValue": "(args: DomainsMutableDangerButtonComponent) => ({\n  component: DomainsMutableDangerButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/domains-svg-button/domains-svg-button.component.stories.ts",
                "type": "Story<DomainsSvgButtonComponent>",
                "defaultValue": "(args: DomainsSvgButtonComponent) => ({\n  component: DomainsSvgButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "Story<DomainsMutablePrimaryButtonComponent>",
                "defaultValue": "(args: DomainsMutablePrimaryButtonComponent) => ({\n  component: DomainsMutablePrimaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "Story<DomainsSimpleButtonComponent>",
                "defaultValue": "(args: DomainsSimpleButtonComponent) => ({\n  component: DomainsSimpleButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "Story<DomainsApproveModalComponent>",
                "defaultValue": "(args: DomainsApproveModalComponent) => ({\n  component: DomainsApproveModalComponent,\n  props: args,\n  template: `\n  <app-approve-modal \n    [title]=\"title\" \n    [primaryButtonTitle]=\"primaryButtonTitle\"\n    [dangerButtonTitle]=\"dangerButtonTitle\"\n    (primaryButtonFunction)=\"primaryButtonFunction()\"\n    (dangerButtonFunction)=\"dangerButtonFunction()\"\n    (closeModal)=\"closeModal()\"\n  >\n    <p class=\"fs-16-sofia-300\">Do you really want to delete the <strong>Secure Privacy</strong></p>\n  </app-approve-modal>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/dark-add-button/dark-add-button.component.stories.ts",
                "type": "Story<PoliciesDarkAddButtonComponent>",
                "defaultValue": "(args: PoliciesDarkAddButtonComponent) => ({\n  component: PoliciesDarkAddButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/simple-policy-generator-button/simple-policy-generator-button.component.stories.ts",
                "type": "Story<SimplePolicyGeneratorButtonComponent>",
                "defaultValue": "(args: SimplePolicyGeneratorButtonComponent) => ({\n  component: SimplePolicyGeneratorButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "Story<PoliciesSmallLightAddButtonComponent>",
                "defaultValue": "(args: PoliciesSmallLightAddButtonComponent) => ({\n  component: PoliciesSmallLightAddButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "Story<PoliciesSelectInputWithInitialValueComponent>",
                "defaultValue": "(args: PoliciesSelectInputWithInitialValueComponent) => ({\n  component: PoliciesSelectInputWithInitialValueComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-secondary-button/teams-secondary-button.component.stories.ts",
                "type": "Story<TeamsSecondaryButtonComponent>",
                "defaultValue": "(args: TeamsSecondaryButtonComponent) => ({\n  component: TeamsSecondaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-primary-button/teams-mutable-primary-button.component.stories.ts",
                "type": "Story<TeamsMutablePrimaryButtonComponent>",
                "defaultValue": "(args: TeamsMutablePrimaryButtonComponent) => ({\n  component: TeamsMutablePrimaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.stories.ts",
                "type": "Story<TeamsMutableGradientIconButtonComponent>",
                "defaultValue": "(args: TeamsMutableGradientIconButtonComponent) => ({\n  component: TeamsMutableGradientIconButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.stories.ts",
                "type": "Story<TeamsMutableDangerButtonComponent>",
                "defaultValue": "(args: TeamsMutableDangerButtonComponent\n) => ({\n  component: TeamsMutableDangerButtonComponent\n,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-simple-button/teams-simple-button.stories.ts",
                "type": "Story<TeamsSimpleButtonComponent>",
                "defaultValue": "(args: TeamsSimpleButtonComponent) => ({\n  component: TeamsSimpleButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/buttons/teams-svg-button/teams-svg-button.component.stories.ts",
                "type": "Story<TeamsSvgButtonComponent>",
                "defaultValue": "(args: TeamsSvgButtonComponent) => ({\n  component: TeamsSvgButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                "type": "Story<TeamsModalComponent>",
                "defaultValue": "(args: TeamsModalComponent) => ({\n  component: TeamsModalComponent,\n  props: args,\n  template: `\n  <app-teams-modal \n    [title]=\"title\" \n    [primaryButtonTitle]=\"primaryButtonTitle\"\n    [dangerButtonTitle]=\"dangerButtonTitle\"\n    (primaryButtonFunction)=\"primaryButtonFunction()\"\n    (dangerButtonFunction)=\"dangerButtonFunction()\"\n    (closeModal)=\"closeModal()\"\n  >\n    <p class=\"fs-16-sofia-300\">Are you sure you want to remove a team member <strong>Anton Ivanov</strong> from the administrators list?</p>\n  </app-teams-modal>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.stories.ts",
                "type": "Story<TeamsCheckboxMutableGradientComponent>",
                "defaultValue": "(args: TeamsCheckboxMutableGradientComponent) => ({\n  component: TeamsCheckboxMutableGradientComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/inputs/teams-input/teams-input.stories.ts",
                "type": "Story<TeamsInputComponent>",
                "defaultValue": "(args: TeamsInputComponent) => ({\n  component: TeamsInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/inputs/teams-search-input/teams-search-input.component.stories.ts",
                "type": "Story<TeamsSearchInputComponent>",
                "defaultValue": "(args: TeamsSearchInputComponent) => ({\n  component: TeamsSearchInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/inputs/teams-select-input/teams-select-input.stories.ts",
                "type": "Story<TeamsSelectInput>",
                "defaultValue": "(args: TeamsSelectInput) => ({\n  component: TeamsSelectInput,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.stories.ts",
                "type": "Story<LinearChartComponent>",
                "defaultValue": "(args: LinearChartComponent) => ({\n  component: LinearChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.stories.ts",
                "type": "Story<ColumnChartComponent>",
                "defaultValue": "(args: ColumnChartComponent) => ({\n  component: ColumnChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.stories.ts",
                "type": "Story<MapChartComponent>",
                "defaultValue": "(args: MapChartComponent) => ({\n  component: MapChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.stories.ts",
                "type": "Story<RoundChartComponent>",
                "defaultValue": "(args: RoundChartComponent) => ({\n  component: RoundChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/menu/reports-date-menu/reports-date-menu.stories.ts",
                "type": "Story<ReportsDateMenuComponent>",
                "defaultValue": "(args: ReportsDateMenuComponent) => ({\n  component: ReportsDateMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/menu/reports-menu/reports-menu.component.stories.ts",
                "type": "Story<ReportsMenuComponent>",
                "defaultValue": "(args: ReportsMenuComponent) => ({\n  component: ReportsMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/menu/reports-mobile-menu/reports-mobile-menu.component.stories.ts",
                "type": "Story<ReportsMobileMenuComponent>",
                "defaultValue": "(args: ReportsMobileMenuComponent) => ({\n  component: ReportsMobileMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                "type": "Story<ReportsButtonComponent>",
                "defaultValue": "(args: ReportsButtonComponent) => ({\n  component: ReportsButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-info-button/reports-info-button.stories.ts",
                "type": "Story<ReportsInfoButtonComponent>",
                "defaultValue": "(args: ReportsInfoButtonComponent) => ({\n  component: ReportsInfoButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-light-button/reports-light-button.stories.ts",
                "type": "Story<ReportsLightButtonComponent>",
                "defaultValue": "(args: ReportsLightButtonComponent) => ({\n  component: ReportsLightButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-primary-button/reports-primary-button.stories.ts",
                "type": "Story<ReportsPrimaryButtonComponent>",
                "defaultValue": "(args: ReportsPrimaryButtonComponent) => ({\n  component: ReportsPrimaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/buttons/reports-secondary-button/reports-secondary-button.stories.ts",
                "type": "Story<ReportsSecondaryButtonComponent>",
                "defaultValue": "(args: ReportsSecondaryButtonComponent) => ({\n  component: ReportsSecondaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-search-input/reports-search-input.component.stories.ts",
                "type": "Story<ReportsSearchInputComponent>",
                "defaultValue": "(args: ReportsSearchInputComponent) => ({\n  component: ReportsSearchInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input-search/reports-select-input-search.component.stories.ts",
                "type": "Story<ReportsSelectInputSearchComponent>",
                "defaultValue": "(args: ReportsSelectInputSearchComponent) => ({\n  component: ReportsSelectInputSearchComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-checkbox-input/reports-checkbox-input.component.stories.ts",
                "type": "Story<ReportsCheckboxInput>",
                "defaultValue": "(args: ReportsCheckboxInput) => ({\n  component: ReportsCheckboxInput,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input/reports-select-input.stories.ts",
                "type": "Story<ReportsSelectInput>",
                "defaultValue": "(args: ReportsSelectInput) => ({\n  component: ReportsSelectInput,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-with-initial-value/reports-select-with-initial-value.component.stories.ts",
                "type": "Story<ReportsSelectWithInitialValueComponent>",
                "defaultValue": "(args: ReportsSelectWithInitialValueComponent) => ({\n  component: ReportsSelectWithInitialValueComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.stories.ts",
                "type": "Story<ReportsIconLinkComponent>",
                "defaultValue": "(args: ReportsIconLinkComponent) => ({\n  component: ReportsIconLinkComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts",
                "type": "Story<ReportsTextLinkComponent>",
                "defaultValue": "(args: ReportsTextLinkComponent) => ({\n  component: ReportsTextLinkComponent,\n  props: args,\n})"
            },
            {
                "name": "Template2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts",
                "type": "Story<RequestInputBlockComponent>",
                "defaultValue": "(args: RequestInputBlockComponent) => ({\n  component: RequestInputBlockComponent,\n  props: args,\n  template: `\n  <app-request-input-block [title]=\"title\" [isRequired]=\"isRequired\">\n    <app-request-text-area \n      [data]=\"{ id: '1', placeholderText: '', initialValue: 'Description' }\"\n    >\n    </app-request-text-area>\n  </app-request-input-block>\n  `,\n})"
            },
            {
                "name": "Template2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "Story<DomainsApproveModalComponent>",
                "defaultValue": "(args: DomainsApproveModalComponent) => ({\n  component: DomainsApproveModalComponent,\n  props: args,\n  template: `\n  <app-approve-modal \n    [title]=\"title\" \n    [primaryButtonTitle]=\"primaryButtonTitle\"\n    [dangerButtonTitle]=\"dangerButtonTitle\"\n    (primaryButtonFunction)=\"primaryButtonFunction()\"\n    (dangerButtonFunction)=\"dangerButtonFunction()\"\n    (closeModal)=\"closeModal()\"\n  >\n      <p \n        class=\"fs-16-sofia-300\"\n        [ngStyle]=\"{ 'text-align': 'left', 'color': 'rgba(1, 25, 73, 0.5)', 'margin': '16px 0 8px', 'line-height': '150%' }\"\n      >\n        Domain name\n      </p>\n      <app-form-input\n        [placeholderText]=\"'example.com'\"\n        [isBold]=\"true\"\n        [initialValue]=\"initialValue\"\n        [name]=\"initialValue\"\n        (changeValueParentFunction)=\"setValue($event, 'addTitle')\"\n      >\n      </app-form-input>\n      <p \n        class=\"fs-16-sofia-300\"\n        [ngStyle]=\"{ 'text-align': 'left', 'color': 'rgba(1, 25, 73, 0.5)', 'margin': '16px 0 8px', 'line-height': '150%' }\"\n      >\n        Domain\n      </p>\n      <app-form-input\n        [placeholderText]=\"'optiona'\"\n        [isBold]=\"true\"\n        [initialValue]=\"initialValue\"\n        [name]=\"initialValue\"\n        (changeValueParentFunction)=\"setValue($event, 'addText')\"\n      >\n      </app-form-input>\n  </app-approve-modal>\n  `,\n})"
            },
            {
                "name": "Template2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                "type": "Story<TeamsModalComponent>",
                "defaultValue": "(args: TeamsModalComponent) => ({\n  component: TeamsModalComponent,\n  props: args,\n  template: `\n  <app-teams-modal \n    [title]=\"title\" \n    [primaryButtonTitle]=\"primaryButtonTitle\"\n    [dangerButtonTitle]=\"dangerButtonTitle\"\n    (primaryButtonFunction)=\"primaryButtonFunction()\"\n    (dangerButtonFunction)=\"dangerButtonFunction()\"\n    (closeModal)=\"closeModal()\"\n  >\n    <p \n      class=\"teams-cards-list__input-title fs-16-sofia-300\"\n      [ngStyle]=\"{ 'text-align': 'left', 'color': 'rgba(1, 25, 73, 0.5)', 'margin': '16px 0 8px', 'line-height': '150%' }\"\n    >\n      Name\n    </p>\n    <app-teams-input\n      [placeholderText]=\"''\"\n      [initialValue]=\"'Anton Ivanov'\"\n      [name]=\"initialValue\"\n      (changeValueParentFunction)=\"setValue($event, 'editTitle')\"\n    >\n    </app-teams-input>\n    <p \n      class=\"teams-cards-list__input-title fs-16-sofia-300\"\n      [ngStyle]=\"{ 'text-align': 'left', 'color': 'rgba(1, 25, 73, 0.5)', 'margin': '16px 0 8px', 'line-height': '150%' }\"\n    >\n      Email\n    </p>\n    <app-teams-input\n      [placeholderText]=\"''\"\n      [initialValue]=\"'secure.privacy@gmail.com'\"\n      [name]=\"initialValue\"\n      (changeValueParentFunction)=\"setValue($event, 'editEmail')\"\n    >\n    </app-teams-input>\n    <p \n      [ngStyle]=\"{ 'text-align': 'left', 'color': 'rgba(1, 25, 73, 0.5)', 'margin': '16px 0 8px', 'line-height': '150%' }\"\n      class=\"teams-cards-list__input-title fs-16-sofia-300\"\n    >\n      Access\n    </p>\n    <teams-select-input\n      [initialValue]=\"'Account owner'\"\n      [items]=\"['Account owner', 'Account manager', 'Account user']\"\n      [id]=\"'position'\"\n      (changeValueParentFunction)=\"null\"\n    >\n    </teams-select-input>\n  </app-teams-modal>\n  `,\n})"
            },
            {
                "name": "TemplateItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/template-item/template-item.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TemplatesList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "",
                "defaultValue": "`For the purpose of this Privacy Policy, we are a Data Controller of your personal information. Our legal basis for collecting and using your personal information, as described in this Privacy Policy, depends on the information we collect and the specific context in which we collect it. We may process your personal information because:`"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Atoms/formInput/formInput.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-text/dynamic-text.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-input/billing-input.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-input/request-text-input.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/inputs/teams-input/teams-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TEXT_STATIC_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                "type": "string",
                "defaultValue": "'#011949'"
            },
            {
                "name": "TEXT_STATIC_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                "type": "string",
                "defaultValue": "'#011949'"
            },
            {
                "name": "TextArea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts",
                "type": "",
                "defaultValue": "Template2.bind({})"
            },
            {
                "name": "TextArea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-area/request-text-area.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TextEditor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Data_Request_Form/Atoms/text-editor/text-editor.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Thin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Third",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Third",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ThreePoints",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "THUMB_WIDTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.ts",
                "type": "number",
                "defaultValue": "20"
            },
            {
                "name": "Tips",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Teams/Atoms/teams-tips/teams-tips.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TIPS_BLOCK_MARGIN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                "type": "number",
                "defaultValue": "32"
            },
            {
                "name": "TIPS_ITEM_HEIGHT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                "type": "number",
                "defaultValue": "16"
            },
            {
                "name": "TIPS_ITEM_MARGIN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                "type": "number",
                "defaultValue": "8"
            },
            {
                "name": "TIPS_WIDTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                "type": "number",
                "defaultValue": "220"
            },
            {
                "name": "Title",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-title/billing-title.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Title",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-title/cookie-title.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Toggler",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-toggler/plan-builder-toggler.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Transparent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Upload",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-upload/cookie-upload.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "VALUE_WIDTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.ts",
                "type": "number",
                "defaultValue": "80"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WhiteRounded",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "withBoldText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "withBoldTextAndLink",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithTable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "YAXIS_BLOCK_WIDTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.ts",
                "type": "number",
                "defaultValue": "66"
            },
            {
                "name": "ZoomIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ZoomOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [
            {
                "name": "debounce",
                "file": "src/app/pages-components/Domains/Organisms/onboarding-list/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "func",
                        "type": ""
                    },
                    {
                        "name": "wait",
                        "type": ""
                    },
                    {
                        "name": "immediate",
                        "type": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "func",
                        "type": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "wait",
                        "type": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "immediate",
                        "type": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "debounce",
                "file": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "func",
                        "type": ""
                    },
                    {
                        "name": "wait",
                        "type": ""
                    },
                    {
                        "name": "immediate",
                        "type": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "func",
                        "type": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "wait",
                        "type": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "immediate",
                        "type": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "detectClasses",
                "file": "src/app/atoms/status-steps-dynamic/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "total"
                    },
                    {
                        "name": "active"
                    },
                    {
                        "name": "list"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "total",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "active",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "list",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "detectClasses",
                "file": "src/app/atoms/steps/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "num"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "num",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getRandomColor",
                "file": "src/app/pages-components/Reports/Molecules/charts/column-chart/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": []
            },
            {
                "name": "getRandomColor",
                "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts": [
                {
                    "name": "Accept",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Decline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NonSelected",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts",
                    "type": "Story<ReportStatusComponent>",
                    "defaultValue": "(args: ReportStatusComponent) => ({\n  component: ReportStatusComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Atoms/report-status/report-status.component.ts": [
                {
                    "name": "ACCEPT_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.ts",
                    "type": "string",
                    "defaultValue": "'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)'"
                },
                {
                    "name": "DECLINE_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.ts",
                    "type": "string",
                    "defaultValue": "'#EA2D2D'"
                },
                {
                    "name": "NON_SELECTED_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.ts",
                    "type": "string",
                    "defaultValue": "'#F6BC59'"
                }
            ],
            "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.ts": [
                {
                    "name": "ACTIVE_CLASS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.ts",
                    "type": "string",
                    "defaultValue": "'app-checkbox-input-gradient__container active'"
                },
                {
                    "name": "INACTIVE_CLASS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.ts",
                    "type": "string",
                    "defaultValue": "'app-checkbox-input-gradient__container'"
                }
            ],
            "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.ts": [
                {
                    "name": "ACTIVE_CLASS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.ts",
                    "type": "string",
                    "defaultValue": "'app-checkbox-input-gradient__container active'"
                },
                {
                    "name": "INACTIVE_CLASS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.ts",
                    "type": "string",
                    "defaultValue": "'app-checkbox-input-gradient__container'"
                }
            ],
            "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.ts": [
                {
                    "name": "ACTIVE_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.ts",
                    "type": "string",
                    "defaultValue": "'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)'"
                },
                {
                    "name": "DESKTOP_WIDTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.ts",
                    "type": "number",
                    "defaultValue": "376"
                },
                {
                    "name": "MOBILE_WIDTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.ts",
                    "type": "number",
                    "defaultValue": "270"
                },
                {
                    "name": "STATIC_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.ts",
                    "type": "string",
                    "defaultValue": "'rgba(1, 25, 73, 0.15)'"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.ts": [
                {
                    "name": "ACTIVE_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.ts",
                    "type": "string",
                    "defaultValue": "'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)'"
                },
                {
                    "name": "INACTIVE_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.ts",
                    "type": "string",
                    "defaultValue": "'#EA2D2D'"
                }
            ],
            "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts": [
                {
                    "name": "ACTIVE_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                    "type": "string",
                    "defaultValue": "'rgba(1, 25, 73, 1)'"
                },
                {
                    "name": "CARD_WIDTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                    "type": "number",
                    "defaultValue": "163"
                },
                {
                    "name": "MARGIN_RIGHT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                    "type": "number",
                    "defaultValue": "16"
                },
                {
                    "name": "SCROLL_STEP",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                    "type": "number",
                    "defaultValue": "30"
                },
                {
                    "name": "STATIC_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                    "type": "string",
                    "defaultValue": "'rgba(1, 25, 73, 0.3)'"
                }
            ],
            "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.ts": [
                {
                    "name": "ACTIVE_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.ts",
                    "type": "string",
                    "defaultValue": "'#24B04B'"
                },
                {
                    "name": "HOVER_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.ts",
                    "type": "string",
                    "defaultValue": "'rgba(1, 25, 73, 1)'"
                },
                {
                    "name": "STATIC_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.ts",
                    "type": "string",
                    "defaultValue": "'rgba(1, 25, 73, 0.5)'"
                }
            ],
            "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts": [
                {
                    "name": "Add",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "First",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Second",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                    "type": "Story<CookieDesignCardComponent>",
                    "defaultValue": "(args: CookieDesignCardComponent) => ({\n  component: CookieDesignCardComponent,\n  props: args,\n})"
                },
                {
                    "name": "Third",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts": [
                {
                    "name": "Add",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template2.bind({})"
                },
                {
                    "name": "Approve",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Delete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                    "type": "Story<DomainsApproveModalComponent>",
                    "defaultValue": "(args: DomainsApproveModalComponent) => ({\n  component: DomainsApproveModalComponent,\n  props: args,\n  template: `\n  <app-approve-modal \n    [title]=\"title\" \n    [primaryButtonTitle]=\"primaryButtonTitle\"\n    [dangerButtonTitle]=\"dangerButtonTitle\"\n    (primaryButtonFunction)=\"primaryButtonFunction()\"\n    (dangerButtonFunction)=\"dangerButtonFunction()\"\n    (closeModal)=\"closeModal()\"\n  >\n    <p class=\"fs-16-sofia-300\">Do you really want to delete the <strong>Secure Privacy</strong></p>\n  </app-approve-modal>\n  `,\n})"
                },
                {
                    "name": "Template2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                    "type": "Story<DomainsApproveModalComponent>",
                    "defaultValue": "(args: DomainsApproveModalComponent) => ({\n  component: DomainsApproveModalComponent,\n  props: args,\n  template: `\n  <app-approve-modal \n    [title]=\"title\" \n    [primaryButtonTitle]=\"primaryButtonTitle\"\n    [dangerButtonTitle]=\"dangerButtonTitle\"\n    (primaryButtonFunction)=\"primaryButtonFunction()\"\n    (dangerButtonFunction)=\"dangerButtonFunction()\"\n    (closeModal)=\"closeModal()\"\n  >\n      <p \n        class=\"fs-16-sofia-300\"\n        [ngStyle]=\"{ 'text-align': 'left', 'color': 'rgba(1, 25, 73, 0.5)', 'margin': '16px 0 8px', 'line-height': '150%' }\"\n      >\n        Domain name\n      </p>\n      <app-form-input\n        [placeholderText]=\"'example.com'\"\n        [isBold]=\"true\"\n        [initialValue]=\"initialValue\"\n        [name]=\"initialValue\"\n        (changeValueParentFunction)=\"setValue($event, 'addTitle')\"\n      >\n      </app-form-input>\n      <p \n        class=\"fs-16-sofia-300\"\n        [ngStyle]=\"{ 'text-align': 'left', 'color': 'rgba(1, 25, 73, 0.5)', 'margin': '16px 0 8px', 'line-height': '150%' }\"\n      >\n        Domain\n      </p>\n      <app-form-input\n        [placeholderText]=\"'optiona'\"\n        [isBold]=\"true\"\n        [initialValue]=\"initialValue\"\n        [name]=\"initialValue\"\n        (changeValueParentFunction)=\"setValue($event, 'addText')\"\n      >\n      </app-form-input>\n  </app-approve-modal>\n  `,\n})"
                }
            ],
            "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts": [
                {
                    "name": "Add",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template2.bind({})"
                },
                {
                    "name": "Delete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Rename",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template2.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                    "type": "Story<TeamsModalComponent>",
                    "defaultValue": "(args: TeamsModalComponent) => ({\n  component: TeamsModalComponent,\n  props: args,\n  template: `\n  <app-teams-modal \n    [title]=\"title\" \n    [primaryButtonTitle]=\"primaryButtonTitle\"\n    [dangerButtonTitle]=\"dangerButtonTitle\"\n    (primaryButtonFunction)=\"primaryButtonFunction()\"\n    (dangerButtonFunction)=\"dangerButtonFunction()\"\n    (closeModal)=\"closeModal()\"\n  >\n    <p class=\"fs-16-sofia-300\">Are you sure you want to remove a team member <strong>Anton Ivanov</strong> from the administrators list?</p>\n  </app-teams-modal>\n  `,\n})"
                },
                {
                    "name": "Template2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                    "type": "Story<TeamsModalComponent>",
                    "defaultValue": "(args: TeamsModalComponent) => ({\n  component: TeamsModalComponent,\n  props: args,\n  template: `\n  <app-teams-modal \n    [title]=\"title\" \n    [primaryButtonTitle]=\"primaryButtonTitle\"\n    [dangerButtonTitle]=\"dangerButtonTitle\"\n    (primaryButtonFunction)=\"primaryButtonFunction()\"\n    (dangerButtonFunction)=\"dangerButtonFunction()\"\n    (closeModal)=\"closeModal()\"\n  >\n    <p \n      class=\"teams-cards-list__input-title fs-16-sofia-300\"\n      [ngStyle]=\"{ 'text-align': 'left', 'color': 'rgba(1, 25, 73, 0.5)', 'margin': '16px 0 8px', 'line-height': '150%' }\"\n    >\n      Name\n    </p>\n    <app-teams-input\n      [placeholderText]=\"''\"\n      [initialValue]=\"'Anton Ivanov'\"\n      [name]=\"initialValue\"\n      (changeValueParentFunction)=\"setValue($event, 'editTitle')\"\n    >\n    </app-teams-input>\n    <p \n      class=\"teams-cards-list__input-title fs-16-sofia-300\"\n      [ngStyle]=\"{ 'text-align': 'left', 'color': 'rgba(1, 25, 73, 0.5)', 'margin': '16px 0 8px', 'line-height': '150%' }\"\n    >\n      Email\n    </p>\n    <app-teams-input\n      [placeholderText]=\"''\"\n      [initialValue]=\"'secure.privacy@gmail.com'\"\n      [name]=\"initialValue\"\n      (changeValueParentFunction)=\"setValue($event, 'editEmail')\"\n    >\n    </app-teams-input>\n    <p \n      [ngStyle]=\"{ 'text-align': 'left', 'color': 'rgba(1, 25, 73, 0.5)', 'margin': '16px 0 8px', 'line-height': '150%' }\"\n      class=\"teams-cards-list__input-title fs-16-sofia-300\"\n    >\n      Access\n    </p>\n    <teams-select-input\n      [initialValue]=\"'Account owner'\"\n      [items]=\"['Account owner', 'Account manager', 'Account user']\"\n      [id]=\"'position'\"\n      (changeValueParentFunction)=\"null\"\n    >\n    </teams-select-input>\n  </app-teams-modal>\n  `,\n})"
                }
            ],
            "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts": [
                {
                    "name": "AfricaCodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                    "type": "[]",
                    "defaultValue": "[\"AO\", \"BF\", \"BI\", \"BJ\", \"BW\", \"CD\", \"CF\", \"CG\", \"CI\", \"CM\", \"CV\", \"DJ\", \"DZ\", \"EG\", \"EH\", \n\"ER\", \"ET\", \"GA\", \"GH\", \"GM\", \"GN\", \"GQ\", \"GW\", \"KE\", \"KM\", \"LR\", \"LS\", \"LY\", \"MA\", \"MG\", \"ML\", \"MR\", \"MU\", \n\"MW\", \"MZ\", \"NA\", \"NE\", \"NG\", \"RE\", \"RW\", \"SC\", \"SD\", \"SH\", \"SL\", \"SN\", \"SO\", \"SS\", \"ST\", \"SZ\", \"TD\", \"TG\", \n\"TN\", \"TZ\", \"UG\", \"YT\", \"ZA\", \"ZM\", \"ZW\"]"
                },
                {
                    "name": "AsiaCodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                    "type": "[]",
                    "defaultValue": "[\"AE\", \"AF\", \"BD\", \"BH\", \"BN\", \"BT\", \"CC\", \"CN\", \"CX\", \"HK\", \"ID\", \"IL\", \"IN\", \"IO\", \"IQ\", \n\"IR\", \"JO\", \"JP\", \"KG\", \"KH\", \"KP\", \"KR\", \"KT\", \"KW\", \"KZ\", \"LA\", \"LB\", \"LK\", \"MM\", \"MN\", \"MO\", \"MV\", \"MY\", \"NP\", \n\"OM\", \"PH\", \"PK\", \"PS\", \"RU\", \"QA\", \"SA\", \"SG\", \"SY\", \"TH\", \"TJ\", \"TL\", \"TM\", \"TW\", \"UZ\", \"VN\", \"YE\"]"
                },
                {
                    "name": "AustraliaCodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                    "type": "[]",
                    "defaultValue": "[\"AS\", \"AU\", \"CK\", \"FJ\", \"FM\", \"GU\", \"KI\", \"MH\", \"MP\", \"NC\", \"NF\", \"NR\", \"NU\", \"NZ\", \n\"PF\", \"PG\", \"PN\", \"PW\", \"SB\", \"TK\", \"TO\", \"TV\", \"UM\", \"VU\", \"WF\", \"WS\"]"
                },
                {
                    "name": "EuropeCodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                    "type": "[]",
                    "defaultValue": "[\"AD\", \"AL\", \"AM\", \"AT\", \"AX\", \"AZ\", \"BA\", \"BE\", \"BG\", \"BY\", \"CH\", \"CY\", \"CZ\", \"DE\", \n\"DK\", \"EE\", \"ES\", \"FI\", \"FO\", \"FR\", \"GB\", \"GB-CHA\", \"GE\", \"GG\", \"GI\", \"GR\", \"HR\", \"HU\", \"IE\", \"IM\", \"IS\", \n\"IT\", \"JE\", \"LI\", \"LT\", \"LU\", \"LV\", \"MC\", \"MD\", \"ME\", \"MK\", \"MT\", \"NL\", \"NO\", \"PL\", \"PT\", \"RO\", \"RS\",\n\"SE\", \"SI\", \"SJ\", \"SK\", \"SM\", \"TR\", \"UA\", \"VA\", \"XK\"]"
                },
                {
                    "name": "NorthAmericaCodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                    "type": "[]",
                    "defaultValue": "[\"AG\", \"AI\", \"AW\", \"BB\", \"BL\", \"BM\", \"BQ\", \"BS\", \"BZ\", \"CA\", \"CR\", \"CU\", \"CW\", \n\"DM\", \"DO\", \"GD\", \"GL\", \"GP\", \"GT\", \"HN\", \"HT\", \"JM\", \"KN\", \"KY\", \"LC\", \"MF\", \"MQ\", \"MS\", \"MX\", \"NI\", \"PA\", \n\"PM\", \"PR\", \"SV\", \"SX\", \"TC\", \"TT\", \"US\", \"VC\", \"VG\", \"VI\"]"
                },
                {
                    "name": "SouthAmericaCodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                    "type": "[]",
                    "defaultValue": "[\"AR\", \"BO\", \"BR\", \"CL\", \"CO\", \"EC\", \"FK\", \"GF\", \"GY\", \"PE\", \"PY\", \"SR\", \"UY\", \"VE\"]"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Atoms/billing-modal/billing-modal.component.stories.ts": [
                {
                    "name": "Approve",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-modal/billing-modal.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-modal/billing-modal.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-modal/billing-modal.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-modal/billing-modal.component.stories.ts",
                    "type": "Story<BillingModalComponent>",
                    "defaultValue": "(args: BillingModalComponent) => ({\n  component: BillingModalComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-asymmetrical-button/billing-primary-asymmetrical-button.component.stories.ts": [
                {
                    "name": "Asymmetrical",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-asymmetrical-button/billing-primary-asymmetrical-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-asymmetrical-button/billing-primary-asymmetrical-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-asymmetrical-button/billing-primary-asymmetrical-button.component.stories.ts",
                    "type": "Story<BillingPrimaryAsymmetricalButtonComponent>",
                    "defaultValue": "(args: BillingPrimaryAsymmetricalButtonComponent) => ({\n  component: BillingPrimaryAsymmetricalButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.ts": [
                {
                    "name": "AXIS_LABEL_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.ts",
                    "type": "string",
                    "defaultValue": "'rgba(1, 25, 73, 0.3)'"
                },
                {
                    "name": "BORDER_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.ts",
                    "type": "string",
                    "defaultValue": "'rgba(1, 25, 73, 0.1)'"
                },
                {
                    "name": "LEGEND_LABEL_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.ts",
                    "type": "string",
                    "defaultValue": "'rgba(1, 25, 73, 0.75)'"
                },
                {
                    "name": "MARKER_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.ts",
                    "type": "string",
                    "defaultValue": "'rgb(1, 25, 73)'"
                }
            ],
            "src/app/atoms/buttons/lightButton/lightButton.stories.ts": [
                {
                    "name": "Back",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Plus",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                    "type": "Story<lightButtonComponent>",
                    "defaultValue": "(args: lightButtonComponent) => ({\n  component: lightButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts": [
                {
                    "name": "Back",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                    "type": "Story<LightAssimetricButtonComponent>",
                    "defaultValue": "(args: LightAssimetricButtonComponent) => ({\n  component: LightAssimetricButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Atoms/buttons/reports-light-button/reports-light-button.stories.ts": [
                {
                    "name": "Back",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-light-button/reports-light-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-light-button/reports-light-button.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-light-button/reports-light-button.stories.ts",
                    "type": "Story<ReportsLightButtonComponent>",
                    "defaultValue": "(args: ReportsLightButtonComponent) => ({\n  component: ReportsLightButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts": [
                {
                    "name": "BIG_MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                    "type": "number",
                    "defaultValue": "760"
                },
                {
                    "name": "HIGHLITED_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                    "type": "string",
                    "defaultValue": "'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)'"
                },
                {
                    "name": "SMALL_MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                    "type": "number",
                    "defaultValue": "509"
                },
                {
                    "name": "STATIC_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                    "type": "string",
                    "defaultValue": "'rgb(255, 255, 255)'"
                },
                {
                    "name": "TEXT_STATIC_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                    "type": "string",
                    "defaultValue": "'#011949'"
                }
            ],
            "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts": [
                {
                    "name": "BIG_MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                    "type": "number",
                    "defaultValue": "760"
                },
                {
                    "name": "HIGHLITED_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                    "type": "string",
                    "defaultValue": "'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)'"
                },
                {
                    "name": "SMALL_MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                    "type": "number",
                    "defaultValue": "509"
                },
                {
                    "name": "STATIC_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                    "type": "string",
                    "defaultValue": "'rgb(255, 255, 255)'"
                },
                {
                    "name": "TEXT_STATIC_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                    "type": "string",
                    "defaultValue": "'#011949'"
                }
            ],
            "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts": [
                {
                    "name": "BigDarkSelected",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "BigDarkStatic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isOpen: { control: 'boolean' }\n}"
                },
                {
                    "name": "Selected",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Static",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                    "type": "Story<PoliciesGradientBorderContainerComponent>",
                    "defaultValue": "(args: PoliciesGradientBorderContainerComponent) => ({\n  component: PoliciesGradientBorderContainerComponent,\n  props: args,\n  template: `\n  <app-gradient-border-container [isSelected]=\"isSelected\" [contentBgColor]=\"contentBgColor\" [height]=\"height\">\n    <img src='assets/images/policyButtonImages/type1.png'>\n  </app-gradient-border-container>\n  `,\n})"
                }
            ],
            "src/app/pages-components/Policies_Customize/Atoms/buttons/small-light-add-button/small-light-add-button.component.stories.ts": [
                {
                    "name": "BigLight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "SmallLight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                    "type": "Story<PoliciesSmallLightAddButtonComponent>",
                    "defaultValue": "(args: PoliciesSmallLightAddButtonComponent) => ({\n  component: PoliciesSmallLightAddButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts": [
                {
                    "name": "Bottom",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Center",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Left",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LeftCorner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                    "type": "Story<CookieLayoutCardComponent>",
                    "defaultValue": "(args: CookieLayoutCardComponent) => ({\n  component: CookieLayoutCardComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts": [
                {
                    "name": "BusinessOneDomain",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "BusinessSeveralDomains",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Freemium",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts",
                    "type": "Story<BillingPlanComponent>",
                    "defaultValue": "(args: BillingPlanComponent) => ({\n  component: BillingPlanComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Atoms/billing-card/billing-card.component.stories.ts": [
                {
                    "name": "Card",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-card/billing-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-card/billing-card.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-card/billing-card.component.stories.ts",
                    "type": "Story<BillingCardComponent>",
                    "defaultValue": "(args: BillingCardComponent) => ({\n  component: BillingCardComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.stories.ts": [
                {
                    "name": "Card",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.stories.ts",
                    "type": "Story<DomainsOnboardingCardComponent>",
                    "defaultValue": "(args: DomainsOnboardingCardComponent) => ({\n  component: DomainsOnboardingCardComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.stories.ts": [
                {
                    "name": "Card",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.stories.ts",
                    "type": "Story<PlanBuilderCardComponent>",
                    "defaultValue": "(args: PlanBuilderCardComponent) => ({\n  component: PlanBuilderCardComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.stories.ts": [
                {
                    "name": "Card",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.stories.ts",
                    "type": "Story<TeamsCardComponent>",
                    "defaultValue": "(args: TeamsCardComponent) => ({\n  component: TeamsCardComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.ts": [
                {
                    "name": "CARD_MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.ts",
                    "type": "number",
                    "defaultValue": "415"
                },
                {
                    "name": "MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.ts",
                    "type": "number",
                    "defaultValue": "798"
                }
            ],
            "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.stories.ts": [
                {
                    "name": "CardList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.stories.ts",
                    "type": "Story<TeamsCardsListComponent>",
                    "defaultValue": "(args: TeamsCardsListComponent) => ({\n  component: TeamsCardsListComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/card/card-reports/card-reports.component.stories.ts": [
                {
                    "name": "CardReports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n  value: { control: 'text' },\n  text: { control: 'text' },\n  iconSrc: { control: 'text' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                    "type": "Story<CardReportsComponent>",
                    "defaultValue": "(args: CardReportsComponent) => ({\n  component: CardReportsComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.stories.ts": [
                {
                    "name": "CardsList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.stories.ts",
                    "type": "Story<PlanBuilderCardsListComponent>",
                    "defaultValue": "(args: PlanBuilderCardsListComponent) => ({\n  component: PlanBuilderCardsListComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts": [
                {
                    "name": "CardWithCenterText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n  value: { control: 'text' },\n  text: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                    "type": "Story<CardWithCenterTextComponent>",
                    "defaultValue": "(args: CardWithCenterTextComponent) => ({\n  component: CardWithCenterTextComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts": [
                {
                    "name": "CardWithColumns",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                    "type": "Story<CardWithColumnsTextComponent>",
                    "defaultValue": "(args: CardWithColumnsTextComponent) => ({\n  component: CardWithColumnsTextComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts": [
                {
                    "name": "Checkbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  onActive: { control: 'boolean' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                    "type": "Story<DomainsCheckboxMutableGradientComponent>",
                    "defaultValue": "(args: DomainsCheckboxMutableGradientComponent) => ({\n  component: DomainsCheckboxMutableGradientComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Policies_Generator/Atoms/checkbox-input-dark/checkbox-input-dark.component.stories.ts": [
                {
                    "name": "Checkbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                    "type": "Story<PoliciesCheckboxInputDarkComponent>",
                    "defaultValue": "(args: PoliciesCheckboxInputDarkComponent) => ({\n  component: PoliciesCheckboxInputDarkComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Atoms/inputs/reports-checkbox-input/reports-checkbox-input.component.stories.ts": [
                {
                    "name": "Checkbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-checkbox-input/reports-checkbox-input.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-checkbox-input/reports-checkbox-input.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-checkbox-input/reports-checkbox-input.component.stories.ts",
                    "type": "Story<ReportsCheckboxInput>",
                    "defaultValue": "(args: ReportsCheckboxInput) => ({\n  component: ReportsCheckboxInput,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.stories.ts": [
                {
                    "name": "CheckboxOnActiveCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CheckboxOnInactiveCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  onActive: { control: 'boolean' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.stories.ts",
                    "type": "Story<TeamsCheckboxMutableGradientComponent>",
                    "defaultValue": "(args: TeamsCheckboxMutableGradientComponent) => ({\n  component: TeamsCheckboxMutableGradientComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts": [
                {
                    "name": "Choose",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DangerBig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessAsimetric",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessAsimetricWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessBig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "Story<simpleButtonComponent>",
                    "defaultValue": "(args: simpleButtonComponent) => ({\n  component: simpleButtonComponent,\n  props: args,\n})"
                },
                {
                    "name": "Transparent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts": [
                {
                    "name": "ChooseLanguage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ChoosePosition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ChooseShape",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                    "type": "Story<PoliciesSelectInputWithInitialValueComponent>",
                    "defaultValue": "(args: PoliciesSelectInputWithInitialValueComponent) => ({\n  component: PoliciesSelectInputWithInitialValueComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Cookie_Banner/Atoms/cookie-select-input/cookie-select-input.component.stories.ts": [
                {
                    "name": "ChooseShape",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-select-input/cookie-select-input.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-select-input/cookie-select-input.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-select-input/cookie-select-input.component.stories.ts",
                    "type": "Story<CookieSelectInputComponent>",
                    "defaultValue": "(args: CookieSelectInputComponent) => ({\n  component: CookieSelectInputComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts": [
                {
                    "name": "Circle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                    "type": "Story<CheckboxCircleInputComponent>",
                    "defaultValue": "(args: CheckboxCircleInputComponent) => ({\n  component: CheckboxCircleInputComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.stories.ts": [
                {
                    "name": "ColorPicker",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.stories.ts",
                    "type": "Story<CookieColorPickerComponent>",
                    "defaultValue": "(args: CookieColorPickerComponent) => ({\n  component: CookieColorPickerComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Policies_Generator/Atoms/color-picker/color-picker.component.stories.ts": [
                {
                    "name": "ColorPicker",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/color-picker/color-picker.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/color-picker/color-picker.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/color-picker/color-picker.component.stories.ts",
                    "type": "Story<PoliciesColorPickerComponent>",
                    "defaultValue": "(args: PoliciesColorPickerComponent) => ({\n  component: PoliciesColorPickerComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.stories.ts": [
                {
                    "name": "Column",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.stories.ts",
                    "type": "Story<ColumnChartComponent>",
                    "defaultValue": "(args: ColumnChartComponent) => ({\n  component: ColumnChartComponent,\n  props: args,\n})"
                }
            ],
            "src/app/app.component.stories.ts": [
                {
                    "name": "Components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.component.stories.ts",
                    "type": "Story<AppComponent>",
                    "defaultValue": "(args: AppComponent) => ({\n  component: AppComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/menu/composite-menu/composite-menu.stories.ts": [
                {
                    "name": "CompositeMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  items: { control: 'object' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                    "type": "Story<CompositeMenuComponent>",
                    "defaultValue": "(args: CompositeMenuComponent) => ({\n  component: CompositeMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Plan_Builder/Molecules/plan-builder-contact-us/plan-builder-contact-us.component.stories.ts": [
                {
                    "name": "ContactUs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-contact-us/plan-builder-contact-us.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-contact-us/plan-builder-contact-us.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-contact-us/plan-builder-contact-us.component.stories.ts",
                    "type": "Story<PlanBuilderContactUsComponent>",
                    "defaultValue": "(args: PlanBuilderContactUsComponent) => ({\n  component: PlanBuilderContactUsComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.ts": [
                {
                    "name": "CONTAINER_BOTTOM_PADDING",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.ts",
                    "type": "number",
                    "defaultValue": "32"
                },
                {
                    "name": "CONTAINER_LEFT_PADDING",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.ts",
                    "type": "number",
                    "defaultValue": "47"
                },
                {
                    "name": "YAXIS_BLOCK_WIDTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.ts",
                    "type": "number",
                    "defaultValue": "66"
                }
            ],
            "test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "test.ts",
                    "type": "literal type"
                }
            ],
            "src/app/atoms/inputs/textarea/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts": [
                {
                    "name": "CopyToClipboard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/textarea/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/textarea/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/textarea/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                    "type": "Story<TextareaCopyToClipboardComponent>",
                    "defaultValue": "(args: TextareaCopyToClipboardComponent) => ({\n  component: TextareaCopyToClipboardComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Policies_Generator/Atoms/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts": [
                {
                    "name": "CopyToClipboardTextarea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                    "type": "Story<PoliciesTextareaCopyToClipboardComponent>",
                    "defaultValue": "(args: PoliciesTextareaCopyToClipboardComponent) => ({\n  component: PoliciesTextareaCopyToClipboardComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts": [
                {
                    "name": "COUNTRY_HOVER_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts",
                    "type": "string",
                    "defaultValue": "\"rgb(22, 97, 60)\""
                },
                {
                    "name": "MAP_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts",
                    "type": "string",
                    "defaultValue": "\"rgba(1, 25, 73, 0.2)\""
                },
                {
                    "name": "SELECTED_COUNTRY_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts",
                    "type": "string",
                    "defaultValue": "\"rgba(1, 25, 73, 0.75)\""
                }
            ],
            "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-input/billing-input.component.stories.ts": [
                {
                    "name": "CVV",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-input/billing-input.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-input/billing-input.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-input/billing-input.component.stories.ts",
                    "type": "Story<BillingInputComponent>",
                    "defaultValue": "(args: BillingInputComponent) => ({\n  component: BillingInputComponent,\n  props: args,\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-input/billing-input.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-danger-button/billing-danger-button.component.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-danger-button/billing-danger-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DangerShort",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-danger-button/billing-danger-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-danger-button/billing-danger-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-danger-button/billing-danger-button.component.stories.ts",
                    "type": "Story<BillingDangerButtonComponent>",
                    "defaultValue": "(args: BillingDangerButtonComponent) => ({\n  component: BillingDangerButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DangerBig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessBig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                    "type": "Story<ReportsButtonComponent>",
                    "defaultValue": "(args: ReportsButtonComponent) => ({\n  component: ReportsButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts": [
                {
                    "name": "DangerBig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "SuccessAsimetric",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessBig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "Story<DomainsSimpleButtonComponent>",
                    "defaultValue": "(args: DomainsSimpleButtonComponent) => ({\n  component: DomainsSimpleButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                    "type": "Story<CheckboxInputDarkComponent>",
                    "defaultValue": "(args: CheckboxInputDarkComponent) => ({\n  component: CheckboxInputDarkComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts": [
                {
                    "name": "DarkSelected",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DarkStatic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isOpen: { control: 'boolean' }\n}"
                },
                {
                    "name": "Selected",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Static",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                    "type": "Story<GradientBorderContainerComponent>",
                    "defaultValue": "(args: GradientBorderContainerComponent) => ({\n  component: GradientBorderContainerComponent,\n  props: args,\n  template: `\n  <app-gradient-border-container [isSelected]=\"isSelected\" [contentBgColor]=\"contentBgColor\" [height]=\"height\">\n    <img src='assets/images/policyButtonImages/type1.png'>\n  </app-gradient-border-container>\n  `,\n})"
                }
            ],
            "src/app/molecules/menu/date-menu/date-menu.stories.ts": [
                {
                    "name": "Date",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                    "type": "Story<DateMenuComponent>",
                    "defaultValue": "(args: DateMenuComponent) => ({\n  component: DateMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Molecules/menu/reports-date-menu/reports-date-menu.stories.ts": [
                {
                    "name": "Date",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/menu/reports-date-menu/reports-date-menu.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/menu/reports-date-menu/reports-date-menu.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/menu/reports-date-menu/reports-date-menu.stories.ts",
                    "type": "Story<ReportsDateMenuComponent>",
                    "defaultValue": "(args: ReportsDateMenuComponent) => ({\n  component: ReportsDateMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Domains/Atoms/buttons/domains-svg-button/domains-svg-button.component.stories.ts": [
                {
                    "name": "Delete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/domains-svg-button/domains-svg-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/domains-svg-button/domains-svg-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Save",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/domains-svg-button/domains-svg-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/domains-svg-button/domains-svg-button.component.stories.ts",
                    "type": "Story<DomainsSvgButtonComponent>",
                    "defaultValue": "(args: DomainsSvgButtonComponent) => ({\n  component: DomainsSvgButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Teams/Atoms/buttons/teams-svg-button/teams-svg-button.component.stories.ts": [
                {
                    "name": "Delete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-svg-button/teams-svg-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-svg-button/teams-svg-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Save",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-svg-button/teams-svg-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-svg-button/teams-svg-button.component.stories.ts",
                    "type": "Story<TeamsSvgButtonComponent>",
                    "defaultValue": "(args: TeamsSvgButtonComponent) => ({\n  component: TeamsSvgButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.stories.ts": [
                {
                    "name": "Design",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.stories.ts",
                    "type": "Story<CookieDesignCardRowComponent>",
                    "defaultValue": "(args: CookieDesignCardRowComponent) => ({\n  component: CookieDesignCardRowComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts": [
                {
                    "name": "DonutChartCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                    "type": "Story<CardWithDonutChartComponent>",
                    "defaultValue": "(args: CardWithDonutChartComponent) => ({\n  component: CardWithDonutChartComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Policies_Customize/Molecules/customized-element/customized-element.component.stories.ts": [
                {
                    "name": "DynamicSection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/customized-element.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/customized-element.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/customized-element.component.stories.ts",
                    "type": "Story<PoliciesCustomizedElementComponent>",
                    "defaultValue": "(args: PoliciesCustomizedElementComponent) => ({\n  component: PoliciesCustomizedElementComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Domains/Atoms/buttons/mutable-primary-button/mutable-primary-button.component.stories.ts": [
                {
                    "name": "Edit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  onActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Reports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                    "type": "Story<DomainsMutablePrimaryButtonComponent>",
                    "defaultValue": "(args: DomainsMutablePrimaryButtonComponent) => ({\n  component: DomainsMutablePrimaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.stories.ts": [
                {
                    "name": "Editor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.stories.ts",
                    "type": "Story<CookieEditorComponent>",
                    "defaultValue": "(args: CookieEditorComponent) => ({\n  component: CookieEditorComponent,\n  props: args,\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts": [
                {
                    "name": "Fifth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                    "type": "Story<FormScreenFifthComponent>",
                    "defaultValue": "(args: FormScreenFifthComponent) => ({\n    component: FormScreenFifthComponent,\n    props: args,\n  })"
                }
            ],
            "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.stories.ts": [
                {
                    "name": "Filter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Filter2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.stories.ts",
                    "type": "Story<ReportModalComponent>",
                    "defaultValue": "(args: ReportModalComponent) => ({\n  component: ReportModalComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/scan-screens/scan-screens.component.stories.ts": [
                {
                    "name": "First",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                    "type": "Story<ScanScreensComponent>",
                    "defaultValue": "(args: ScanScreensComponent) => ({\n  component: ScanScreensComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts": [
                {
                    "name": "First",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                    "type": "Story<FormScreenFirstComponent>",
                    "defaultValue": "(args: FormScreenFirstComponent) => ({\n  component: FormScreenFirstComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts": [
                {
                    "name": "First",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Second",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                    "type": "Story<TransparentTableComponent>",
                    "defaultValue": "(args: TransparentTableComponent) => ({\n  component: TransparentTableComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts": [
                {
                    "name": "FivePoints",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "FourPoints",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  activePoints: { control: 'number' },\n  background: { control: 'color' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                    "type": "Story<StatusStepsDynamicComponent>",
                    "defaultValue": "(args: StatusStepsDynamicComponent) => ({\n  component: StatusStepsDynamicComponent,\n  props: args,\n})"
                },
                {
                    "name": "ThreePoints",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.stories.ts": [
                {
                    "name": "Form",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.stories.ts",
                    "type": "Story<RequestFormComponent>",
                    "defaultValue": "(args: RequestFormComponent) => ({\n  component: RequestFormComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Molecules/report-table/helpers.ts": [
                {
                    "name": "formatDate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/report-table/helpers.ts",
                    "type": "",
                    "defaultValue": "(date: number) => {\n  const monthNames = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ];\n  const dateObject = new Date(date);\n\n  const getDateProperty = (dateFunction) => {\n    const property = `${dateObject[dateFunction]()}`.length < 2 ? `0${dateObject[dateFunction]()}` : `${dateObject[dateFunction]()}`;\n    return property;\n  }\n\n  let hours: string | number = +getDateProperty('getHours');\n  hours = hours % 12;\n  hours = hours ? hours : 12;\n  hours = hours < 10 ? `0${hours}` : `${hours}`\n  const ampm = +hours >= 12 ? 'PM' : 'AM';\n  const minutes = getDateProperty('getMinutes');\n  const seconds = getDateProperty('getSeconds');\n  const day = getDateProperty('getDate');\n  const month = monthNames[dateObject.getMonth()];\n  const year = getDateProperty('getFullYear');\n  const dateString = `${month} ${day}, ${year} \\n ${hours}:${minutes}:${seconds} ${ampm}`;\n  \n  return dateString;\n}"
                }
            ],
            "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts": [
                {
                    "name": "Fourth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                    "type": "Story<FormScreenFourthComponent>",
                    "defaultValue": "(args: FormScreenFourthComponent) => ({\n  component: FormScreenFourthComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Policies_Customize/Molecules/customized-element/helpers.ts": [
                {
                    "name": "getEditedDataByType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/helpers.ts",
                    "type": "",
                    "defaultValue": "(type: string, props: any) => {\n  let editedData;\n    if (type === 'table') {\n      editedData = { heads: props.heads, tableData: props.tableData }\n    } else if (type === 'list') {\n      editedData = { listTitle: props.listTitle, titles: props.titles }\n    } else if (type === 'text') {\n      editedData = { title: props.title }\n    }\n  return editedData\n}"
                },
                {
                    "name": "getInitialDataByType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Molecules/customized-element/helpers.ts",
                    "type": "",
                    "defaultValue": "(type: string) => {\n  let initialData;\n    if (type === 'table') {\n      initialData = { heads: ['text 1'], tableData: [{ 'text 1' : '1.1. Text', }, { 'text 1' : '1.1. Text', }] }\n    } else if (type === 'list') {\n      initialData = { listTitle: 'Put list title', titles: ['Type text here'] }\n    } else if (type === 'text') {\n      initialData = { title: 'Your new paragraph' }\n    }\n  return initialData\n}"
                }
            ],
            "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts": [
                {
                    "name": "Gradient",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                    "type": "Story<gradientButtonComponent>",
                    "defaultValue": "(args: gradientButtonComponent) => ({\n  component: gradientButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/status-bar/status-bar.component.stories.ts": [
                {
                    "name": "Green",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                    "type": "Story<StatusBarComponent>",
                    "defaultValue": "(args: StatusBarComponent) => ({\n  component: StatusBarComponent,\n  props: args\n})"
                }
            ],
            "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts": [
                {
                    "name": "Green",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                    "type": "Story<GradientTextComponent>",
                    "defaultValue": "(args: GradientTextComponent) => ({\n  component: GradientTextComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts": [
                {
                    "name": "Green",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  titles: { control: 'array' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                    "type": "Story<TextWithGradientBackComponent>",
                    "defaultValue": "(args: TextWithGradientBackComponent) => ({\n  component: TextWithGradientBackComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts": [
                {
                    "name": "Green",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                    "type": "Story<TextWithAfterGradientLineComponent>",
                    "defaultValue": "(args: TextWithAfterGradientLineComponent) => ({\n  component: TextWithAfterGradientLineComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.ts": [
                {
                    "name": "GRID_GAP",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.ts",
                    "type": "number",
                    "defaultValue": "16"
                },
                {
                    "name": "MAX_GRID_COLUMN_NUMBER",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.ts",
                    "type": "number",
                    "defaultValue": "3"
                },
                {
                    "name": "MIN_GRID_COLUMN_WIDTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.ts",
                    "type": "number",
                    "defaultValue": "170"
                },
                {
                    "name": "PADDING",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.ts",
                    "type": "number",
                    "defaultValue": "32"
                }
            ],
            "src/app/atoms/navLink/textLinks/navLink.stories.ts": [
                {
                    "name": "Highlited",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Main",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                    "type": "Story<navLinkComponent>",
                    "defaultValue": "(args: navLinkComponent) => ({\n  component: navLinkComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts": [
                {
                    "name": "Highlited",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Static",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts",
                    "type": "Story<ReportsTextLinkComponent>",
                    "defaultValue": "(args: ReportsTextLinkComponent) => ({\n  component: ReportsTextLinkComponent,\n  props: args,\n})"
                },
                {
                    "name": "Thin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.ts": [
                {
                    "name": "HOVER_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.ts",
                    "type": "string",
                    "defaultValue": "'url(#paint0_linear)'"
                },
                {
                    "name": "STATIC_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.ts",
                    "type": "string",
                    "defaultValue": "'rgb(255, 255, 255)'"
                }
            ],
            "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.ts": [
                {
                    "name": "HOVER_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.ts",
                    "type": "string",
                    "defaultValue": "'red'"
                },
                {
                    "name": "STATIC_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.ts",
                    "type": "string",
                    "defaultValue": "'white'"
                }
            ],
            "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.ts": [
                {
                    "name": "HOVER_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.ts",
                    "type": "string",
                    "defaultValue": "'url(#paint0_linear)'"
                },
                {
                    "name": "STATIC_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.ts",
                    "type": "string",
                    "defaultValue": "'rgb(255, 255, 255)'"
                }
            ],
            "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.ts": [
                {
                    "name": "HOVER_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.ts",
                    "type": "string",
                    "defaultValue": "'red'"
                },
                {
                    "name": "STATIC_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.ts",
                    "type": "string",
                    "defaultValue": "'white'"
                }
            ],
            "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                    "type": "Story<IconLinksComponent>",
                    "defaultValue": "(args: IconLinksComponent) => ({\n  component: IconLinksComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.stories.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.stories.ts",
                    "type": "Story<ReportsIconLinkComponent>",
                    "defaultValue": "(args: ReportsIconLinkComponent) => ({\n  component: ReportsIconLinkComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/infoButton/infoButton.stories.ts": [
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                    "type": "Story<infoButtonComponent>",
                    "defaultValue": "(args: infoButtonComponent) => ({\n  component: infoButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Atoms/buttons/reports-info-button/reports-info-button.stories.ts": [
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-info-button/reports-info-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-info-button/reports-info-button.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-info-button/reports-info-button.stories.ts",
                    "type": "Story<ReportsInfoButtonComponent>",
                    "defaultValue": "(args: ReportsInfoButtonComponent) => ({\n  component: ReportsInfoButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.ts": [
                {
                    "name": "INITIAL_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.ts",
                    "type": "string",
                    "defaultValue": "'red'"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.stories.ts": [
                {
                    "name": "Invoices",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.stories.ts",
                    "type": "Story<BillingInvoicesComponent>",
                    "defaultValue": "(args: BillingInvoicesComponent) => ({\n  component: BillingInvoicesComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/largeButton/largeButton.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                    "type": "Story<largeButtonComponent>",
                    "defaultValue": "(args: largeButtonComponent) => ({\n  component: largeButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-layout-card-row/cookie-layout-card-row.component.stories.ts": [
                {
                    "name": "Layout",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-layout-card-row/cookie-layout-card-row.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-layout-card-row/cookie-layout-card-row.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-layout-card-row/cookie-layout-card-row.component.stories.ts",
                    "type": "Story<CookieLayoutCardRowComponent>",
                    "defaultValue": "(args: CookieLayoutCardRowComponent) => ({\n  component: CookieLayoutCardRowComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.stories.ts": [
                {
                    "name": "Linear",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.stories.ts",
                    "type": "Story<LinearChartComponent>",
                    "defaultValue": "(args: LinearChartComponent) => ({\n  component: LinearChartComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Policies_Customize/Atoms/dynamic-list/dynamic-list.component.stories.ts": [
                {
                    "name": "List",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-list/dynamic-list.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-list/dynamic-list.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-list/dynamic-list.component.stories.ts",
                    "type": "Story<PoliciesDynamicListComponent>",
                    "defaultValue": "(args: PoliciesDynamicListComponent) => ({\n  component: PoliciesDynamicListComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.stories.ts": [
                {
                    "name": "Map",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.stories.ts",
                    "type": "Story<MapChartComponent>",
                    "defaultValue": "(args: MapChartComponent) => ({\n  component: MapChartComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Molecules/menu/reports-menu/reports-menu.component.stories.ts": [
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/menu/reports-menu/reports-menu.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/menu/reports-menu/reports-menu.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/menu/reports-menu/reports-menu.component.stories.ts",
                    "type": "Story<ReportsMenuComponent>",
                    "defaultValue": "(args: ReportsMenuComponent) => ({\n  component: ReportsMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts": [
                {
                    "name": "Mobile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isOpen: { control: 'boolean' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                    "type": "Story<MobileButtonComponent>",
                    "defaultValue": "(args: MobileButtonComponent) => ({\n  component: MobileButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Molecules/menu/reports-mobile-menu/reports-mobile-menu.component.stories.ts": [
                {
                    "name": "Mobile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/menu/reports-mobile-menu/reports-mobile-menu.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/menu/reports-mobile-menu/reports-mobile-menu.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  items: { control: 'object' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/menu/reports-mobile-menu/reports-mobile-menu.component.stories.ts",
                    "type": "Story<ReportsMobileMenuComponent>",
                    "defaultValue": "(args: ReportsMobileMenuComponent) => ({\n  component: ReportsMobileMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.ts": [
                {
                    "name": "MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.ts",
                    "type": "number",
                    "defaultValue": "680"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.ts": [
                {
                    "name": "MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.ts",
                    "type": "number",
                    "defaultValue": "800"
                },
                {
                    "name": "MONTHES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.ts",
                    "type": "[]",
                    "defaultValue": "['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']"
                },
                {
                    "name": "SMALL_MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.ts",
                    "type": "number",
                    "defaultValue": "680"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.ts": [
                {
                    "name": "MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.ts",
                    "type": "number",
                    "defaultValue": "680"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.ts": [
                {
                    "name": "MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.ts",
                    "type": "number",
                    "defaultValue": "680"
                }
            ],
            "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.ts": [
                {
                    "name": "MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.ts",
                    "type": "number",
                    "defaultValue": "680"
                }
            ],
            "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.ts": [
                {
                    "name": "MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.ts",
                    "type": "number",
                    "defaultValue": "600"
                }
            ],
            "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.ts": [
                {
                    "name": "MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.ts",
                    "type": "number",
                    "defaultValue": "574"
                },
                {
                    "name": "SMALL_MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.ts",
                    "type": "number",
                    "defaultValue": "400"
                }
            ],
            "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.ts": [
                {
                    "name": "MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.ts",
                    "type": "number",
                    "defaultValue": "725"
                }
            ],
            "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.ts": [
                {
                    "name": "MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.ts",
                    "type": "number",
                    "defaultValue": "574"
                },
                {
                    "name": "SMALL_MOBILE_VIEW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.ts",
                    "type": "number",
                    "defaultValue": "400"
                }
            ],
            "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.ts": [
                {
                    "name": "MOBILE_WIDTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.ts",
                    "type": "number",
                    "defaultValue": "850"
                },
                {
                    "name": "THUMB_WIDTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.ts",
                    "type": "number",
                    "defaultValue": "20"
                },
                {
                    "name": "VALUE_WIDTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.ts",
                    "type": "number",
                    "defaultValue": "80"
                }
            ],
            "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts": [
                {
                    "name": "MOBILE_WIDTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                    "type": "number",
                    "defaultValue": "620"
                },
                {
                    "name": "TIPS_BLOCK_MARGIN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                    "type": "number",
                    "defaultValue": "32"
                },
                {
                    "name": "TIPS_ITEM_HEIGHT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                    "type": "number",
                    "defaultValue": "16"
                },
                {
                    "name": "TIPS_ITEM_MARGIN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                    "type": "number",
                    "defaultValue": "8"
                },
                {
                    "name": "TIPS_WIDTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                    "type": "number",
                    "defaultValue": "220"
                }
            ],
            "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts": [
                {
                    "name": "MobileNavigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  items: { control: 'object' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                    "type": "Story<MobileMainNavigationMenuComponent>",
                    "defaultValue": "(args: MobileMainNavigationMenuComponent) => ({\n  component: MobileMainNavigationMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.stories.ts": [
                {
                    "name": "MutableDanger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                    "type": "Story<DomainsMutableDangerButtonComponent>",
                    "defaultValue": "(args: DomainsMutableDangerButtonComponent) => ({\n  component: DomainsMutableDangerButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.stories.ts": [
                {
                    "name": "MutableDanger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.stories.ts",
                    "type": "Story<TeamsMutableDangerButtonComponent>",
                    "defaultValue": "(args: TeamsMutableDangerButtonComponent\n) => ({\n  component: TeamsMutableDangerButtonComponent\n,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts": [
                {
                    "name": "MutableGradientIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                    "type": "Story<DomainsMutableGradientIconButtonComponent>",
                    "defaultValue": "(args: DomainsMutableGradientIconButtonComponent) => ({\n  component: DomainsMutableGradientIconButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.stories.ts": [
                {
                    "name": "MutableGradientIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.stories.ts",
                    "type": "Story<TeamsMutableGradientIconButtonComponent>",
                    "defaultValue": "(args: TeamsMutableGradientIconButtonComponent) => ({\n  component: TeamsMutableGradientIconButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts": [
                {
                    "name": "Navigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                    "type": "Story<MainNavigationMenuComponent>",
                    "defaultValue": "(args: MainNavigationMenuComponent) => ({\n  component: MainNavigationMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/icons/round-icon/round-icon.component.stories.ts": [
                {
                    "name": "Negative",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Positive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "Story<RoundIconComponent>",
                    "defaultValue": "(args: RoundIconComponent) => ({\n  component: RoundIconComponent,\n  props: args,\n})"
                },
                {
                    "name": "withBoldText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "withBoldTextAndLink",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.stories.ts": [
                {
                    "name": "OnboardingList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.stories.ts",
                    "type": "Story<DomainsOnboardingListComponent>",
                    "defaultValue": "(args: DomainsOnboardingListComponent) => ({\n  component: DomainsOnboardingListComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Domains/Atoms/buttons/mutable-light-button/mutable-light-button.component.stories.ts": [
                {
                    "name": "Options",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                    "type": "Story<DomainsMutableLightButtonComponent>",
                    "defaultValue": "(args: DomainsMutableLightButtonComponent) => ({\n  component: DomainsMutableLightButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.stories.ts": [
                {
                    "name": "Payment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.stories.ts",
                    "type": "Story<BillingPaymentTableComponent>",
                    "defaultValue": "(args: BillingPaymentTableComponent) => ({\n  component: BillingPaymentTableComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.stories.ts": [
                {
                    "name": "PaymentForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.stories.ts",
                    "type": "Story<BillingPaymentComponent>",
                    "defaultValue": "(args: BillingPaymentComponent) => ({\n  component: BillingPaymentComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Plan_Builder/Molecules/plan-builder-plan/plan-builder-plan.component.stories.ts": [
                {
                    "name": "Plan",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-plan/plan-builder-plan.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-plan/plan-builder-plan.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-plan/plan-builder-plan.component.stories.ts",
                    "type": "Story<PlanBuilderPlanComponent>",
                    "defaultValue": "(args: PlanBuilderPlanComponent) => ({\n  component: PlanBuilderPlanComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/containers/preview-container/preview-container.component.stories.ts": [
                {
                    "name": "Preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/containers/preview-container/preview-container.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/containers/preview-container/preview-container.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isOpen: { control: 'boolean' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/containers/preview-container/preview-container.component.stories.ts",
                    "type": "Story<PreviewContainerComponent>",
                    "defaultValue": "(args: PreviewContainerComponent) => ({\n  component: PreviewContainerComponent,\n  props: args,\n  template: `\n  <app-preview-container>\n    <img src='assets/images/policyButtonImages/type1.png'>\n  </app-preview-container>\n  `,\n})"
                }
            ],
            "src/app/pages-components/Policies_Generator/Atoms/preview-container/preview-container.component.stories.ts": [
                {
                    "name": "Preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/preview-container/preview-container.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/preview-container/preview-container.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isOpen: { control: 'boolean' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/preview-container/preview-container.component.stories.ts",
                    "type": "Story<PoliciesPreviewContainerComponent>",
                    "defaultValue": "(args: PoliciesPreviewContainerComponent) => ({\n  component: PoliciesPreviewContainerComponent,\n  props: args,\n  template: `\n  <app-preview-container>\n    <img src='assets/images/policyButtonImages/type1.png'>\n  </app-preview-container>\n  `,\n})"
                }
            ],
            "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                    "type": "Story<primaryButtonComponent>",
                    "defaultValue": "(args: primaryButtonComponent) => ({\n  component: primaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Plan_Builder/Atoms/plan-builder-primary-button/plan-builder-primary-button.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-primary-button/plan-builder-primary-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-primary-button/plan-builder-primary-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-primary-button/plan-builder-primary-button.component.stories.ts",
                    "type": "Story<PlanBuilderPrimaryButtonComponent>",
                    "defaultValue": "(args: PlanBuilderPrimaryButtonComponent) => ({\n  component: PlanBuilderPrimaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-button/billing-primary-button.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-button/billing-primary-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-button/billing-primary-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-button/billing-primary-button.component.stories.ts",
                    "type": "Story<BillingPrimaryButtonComponent>",
                    "defaultValue": "(args: BillingPrimaryButtonComponent) => ({\n  component: BillingPrimaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-primary-button/cookie-primary-button.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-primary-button/cookie-primary-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-primary-button/cookie-primary-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-primary-button/cookie-primary-button.component.stories.ts",
                    "type": "Story<CookiePrimaryButtonComponent>",
                    "defaultValue": "(args: CookiePrimaryButtonComponent) => ({\n  component: CookiePrimaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-primary-button/request-primary-button.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-primary-button/request-primary-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-primary-button/request-primary-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-primary-button/request-primary-button.component.stories.ts",
                    "type": "Story<RequestPrimaryButtonComponent>",
                    "defaultValue": "(args: RequestPrimaryButtonComponent) => ({\n  component: RequestPrimaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-primary-button/teams-mutable-primary-button.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-primary-button/teams-mutable-primary-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-primary-button/teams-mutable-primary-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  onActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-primary-button/teams-mutable-primary-button.component.stories.ts",
                    "type": "Story<TeamsMutablePrimaryButtonComponent>",
                    "defaultValue": "(args: TeamsMutablePrimaryButtonComponent) => ({\n  component: TeamsMutablePrimaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Atoms/buttons/reports-primary-button/reports-primary-button.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-primary-button/reports-primary-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-primary-button/reports-primary-button.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-primary-button/reports-primary-button.stories.ts",
                    "type": "Story<ReportsPrimaryButtonComponent>",
                    "defaultValue": "(args: ReportsPrimaryButtonComponent) => ({\n  component: ReportsPrimaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/card-row/card-row.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/card-row/card-row.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Row",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/card-row/card-row.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/card-row/card-row.component.stories.ts",
                    "type": "Story<CardRowComponent>",
                    "defaultValue": "(args: CardRowComponent) => ({\n  component: CardRowComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/roll-up/roll-up.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                    "type": "Story<RollUpComponent>",
                    "defaultValue": "(args: RollUpComponent) => ({\n  component: RollUpComponent,\n  props: args,\n  template: `\n  <app-roll-up [title]=\"title\" [number]=\"number\">\n    <app-transparent-table \n      [mainColumn]=\"mainColumn\"\n      [data]=\"data\"\n      [heads]=\"heads\"\n    >\n      </app-transparent-table>\n  </app-roll-up>\n  `,\n})"
                },
                {
                    "name": "WithTable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/organisms/registration-form/registration-form.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "RegistrationForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                    "type": "Story<RegistrationFormComponent>",
                    "defaultValue": "(args: RegistrationFormComponent) => ({\n  component: RegistrationFormComponent,\n  props: args,\n})"
                }
            ],
            "src/app/organisms/scan-report/scan-report.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "ScanReport",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                    "type": "Story<ScanReportComponent>",
                    "defaultValue": "(args: ScanReportComponent) => ({\n  component: ScanReportComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/card/card.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  src: { control: 'text' },\n  title: { control: 'text' },\n  text: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card.stories.ts",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args: CardComponent) => ({\n  component: CardComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/iconContainer/iconContainer.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                    "type": "Story<IconContainerComponent>",
                    "defaultValue": "(args: IconContainerComponent) => ({\n  component: IconContainerComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/scan-animation/scan-animation.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Scan",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                    "type": "Story<ScanAnimationComponent>",
                    "defaultValue": "(args: ScanAnimationComponent) => ({\n  component: ScanAnimationComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/searchItem/searchItem.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "Story<searchItemComponent>",
                    "defaultValue": "(args: searchItemComponent) => ({\n  component: searchItemComponent,\n  props: args,\n})"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  percent: { control: 'array' },\n}"
                },
                {
                    "name": "Semicirce",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                    "type": "Story<SemicircleChartComponent>",
                    "defaultValue": "(args: SemicircleChartComponent) => ({\n  component: SemicircleChartComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/steps/steps.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/steps/steps.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  activePoints: { control: 'number' }\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/steps/steps.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/steps/steps.stories.ts",
                    "type": "Story<StepsComponent>",
                    "defaultValue": "(args: StepsComponent) => ({\n  component: StepsComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  items: { control: 'object' }\n}"
                },
                {
                    "name": "Tab",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                    "type": "Story<TabMenuComponent>",
                    "defaultValue": "(args: TabMenuComponent) => ({\n  component: TabMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/menu/side-menu/side-menu.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Side",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                    "type": "Story<SideMenuComponent>",
                    "defaultValue": "(args: SideMenuComponent) => ({\n  component: SideMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Second",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                    "type": "Story<FormScreenSecondComponent>",
                    "defaultValue": "(args: FormScreenSecondComponent) => ({\n  component: FormScreenSecondComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                    "type": "Story<FormScreenThirdComponent>",
                    "defaultValue": "(args: FormScreenThirdComponent) => ({\n  component: FormScreenThirdComponent,\n  props: args,\n})"
                },
                {
                    "name": "Third",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                    "type": "Story<WhiteRoundedLayoutComponent>",
                    "defaultValue": "(args: WhiteRoundedLayoutComponent) => ({\n  component: WhiteRoundedLayoutComponent,\n  props: args,\n  template: `\n  <app-white-rounded-layout [titles]=\"titles\">\n    <app-text-with-after-gradient-line [title]=\"'scan report'\"></app-text-with-after-gradient-line>\n  </app-white-rounded-layout>\n  `,\n})"
                },
                {
                    "name": "WhiteRounded",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                    "type": "Story<SecondaryBorderButtonComponent>",
                    "defaultValue": "(args: SecondaryBorderButtonComponent) => ({\n  component: SecondaryBorderButtonComponent,\n  props: args,\n})"
                },
                {
                    "name": "ZoomIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ZoomOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                    "type": "Story<secondaryButtonComponent>",
                    "defaultValue": "(args: secondaryButtonComponent) => ({\n  component: secondaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                    "type": "Story<SimpleCounterComponent>",
                    "defaultValue": "(args: SimpleCounterComponent) => ({\n  component: SimpleCounterComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "ReportStatus",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                    "type": "Story<CardReportStatusComponent>",
                    "defaultValue": "(args: CardReportStatusComponent) => ({\n  component: CardReportStatusComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                    "type": "Story<SelectedItemComponent>",
                    "defaultValue": "(args: SelectedItemComponent) => ({\n  component: SelectedItemComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "SemicircleChart",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                    "type": "Story<SemicircleChartCardComponent>",
                    "defaultValue": "(args: SemicircleChartCardComponent) => ({\n  component: SemicircleChartCardComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/formInput/formInput.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  placeholder: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                    "type": "Story<formInputComponent>",
                    "defaultValue": "(args: formInputComponent) => ({\n  component: formInputComponent,\n  props: args,\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
                },
                {
                    "name": "Switch",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                    "type": "Story<CheckboxInputSwitchComponent>",
                    "defaultValue": "(args: CheckboxInputSwitchComponent) => ({\n  component: CheckboxInputSwitchComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                    "type": "Story<CheckboxInputSimpleComponent>",
                    "defaultValue": "(args: CheckboxInputSimpleComponent) => ({\n  component: CheckboxInputSimpleComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Search",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SearchIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                    "type": "Story<SelectInputSearchComponent>",
                    "defaultValue": "(args: SelectInputSearchComponent) => ({\n  component: SelectInputSearchComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  initialValue: { control: 'text' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                    "type": "Story<SelectInputSimpleComponent>",
                    "defaultValue": "(args: SelectInputSimpleComponent) => ({\n  component: SelectInputSimpleComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                    "type": "Story<SimpleTextareaComponent>",
                    "defaultValue": "(args: SimpleTextareaComponent) => ({\n  component: SimpleTextareaComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Atoms/billing-title/billing-title.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-title/billing-title.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-title/billing-title.component.stories.ts",
                    "type": "Story<BillingTitleComponent>",
                    "defaultValue": "(args: BillingTitleComponent) => ({\n  component: BillingTitleComponent,\n  props: args,\n})"
                },
                {
                    "name": "Title",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/billing-title/billing-title.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.stories.ts",
                    "type": "Story<BillingWarningComponent>",
                    "defaultValue": "(args: BillingWarningComponent) => ({\n  component: BillingWarningComponent,\n  props: args,\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Cookie_Banner/Atoms/cookie-title/cookie-title.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-title/cookie-title.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-title/cookie-title.component.stories.ts",
                    "type": "Story<CookieTitleComponent>",
                    "defaultValue": "(args: CookieTitleComponent) => ({\n  component: CookieTitleComponent,\n  props: args,\n})"
                },
                {
                    "name": "Title",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-title/cookie-title.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Cookie_Banner/Atoms/cookie-upload/cookie-upload.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-upload/cookie-upload.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-upload/cookie-upload.component.stories.ts",
                    "type": "Story<CookieUploadComponent>",
                    "defaultValue": "(args: CookieUploadComponent) => ({\n  component: CookieUploadComponent,\n  props: args,\n})"
                },
                {
                    "name": "Upload",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/cookie-upload/cookie-upload.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.stories.ts",
                    "type": "Story<TemplatesListComponent>",
                    "defaultValue": "(args: TemplatesListComponent) => ({\n  component: TemplatesListComponent,\n  props: args,\n})"
                },
                {
                    "name": "TemplatesList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts",
                    "type": "Story<RequestInputBlockComponent>",
                    "defaultValue": "(args: RequestInputBlockComponent) => ({\n  component: RequestInputBlockComponent,\n  props: args,\n  template: `\n  <app-request-input-block [title]=\"title\" [isRequired]=\"isRequired\">\n    <app-request-text-input \n      [data]=\"{ id: '1', placeholderText: '', initialValue: 'Matvey Dunuk' }\"\n    >\n    </app-request-text-input>\n  </app-request-input-block>\n  `,\n})"
                },
                {
                    "name": "Template2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts",
                    "type": "Story<RequestInputBlockComponent>",
                    "defaultValue": "(args: RequestInputBlockComponent) => ({\n  component: RequestInputBlockComponent,\n  props: args,\n  template: `\n  <app-request-input-block [title]=\"title\" [isRequired]=\"isRequired\">\n    <app-request-text-area \n      [data]=\"{ id: '1', placeholderText: '', initialValue: 'Description' }\"\n    >\n    </app-request-text-area>\n  </app-request-input-block>\n  `,\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TextArea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template2.bind({})"
                }
            ],
            "src/app/pages-components/Data_Request_Form/Atoms/template-item/template-item.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/template-item/template-item.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/template-item/template-item.component.stories.ts",
                    "type": "Story<TemplateItemComponent>",
                    "defaultValue": "(args: TemplateItemComponent) => ({\n  component: TemplateItemComponent,\n  props: args,\n})"
                },
                {
                    "name": "TemplateItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/template-item/template-item.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Data_Request_Form/Atoms/text-editor/text-editor.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/text-editor/text-editor.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/text-editor/text-editor.component.stories.ts",
                    "type": "Story<TextEditorComponent>",
                    "defaultValue": "(args: TextEditorComponent) => ({\n  component: TextEditorComponent,\n  props: args,\n})"
                },
                {
                    "name": "TextEditor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/text-editor/text-editor.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Domains/Atoms/domains-search-input/domains-search-input.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/domains-search-input/domains-search-input.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Search",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/domains-search-input/domains-search-input.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/domains-search-input/domains-search-input.component.stories.ts",
                    "type": "Story<DomainsSearchInputComponent>",
                    "defaultValue": "(args: DomainsSearchInputComponent) => ({\n  component: DomainsSearchInputComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Domains/Atoms/formInput/formInput.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/formInput/formInput.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  placeholder: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/formInput/formInput.stories.ts",
                    "type": "Story<DomainsFormInputComponent>",
                    "defaultValue": "(args: DomainsFormInputComponent) => ({\n  component: DomainsFormInputComponent,\n  props: args,\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Domains/Atoms/formInput/formInput.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Plan_Builder/Atoms/plan-builder-checkbox/plan-builder-checkbox.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-checkbox/plan-builder-checkbox.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
                },
                {
                    "name": "Switch",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-checkbox/plan-builder-checkbox.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-checkbox/plan-builder-checkbox.component.stories.ts",
                    "type": "Story<PlanBuilderCheckboxComponent>",
                    "defaultValue": "(args: PlanBuilderCheckboxComponent) => ({\n  component: PlanBuilderCheckboxComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  items: { control: 'object' }\n}"
                },
                {
                    "name": "Range",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.stories.ts",
                    "type": "Story<PlanBuilderRangeComponent>",
                    "defaultValue": "(args: PlanBuilderRangeComponent) => ({\n  component: PlanBuilderRangeComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Plan_Builder/Atoms/plan-builder-secondary-button/plan-builder-secondary-button.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-secondary-button/plan-builder-secondary-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-secondary-button/plan-builder-secondary-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-secondary-button/plan-builder-secondary-button.component.stories.ts",
                    "type": "Story<PlanBuilderSecondaryButtonComponent>",
                    "defaultValue": "(args: PlanBuilderSecondaryButtonComponent) => ({\n  component: PlanBuilderSecondaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Plan_Builder/Atoms/plan-builder-toggler/plan-builder-toggler.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-toggler/plan-builder-toggler.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-toggler/plan-builder-toggler.component.stories.ts",
                    "type": "Story<PlanBuilderTogglerComponent>",
                    "defaultValue": "(args: PlanBuilderTogglerComponent) => ({\n  component: PlanBuilderTogglerComponent,\n  props: args,\n})"
                },
                {
                    "name": "Toggler",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-toggler/plan-builder-toggler.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Plan_Builder/Molecules/plan-builder-domains-select/plan-builder-domains-select.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-domains-select/plan-builder-domains-select.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
                },
                {
                    "name": "SelectDomains",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-domains-select/plan-builder-domains-select.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-domains-select/plan-builder-domains-select.component.stories.ts",
                    "type": "Story<PlanBuilderDomainsSelectComponent>",
                    "defaultValue": "(args: PlanBuilderDomainsSelectComponent) => ({\n  component: PlanBuilderDomainsSelectComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Policies_Customize/Atoms/dynamic-table/dynamic-table.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-table/dynamic-table.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Table",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-table/dynamic-table.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-table/dynamic-table.component.stories.ts",
                    "type": "Story<PoliciesDynamicTableComponent>",
                    "defaultValue": "(args: PoliciesDynamicTableComponent) => ({\n  component: PoliciesDynamicTableComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Policies_Customize/Atoms/dynamic-text/dynamic-text.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-text/dynamic-text.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-text/dynamic-text.component.stories.ts",
                    "type": "Story<PoliciesDynamicTextComponent>",
                    "defaultValue": "(args: PoliciesDynamicTextComponent) => ({\n  component: PoliciesDynamicTextComponent,\n  props: args,\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/dynamic-text/dynamic-text.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessAsimetricBig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessAsimetricSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts",
                    "type": "Story<PoliciesButtonComponent>",
                    "defaultValue": "(args: PoliciesButtonComponent) => ({\n  component: PoliciesButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "SectionsList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                    "type": "Story<PoliciesDynamicSectionsListComponent>",
                    "defaultValue": "(args: PoliciesDynamicSectionsListComponent) => ({\n  component: PoliciesDynamicSectionsListComponent,\n  props: args,\n})"
                },
                {
                    "name": "text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                    "type": "",
                    "defaultValue": "`For the purpose of this Privacy Policy, we are a Data Controller of your personal information. Our legal basis for collecting and using your personal information, as described in this Privacy Policy, depends on the information we collect and the specific context in which we collect it. We may process your personal information because:`"
                }
            ],
            "src/app/pages-components/Teams/Atoms/teams-tips/teams-tips.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/teams-tips/teams-tips.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/teams-tips/teams-tips.component.stories.ts",
                    "type": "Story<TeamsTipsComponent>",
                    "defaultValue": "(args: TeamsTipsComponent) => ({\n  component: TeamsTipsComponent,\n  props: args,\n})"
                },
                {
                    "name": "Tips",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/teams-tips/teams-tips.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Reports/Molecules/report-table/report-table.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/report-table/report-table.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Table",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/report-table/report-table.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/report-table/report-table.component.stories.ts",
                    "type": "Story<ReportTableComponent>",
                    "defaultValue": "(args: ReportTableComponent) => ({\n  component: ReportTableComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-secondary-button/billing-secondary-button.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-secondary-button/billing-secondary-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-secondary-button/billing-secondary-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-secondary-button/billing-secondary-button.component.stories.ts",
                    "type": "Story<BillingSecondaryButtonComponent>",
                    "defaultValue": "(args: BillingSecondaryButtonComponent) => ({\n  component: BillingSecondaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-select/billing-select.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-select/billing-select.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  initialValue: { control: 'text' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "SelectMonth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-select/billing-select.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SelectYear",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-select/billing-select.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-select/billing-select.component.stories.ts",
                    "type": "Story<BillingSelectComponent>",
                    "defaultValue": "(args: BillingSelectComponent) => ({\n  component: BillingSelectComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-reload-button/cookie-reload-button.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-reload-button/cookie-reload-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Reload",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-reload-button/cookie-reload-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-reload-button/cookie-reload-button.component.stories.ts",
                    "type": "Story<CookieReloadButtonComponent>",
                    "defaultValue": "(args: CookieReloadButtonComponent) => ({\n  component: CookieReloadButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-secondary-button/cookie-secondary-button.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-secondary-button/cookie-secondary-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-secondary-button/cookie-secondary-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-secondary-button/cookie-secondary-button.component.stories.ts",
                    "type": "Story<CookieSecondaryButtonComponent>",
                    "defaultValue": "(args: CookieSecondaryButtonComponent) => ({\n  component: CookieSecondaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-secondary-button/request-secondary-button.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-secondary-button/request-secondary-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-secondary-button/request-secondary-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-secondary-button/request-secondary-button.component.stories.ts",
                    "type": "Story<RequestSecondaryButtonComponent>",
                    "defaultValue": "(args: RequestSecondaryButtonComponent) => ({\n  component: RequestSecondaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-input/request-text-input.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-input/request-text-input.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-input/request-text-input.component.stories.ts",
                    "type": "Story<RequestTextInputComponent>",
                    "defaultValue": "(args: RequestTextInputComponent) => ({\n  component: RequestTextInputComponent,\n  props: args,\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-input/request-text-input.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-select-input/request-select-input.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-select-input/request-select-input.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Select",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-select-input/request-select-input.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-select-input/request-select-input.component.stories.ts",
                    "type": "Story<RequestSelectInputComponent>",
                    "defaultValue": "(args: RequestSelectInputComponent) => ({\n  component: RequestSelectInputComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-area/request-text-area.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-area/request-text-area.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-area/request-text-area.component.stories.ts",
                    "type": "Story<RequestTextAreaComponent>",
                    "defaultValue": "(args: RequestTextAreaComponent) => ({\n  component: RequestTextAreaComponent,\n  props: args,\n})"
                },
                {
                    "name": "TextArea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-area/request-text-area.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Policies_Customize/Atoms/buttons/dark-add-button/dark-add-button.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/dark-add-button/dark-add-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "SmallDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/dark-add-button/dark-add-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/dark-add-button/dark-add-button.component.stories.ts",
                    "type": "Story<PoliciesDarkAddButtonComponent>",
                    "defaultValue": "(args: PoliciesDarkAddButtonComponent) => ({\n  component: PoliciesDarkAddButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Policies_Customize/Atoms/buttons/simple-policy-generator-button/simple-policy-generator-button.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/simple-policy-generator-button/simple-policy-generator-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/simple-policy-generator-button/simple-policy-generator-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Policies_Customize/Atoms/buttons/simple-policy-generator-button/simple-policy-generator-button.component.stories.ts",
                    "type": "Story<SimplePolicyGeneratorButtonComponent>",
                    "defaultValue": "(args: SimplePolicyGeneratorButtonComponent) => ({\n  component: SimplePolicyGeneratorButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Teams/Atoms/buttons/teams-secondary-button/teams-secondary-button.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-secondary-button/teams-secondary-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  onActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-secondary-button/teams-secondary-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-secondary-button/teams-secondary-button.component.stories.ts",
                    "type": "Story<TeamsSecondaryButtonComponent>",
                    "defaultValue": "(args: TeamsSecondaryButtonComponent) => ({\n  component: TeamsSecondaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Teams/Atoms/buttons/teams-simple-button/teams-simple-button.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-simple-button/teams-simple-button.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-simple-button/teams-simple-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessAsimetric",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-simple-button/teams-simple-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/buttons/teams-simple-button/teams-simple-button.stories.ts",
                    "type": "Story<TeamsSimpleButtonComponent>",
                    "defaultValue": "(args: TeamsSimpleButtonComponent) => ({\n  component: TeamsSimpleButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Teams/Atoms/inputs/teams-input/teams-input.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/inputs/teams-input/teams-input.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  placeholder: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/inputs/teams-input/teams-input.stories.ts",
                    "type": "Story<TeamsInputComponent>",
                    "defaultValue": "(args: TeamsInputComponent) => ({\n  component: TeamsInputComponent,\n  props: args,\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/inputs/teams-input/teams-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/pages-components/Teams/Atoms/inputs/teams-search-input/teams-search-input.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/inputs/teams-search-input/teams-search-input.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Search",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/inputs/teams-search-input/teams-search-input.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/inputs/teams-search-input/teams-search-input.component.stories.ts",
                    "type": "Story<TeamsSearchInputComponent>",
                    "defaultValue": "(args: TeamsSearchInputComponent) => ({\n  component: TeamsSearchInputComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Teams/Atoms/inputs/teams-select-input/teams-select-input.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/inputs/teams-select-input/teams-select-input.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  initialValue: { control: 'text' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Select",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/inputs/teams-select-input/teams-select-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Teams/Atoms/inputs/teams-select-input/teams-select-input.stories.ts",
                    "type": "Story<TeamsSelectInput>",
                    "defaultValue": "(args: TeamsSelectInput) => ({\n  component: TeamsSelectInput,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Round",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.stories.ts",
                    "type": "Story<RoundChartComponent>",
                    "defaultValue": "(args: RoundChartComponent) => ({\n  component: RoundChartComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Atoms/buttons/reports-secondary-button/reports-secondary-button.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-secondary-button/reports-secondary-button.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-secondary-button/reports-secondary-button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/buttons/reports-secondary-button/reports-secondary-button.stories.ts",
                    "type": "Story<ReportsSecondaryButtonComponent>",
                    "defaultValue": "(args: ReportsSecondaryButtonComponent) => ({\n  component: ReportsSecondaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Atoms/inputs/reports-search-input/reports-search-input.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-search-input/reports-search-input.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Search",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-search-input/reports-search-input.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-search-input/reports-search-input.component.stories.ts",
                    "type": "Story<ReportsSearchInputComponent>",
                    "defaultValue": "(args: ReportsSearchInputComponent) => ({\n  component: ReportsSearchInputComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Atoms/inputs/reports-select-input-search/reports-select-input-search.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input-search/reports-select-input-search.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "SearchSelect",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input-search/reports-select-input-search.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SearchSelectIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input-search/reports-select-input-search.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input-search/reports-select-input-search.component.stories.ts",
                    "type": "Story<ReportsSelectInputSearchComponent>",
                    "defaultValue": "(args: ReportsSelectInputSearchComponent) => ({\n  component: ReportsSelectInputSearchComponent,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Atoms/inputs/reports-select-input/reports-select-input.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input/reports-select-input.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  initialValue: { control: 'text' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Select",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input/reports-select-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input/reports-select-input.stories.ts",
                    "type": "Story<ReportsSelectInput>",
                    "defaultValue": "(args: ReportsSelectInput) => ({\n  component: ReportsSelectInput,\n  props: args,\n})"
                }
            ],
            "src/app/pages-components/Reports/Atoms/inputs/reports-select-with-initial-value/reports-select-with-initial-value.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-with-initial-value/reports-select-with-initial-value.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "SelectWithInitialValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-with-initial-value/reports-select-with-initial-value.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages-components/Reports/Atoms/inputs/reports-select-with-initial-value/reports-select-with-initial-value.component.stories.ts",
                    "type": "Story<ReportsSelectWithInitialValueComponent>",
                    "defaultValue": "(args: ReportsSelectWithInitialValueComponent) => ({\n  component: ReportsSelectWithInitialValueComponent,\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/pages-components/Domains/Organisms/onboarding-list/helpers.ts": [
                {
                    "name": "debounce",
                    "file": "src/app/pages-components/Domains/Organisms/onboarding-list/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "func",
                            "type": ""
                        },
                        {
                            "name": "wait",
                            "type": ""
                        },
                        {
                            "name": "immediate",
                            "type": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "func",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "wait",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "immediate",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.ts": [
                {
                    "name": "debounce",
                    "file": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "func",
                            "type": ""
                        },
                        {
                            "name": "wait",
                            "type": ""
                        },
                        {
                            "name": "immediate",
                            "type": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "func",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "wait",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "immediate",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/atoms/status-steps-dynamic/helpers.ts": [
                {
                    "name": "detectClasses",
                    "file": "src/app/atoms/status-steps-dynamic/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "total"
                        },
                        {
                            "name": "active"
                        },
                        {
                            "name": "list"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "total",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "active",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "list",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/atoms/steps/helpers.ts": [
                {
                    "name": "detectClasses",
                    "file": "src/app/atoms/steps/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "num"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "num",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages-components/Reports/Molecules/charts/column-chart/helpers.ts": [
                {
                    "name": "getRandomColor",
                    "file": "src/app/pages-components/Reports/Molecules/charts/column-chart/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/pages-components/Reports/Molecules/charts/round-chart/helpers.ts": [
                {
                    "name": "getRandomColor",
                    "file": "src/app/pages-components/Reports/Molecules/charts/round-chart/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "gradientButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Gradient",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "infoButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "largeButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Back",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LightAssimetricButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "lightButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Back",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Plus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Mobile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/mobile-button/mobile-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MobileButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "primaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ZoomIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ZoomOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SecondaryBorderButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "secondaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "simpleButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Choose",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerBig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessAsimetric",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessAsimetricWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessBig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Transparent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ReportStatus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-report-status/card-report-status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardReportStatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-report-status/card-report-status.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardReports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-reports/card-reports.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardReportsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardWithCenterText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardWithCenterTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardWithColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardWithColumnsTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DonutChartCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardWithDonutChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SemicircleChart",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SemicircleChartCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DarkSelected",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DarkStatic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Selected",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Static",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/containers/gradient-border-container/gradient-border-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GradientBorderContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/containers/preview-container/preview-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/containers/preview-container/preview-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/containers/preview-container/preview-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/containers/preview-container/preview-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PreviewContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/counters/simple-counter/simple-counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SimpleCounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/filter-components/selected-item/selected-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectedItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Negative",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Positive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withBoldText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withBoldTextAndLink",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoundIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Circle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxCircleInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxInputDarkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxInputSimpleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxInputSwitchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Switch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "formInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Search",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectInputSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectInputSimpleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SimpleTextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/textarea/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CopyToClipboard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/textarea/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/textarea/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/textarea/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaCopyToClipboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/icon-links/icon-links.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconLinksComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "navLinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Highlited",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Main",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Scan",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/scan-animation/scan-animation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScanAnimationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "searchItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Semicirce",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/semicircle-chart/semicircle-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SemicircleChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/helpers.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "detectClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FivePoints",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FourPoints",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThreePoints",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatusStepsDynamicComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/helpers.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "detectClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "First",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Second",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/transparent-table/transparent-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TransparentTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Green",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/gradient-text/gradient-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GradientTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Green",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextWithAfterGradientLineComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Green",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextWithGradientBackComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/card-row/card-row.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/card-row/card-row.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Row",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/card-row/card-row.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/card-row/card-row.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardRowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenFifthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Module",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Fifth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenFirstComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "First",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenFourthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Module",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Fourth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenSecondComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Second",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenThirdComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Module",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Third",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WhiteRounded",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WhiteRoundedLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/composite-menu/composite-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompositeMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/composite-menu/composite-menu.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Item",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CompositeMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Date",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Navigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainNavigationMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MobileNavigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MobileMainNavigationMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Side",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tab",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/tab-menu/tab-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/roll-up/roll-up.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RollUpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "First",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/scan-screens/scan-screens.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScanScreensComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Green",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/status-bar/status-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatusBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/registration-form/registration-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegistrationFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RegistrationForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ScanReport",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScanReportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MobileItems",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SideItems",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/billing-card/billing-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/billing-card/billing-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/billing-card/billing-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/billing-card/billing-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BillingCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/billing-modal/billing-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Approve",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/billing-modal/billing-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/billing-modal/billing-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/billing-modal/billing-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/billing-modal/billing-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BillingModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/billing-title/billing-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/billing-title/billing-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/billing-title/billing-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Title",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/billing-title/billing-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BillingTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-danger-button/billing-danger-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-danger-button/billing-danger-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerShort",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-danger-button/billing-danger-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-danger-button/billing-danger-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-danger-button/billing-danger-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BillingDangerButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-asymmetrical-button/billing-primary-asymmetrical-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Asymmetrical",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-asymmetrical-button/billing-primary-asymmetrical-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-asymmetrical-button/billing-primary-asymmetrical-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-asymmetrical-button/billing-primary-asymmetrical-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BillingPrimaryAsymmetricalButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-button/billing-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-button/billing-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-button/billing-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-primary-button/billing-primary-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BillingPrimaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-secondary-button/billing-secondary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-secondary-button/billing-secondary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-secondary-button/billing-secondary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/buttons/billing-secondary-button/billing-secondary-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BillingSecondaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-input/billing-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CVV",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-input/billing-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-input/billing-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-input/billing-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-input/billing-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BillingInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-select/billing-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-select/billing-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectMonth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-select/billing-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectYear",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-select/billing-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/inputs/billing-select/billing-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BillingSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Payment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BillingPaymentTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Item",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIVE_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Atoms/tables/billing-payment-table/billing-payment-table.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INACTIVE_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Invoices",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BillingInvoicesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Item",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-invoices/billing-invoices.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PaymentForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BillingPaymentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TableItem",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MONTHES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-payment/billing-payment.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SMALL_MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BusinessOneDomain",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BusinessSeveralDomains",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Freemium",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BillingPlanComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-plan/billing-plan.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BillingWarningComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Billing_Preferences/Molecules/billing-warning/billing-warning.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-primary-button/cookie-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-primary-button/cookie-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-primary-button/cookie-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-primary-button/cookie-primary-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CookiePrimaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-reload-button/cookie-reload-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-reload-button/cookie-reload-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Reload",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-reload-button/cookie-reload-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-reload-button/cookie-reload-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CookieReloadButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-secondary-button/cookie-secondary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-secondary-button/cookie-secondary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-secondary-button/cookie-secondary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/buttons/cookie-secondary-button/cookie-secondary-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CookieSecondaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColorPicker",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CookieColorPickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-color-picker/cookie-color-picker.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INITIAL_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Add",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "First",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Second",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Third",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-design-card/cookie-design-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CookieDesignCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Bottom",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Center",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Left",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftCorner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-layout-card/cookie-layout-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CookieLayoutCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-select-input/cookie-select-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ChooseShape",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-select-input/cookie-select-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-select-input/cookie-select-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-select-input/cookie-select-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CookieSelectInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-title/cookie-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-title/cookie-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-title/cookie-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Title",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-title/cookie-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CookieTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-upload/cookie-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-upload/cookie-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-upload/cookie-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Upload",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Atoms/cookie-upload/cookie-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CookieUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Editor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CookieEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/cookie-editor/cookie-editor.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Design",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CookieDesignCardRowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIVE_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CARD_WIDTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MARGIN_RIGHT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SCROLL_STEP",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-design-card-row/cookie-design-card-row.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STATIC_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-layout-card-row/cookie-layout-card-row.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Layout",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-layout-card-row/cookie-layout-card-row.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-layout-card-row/cookie-layout-card-row.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-layout-card-row/cookie-layout-card-row.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CookieLayoutCardRowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Cookie_Banner/Molecules/rows/cookie-layout-card-row/cookie-layout-card-row.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Item",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-primary-button/request-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-primary-button/request-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-primary-button/request-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-primary-button/request-primary-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RequestPrimaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-secondary-button/request-secondary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-secondary-button/request-secondary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-secondary-button/request-secondary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/buttons/request-secondary-button/request-secondary-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RequestSecondaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-select-input/request-select-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-select-input/request-select-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Select",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-select-input/request-select-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-select-input/request-select-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RequestSelectInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-select-input/request-select-input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Data",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-area/request-text-area.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-area/request-text-area.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-area/request-text-area.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextArea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-area/request-text-area.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RequestTextAreaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-area/request-text-area.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Data",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-input/request-text-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-input/request-text-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-input/request-text-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-input/request-text-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RequestTextInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/inputs/request-text-input/request-text-input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Data",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/template-item/template-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/template-item/template-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/template-item/template-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/template-item/template-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TemplateItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/text-editor/text-editor.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/text-editor/text-editor.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/text-editor/text-editor.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextEditor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Atoms/text-editor/text-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextArea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Molecules/request-input-block/request-input-block.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RequestInputBlockComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplatesList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TemplatesListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GRID_GAP",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MAX_GRID_COLUMN_NUMBER",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MIN_GRID_COLUMN_WIDTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Molecules/templates-list/templates-list.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PADDING",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Form",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RequestFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Data",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Data_Request_Form/Organisms/request-form/request-form.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/domains-svg-button/domains-svg-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/domains-svg-button/domains-svg-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/domains-svg-button/domains-svg-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Save",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/domains-svg-button/domains-svg-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/domains-svg-button/domains-svg-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DomainsSvgButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MutableDanger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DomainsMutableDangerButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HOVER_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-danger-button/mutable-danger-button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STATIC_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MutableGradientIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DomainsMutableGradientIconButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HOVER_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STATIC_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Options",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-light-button/mutable-light-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DomainsMutableLightButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Edit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Reports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/mutable-primary-button/mutable-primary-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DomainsMutablePrimaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DomainsSimpleButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerBig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessAsimetric",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessBig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checkbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DomainsCheckboxMutableGradientComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIVE_CLASS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/checkbox-mutable-gradient/checkbox-mutable-gradient.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INACTIVE_CLASS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/domains-search-input/domains-search-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/domains-search-input/domains-search-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Search",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/domains-search-input/domains-search-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/domains-search-input/domains-search-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DomainsSearchInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/formInput/formInput.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DomainsFormInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Add",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Approve",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Atoms/modals/approve-modal/approve-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DomainsApproveModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DomainsOnboardingCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BIG_MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HIGHLITED_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SMALL_MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STATIC_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Molecules/onboarding-card/onboarding-card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TEXT_STATIC_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Organisms/onboarding-list/helpers.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "debounce",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnboardingList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DomainsOnboardingListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/44",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Domain",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Domains/Organisms/onboarding-list/onboarding-list.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SMALL_MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-checkbox/plan-builder-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-checkbox/plan-builder-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Switch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-checkbox/plan-builder-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-checkbox/plan-builder-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlanBuilderCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-primary-button/plan-builder-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-primary-button/plan-builder-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-primary-button/plan-builder-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-primary-button/plan-builder-primary-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlanBuilderPrimaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Range",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlanBuilderRangeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MOBILE_WIDTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "THUMB_WIDTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-range/plan-builder-range.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VALUE_WIDTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-secondary-button/plan-builder-secondary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-secondary-button/plan-builder-secondary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-secondary-button/plan-builder-secondary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-secondary-button/plan-builder-secondary-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlanBuilderSecondaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-toggler/plan-builder-toggler.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-toggler/plan-builder-toggler.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-toggler/plan-builder-toggler.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Toggler",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Atoms/plan-builder-toggler/plan-builder-toggler.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlanBuilderTogglerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlanBuilderCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIVE_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DESKTOP_WIDTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MOBILE_WIDTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-card/plan-builder-card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STATIC_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-contact-us/plan-builder-contact-us.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ContactUs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-contact-us/plan-builder-contact-us.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-contact-us/plan-builder-contact-us.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-contact-us/plan-builder-contact-us.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlanBuilderContactUsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-domains-select/plan-builder-domains-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-domains-select/plan-builder-domains-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectDomains",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-domains-select/plan-builder-domains-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-domains-select/plan-builder-domains-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlanBuilderDomainsSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-plan/plan-builder-plan.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Plan",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-plan/plan-builder-plan.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-plan/plan-builder-plan.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Molecules/plan-builder-plan/plan-builder-plan.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlanBuilderPlanComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardsList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlanBuilderCardsListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Card",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CARD_MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Plan_Builder/Organisms/plan-builder-cards-list/plan-builder-cards-list.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/buttons/dark-add-button/dark-add-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/buttons/dark-add-button/dark-add-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SmallDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/buttons/dark-add-button/dark-add-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/buttons/dark-add-button/dark-add-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoliciesDarkAddButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/buttons/simple-policy-generator-button/simple-policy-generator-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/buttons/simple-policy-generator-button/simple-policy-generator-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/buttons/simple-policy-generator-button/simple-policy-generator-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/buttons/simple-policy-generator-button/simple-policy-generator-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SimplePolicyGeneratorButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BigLight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SmallLight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/buttons/small-light-add-button/small-light-add-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoliciesSmallLightAddButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/dynamic-list/dynamic-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "List",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/dynamic-list/dynamic-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/dynamic-list/dynamic-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/dynamic-list/dynamic-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoliciesDynamicListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/dynamic-table/dynamic-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/dynamic-table/dynamic-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Table",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/dynamic-table/dynamic-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/dynamic-table/dynamic-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoliciesDynamicTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/dynamic-text/dynamic-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/dynamic-text/dynamic-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/dynamic-text/dynamic-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Atoms/dynamic-text/dynamic-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoliciesDynamicTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Molecules/customized-element/add-dynamic-component/add-dynamic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Molecules/customized-element/add-dynamic-component/add-dynamic.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Molecules/customized-element/add-dynamic-component/add-item.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AddItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Molecules/customized-element/add-dynamic-component/add.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AddDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Molecules/customized-element/add-dynamic-component/add.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AddService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Molecules/customized-element/customized-element.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DynamicSection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Molecules/customized-element/customized-element.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Molecules/customized-element/customized-element.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Molecules/customized-element/customized-element.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoliciesCustomizedElementComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Molecules/customized-element/helpers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getEditedDataByType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Molecules/customized-element/helpers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getInitialDataByType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SectionsList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoliciesDynamicSectionsListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Customize/Organisms/dynamic-sections-list/dynamic-sections-list.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessAsimetricBig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessAsimetricSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/buttons/policies-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoliciesButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checkbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/checkbox-input-dark/checkbox-input-dark.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoliciesCheckboxInputDarkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/color-picker/color-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColorPicker",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/color-picker/color-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/color-picker/color-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/color-picker/color-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoliciesColorPickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BigDarkSelected",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BigDarkStatic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Selected",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Static",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/gradient-border-container/gradient-border-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoliciesGradientBorderContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/preview-container/preview-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/preview-container/preview-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/preview-container/preview-container.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/preview-container/preview-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoliciesPreviewContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ChooseLanguage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ChoosePosition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ChooseShape",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/select-input/select-input-with-initial-value/select-input-with-initial-value.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoliciesSelectInputWithInitialValueComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CopyToClipboardTextarea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Policies_Generator/Atoms/textarea-copy-to-clipboard/textarea-copy-to-clipboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoliciesTextareaCopyToClipboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerBig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessBig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-button/reports-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-info-button/reports-info-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsInfoButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-info-button/reports-info-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-info-button/reports-info-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-info-button/reports-info-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-light-button/reports-light-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsLightButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-light-button/reports-light-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Back",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-light-button/reports-light-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-light-button/reports-light-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-primary-button/reports-primary-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsPrimaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-primary-button/reports-primary-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-primary-button/reports-primary-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-primary-button/reports-primary-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-secondary-button/reports-secondary-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsSecondaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-secondary-button/reports-secondary-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-secondary-button/reports-secondary-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/buttons/reports-secondary-button/reports-secondary-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-checkbox-input/reports-checkbox-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checkbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-checkbox-input/reports-checkbox-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-checkbox-input/reports-checkbox-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-checkbox-input/reports-checkbox-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsCheckboxInput",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-search-input/reports-search-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-search-input/reports-search-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Search",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-search-input/reports-search-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-search-input/reports-search-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsSearchInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input-search/reports-select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input-search/reports-select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchSelect",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input-search/reports-select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchSelectIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input-search/reports-select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input-search/reports-select-input-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsSelectInputSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input/reports-select-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsSelectInput",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input/reports-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input/reports-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Select",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-select-input/reports-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-select-with-initial-value/reports-select-with-initial-value.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-select-with-initial-value/reports-select-with-initial-value.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectWithInitialValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-select-with-initial-value/reports-select-with-initial-value.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/inputs/reports-select-with-initial-value/reports-select-with-initial-value.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsSelectWithInitialValueComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsIconLinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIVE_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HOVER_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/links/reports-icon-links/reports-icon-link.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STATIC_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsTextLinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Highlited",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Static",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/links/reports-text-link/reports-text-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Thin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Filter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Filter2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/report-modal/report-modal.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InputsData",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accept",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Decline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NonSelected",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportStatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACCEPT_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DECLINE_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Atoms/report-status/report-status.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NON_SELECTED_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Column",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColumnChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CONTAINER_BOTTOM_PADDING",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CONTAINER_LEFT_PADDING",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/column-chart/column-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "YAXIS_BLOCK_WIDTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/column-chart/helpers.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "getRandomColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Linear",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinearChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AXIS_LABEL_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BORDER_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LEGEND_LABEL_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/linear-chart/linear-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MARKER_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AfricaCodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AsiaCodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AustraliaCodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EuropeCodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NorthAmericaCodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/map-chart/countriesCodes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SouthAmericaCodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Map",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MapChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Countries",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Country",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COUNTRY_HOVER_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MAP_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/map-chart/map-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SELECTED_COUNTRY_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/round-chart/helpers.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "getRandomColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Round",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoundChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Data",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MOBILE_WIDTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TIPS_BLOCK_MARGIN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TIPS_ITEM_HEIGHT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TIPS_ITEM_MARGIN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/charts/round-chart/round-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TIPS_WIDTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/menu/reports-date-menu/reports-date-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsDateMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/menu/reports-date-menu/reports-date-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Date",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/menu/reports-date-menu/reports-date-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/menu/reports-date-menu/reports-date-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/menu/reports-menu/reports-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/menu/reports-menu/reports-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/menu/reports-menu/reports-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/menu/reports-menu/reports-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/menu/reports-mobile-menu/reports-mobile-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Mobile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/menu/reports-mobile-menu/reports-mobile-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/menu/reports-mobile-menu/reports-mobile-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/menu/reports-mobile-menu/reports-mobile-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsMobileMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/report-table/helpers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formatDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/report-table/report-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/report-table/report-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Table",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/report-table/report-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/report-table/report-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/report-table/report-table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataItem",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Reports/Molecules/report-table/report-table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HeaderItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MutableDanger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsMutableDangerButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HOVER_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-danger-button/teams-mutable-danger-button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STATIC_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MutableGradientIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsMutableGradientIconButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HOVER_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-gradient-icon-button/teams-mutable-gradient-icon-button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STATIC_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-primary-button/teams-mutable-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-primary-button/teams-mutable-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-primary-button/teams-mutable-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-mutable-primary-button/teams-mutable-primary-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsMutablePrimaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-secondary-button/teams-secondary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-secondary-button/teams-secondary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-secondary-button/teams-secondary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-secondary-button/teams-secondary-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsSecondaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-simple-button/teams-simple-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsSimpleButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-simple-button/teams-simple-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-simple-button/teams-simple-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-simple-button/teams-simple-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessAsimetric",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-simple-button/teams-simple-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-svg-button/teams-svg-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-svg-button/teams-svg-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-svg-button/teams-svg-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Save",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-svg-button/teams-svg-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/buttons/teams-svg-button/teams-svg-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsSvgButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckboxOnActiveCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckboxOnInactiveCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsCheckboxMutableGradientComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTIVE_CLASS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-checkbox-mutable-gradient/teams-checkbox-mutable-gradient.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INACTIVE_CLASS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-input/teams-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-input/teams-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-input/teams-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-input/teams-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-search-input/teams-search-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-search-input/teams-search-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Search",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-search-input/teams-search-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-search-input/teams-search-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsSearchInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-select-input/teams-select-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsSelectInput",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-select-input/teams-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-select-input/teams-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Select",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/inputs/teams-select-input/teams-select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Add",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Rename",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/modals/teams-modal/teams-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/teams-tips/teams-tips.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/teams-tips/teams-tips.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/teams-tips/teams-tips.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tips",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Atoms/teams-tips/teams-tips.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsTipsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/32",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BIG_MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HIGHLITED_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SMALL_MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STATIC_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Molecules/teams-card/teams-card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TEXT_STATIC_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsCardsListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/49",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "debounce",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages-components/Teams/Organisms/teams-cards-list/teams-cards-list.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SMALL_MOBILE_VIEW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}